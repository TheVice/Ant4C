find_cmake:

  tags:
    - windows

  script: |
    if (-not(Test-Path -Path .\cmake.env))
    {
    [string[]]$cmakes = @()
    $cmakes += Get-ChildItem -File -Filter cmake.exe -Name -Path "${env:ProgramFiles(x86)}" -Recurse

    if (0 -lt $cmakes.Count)
    {
      $cmake = Join-Path -ChildPath $cmakes[0] -Path "${env:ProgramFiles(x86)}"
    }
    else
    {
      $cmakes += Get-ChildItem -File -Filter cmake.exe -Name -Path "${env:ProgramFiles}" -Recurse

      if (0 -lt $cmakes.Count)
      {
        $cmake = Join-Path -ChildPath $cmakes[0] -Path "${env:ProgramFiles}"
      }
      else
      {
        $arguments = "Could not find cmake in any of the '${env:ProgramFiles(x86)}' and '${env:ProgramFiles}' subfolders."
        throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList $arguments)
      }
    }

    Out-File -FilePath .\cmake.env -InputObject $cmake -NoNewline -Force
    }

  cache:
    key: windows-build-cache
    paths:
    - cmake.env

build_with_MSVC:

  needs: [ find_cmake ]

  tags:
    - windows

  parallel:
    matrix:
      - TargetPlatform: [ x64, Win32 ]

  script: |
    if (-not(Test-Path -Path .\cmake.env))
    {
      throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList "Could not find .\cmake.env.")
    }

    $cmake = Get-Content -Path .\cmake.env -Raw

    if (-not(Test-Path -Path $cmake))
    {
      throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList "Could not find cmake at the location '$cmake'.")
    }

    Set-Alias -Name cmake -Value $cmake

    git fetch origin windows-latest
    git checkout origin/windows-latest -- .

    $build_directory = Join-Path -ChildPath "build-msvc-$env:TargetPlatform" -Path "$env:CI_PROJECT_DIR"

    cmake -S $env:CI_PROJECT_DIR -B $build_directory -A $env:TargetPlatform -DLIBRARY_BINARY_DIR="${env:CI_PROJECT_DIR}\windows-latest" -DPROGRAM_VERSION=$env:CI_COMMIT_TIMESTAMP

    if ($LastExitCode -ne 0)
    {
      $message = "Exit code of $cmake is not equal to the '0' instead it - {0}." -f $LastExitCode
      throw (New-Object -TypeName System.Exception -ArgumentList $message)
    }

    $tests_xml = Join-Path -ChildPath "tests.xml" -Path "${env:CI_PROJECT_DIR}"
    cd $build_directory

    ForEach ($build_type in ("Debug", "Release"))
    {
      cmake --build $build_directory --config $build_type --parallel $env:NUMBER_OF_PROCESSORS

      if ($LastExitCode -ne 0)
      {
        $message = "Exit code of $cmake is not equal to the '0' instead it - {0}." -f $LastExitCode
        throw (New-Object -TypeName System.Exception -ArgumentList $message)
      }

      $ant4c = Join-Path -ChildPath "$build_type\ant4c.exe" -Path $build_directory
      & "$ant4c"

      if ($LastExitCode -ne 0)
      {
        $message = "Exit code of $ant4c is not equal to the '0' instead it - {0}." -f $LastExitCode
        throw (New-Object -TypeName System.Exception -ArgumentList $message)
      }

      $ant4c_tests = Join-Path -ChildPath "$build_type\ant4c_tests.exe" -Path $build_directory

      if (Test-Path -Path "$ant4c_tests")
      {
        $tests_exec_app_exe = Join-Path -ChildPath "$build_type\tests_exec_app.exe" -Path $build_directory

        if (-not(Test-Path -Path "$tests_exec_app_exe"))
        {
          Get-ChildItem -Path $build_directory -Recurse
          $message = "File '{0}' not exists. Tests will not run." -f $tests_exec_app_exe
          throw (New-Object -TypeName System.Exception -ArgumentList $message)
        }

        $test_output = "$CI_PROJECT_DIR\build-msvc-$TargetPlatform\report-msvc-$TargetPlatform-$build_type.xml"
        & "$ant4c_tests" --tests_xml=$tests_xml --tests_exec_app=$tests_exec_app_exe --tests_base_directory=${env:CI_PROJECT_DIR} --gtest_output=""xml:$test_output""

        if ($LastExitCode -ne 0)
        {
          $message = "Exit code of $ant4c_tests is not equal to the '0' instead it - {0}." -f $LastExitCode
          throw (New-Object -TypeName System.Exception -ArgumentList $message)
        }
      }
      else
      {
        $message = "File '{0}' not exists. Tests will not run." -f $ant4c_tests
        Write-Warning -Message $message
        Get-ChildItem -Path $build_directory -Recurse
      }
    }

  artifacts:
    paths:
      - $CI_PROJECT_DIR\build-msvc-$TargetPlatform
    when: always
    reports:
      junit: $CI_PROJECT_DIR\build-msvc-$TargetPlatform\report-msvc*.xml

  cache:
    key: windows-build-cache
    paths:
    - cmake.env

build_with_MinGW:

  needs: [ find_cmake ]

  tags:
    - windows

  parallel:
    matrix:
      - BUILD_TYPE: [ Debug, Release ]

  script: |
    if (-not(Test-Path -Path .\cmake.env))
    {
      throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList "Could not find .\cmake.env.")
    }

    $cmake = Get-Content -Path .\cmake.env -Raw

    if (-not(Test-Path -Path $cmake))
    {
      throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList "Could not find cmake at the location '$cmake'.")
    }

    git fetch origin windows-latest
    git checkout origin/windows-latest -- .

    $paths = "$env:PATH"
    [string[]]$mingw_makes = @()
    $mingw_makes += Get-ChildItem -File -Include mingw32-make.exe -Path $env:ProgramFiles\*\bin\*.* -Recurse
    $make_number = 0

    foreach($mingw_make in $mingw_makes)
    {
      $directory_path = Split-Path -Path $mingw_make -Parent
      $env:PATH = "$paths;$directory_path"

      $build_directory = Join-Path -ChildPath "build-MinGW-${env:BUILD_TYPE}\$make_number" -Path "${env:CI_PROJECT_DIR}"

      $arguments = "-S {0} -B {1} -G {2} -DCMAKE_BUILD_TYPE={3} -DLIBRARY_BINARY_DIR={0}\windows-latest -DPROGRAM_VERSION={4}" -f ${env:CI_PROJECT_DIR}, $build_directory, '"MinGW Makefiles"', ${env:BUILD_TYPE}, ${env:CI_COMMIT_TIMESTAMP}
      $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

      if ($process.ExitCode -ne 0)
      {
        $arguments = "Exit code of $cmake is not equal to the '0' instead it - {0}." -f $process.ExitCode
        throw (New-Object -TypeName System.Exception -ArgumentList $arguments)
      }

      $arguments = "--build {0} --config ${env:BUILD_TYPE} --parallel $env:NUMBER_OF_PROCESSORS" -f $build_directory
      $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

      if ($process.ExitCode -ne 0)
      {
        $arguments = "Exit code of $cmake is not equal to the '0' instead it - {0}." -f $process.ExitCode
        throw (New-Object -TypeName System.Exception -ArgumentList $arguments)
      }

      cd $build_directory

      $ant4c = Join-Path -ChildPath "ant4c.exe" -Path $build_directory
      $process = Start-Process -FilePath "$ant4c" -NoNewWindow -Wait -PassThru

      if ($process.ExitCode -ne 0)
      {
        $arguments = "Exit code of $ant4c is not equal to the '0' instead it - {0}." -f $process.ExitCode
        throw (New-Object -TypeName System.Exception -ArgumentList $arguments)
      }

      $tests_xml = Join-Path -ChildPath "tests.xml" -Path "${env:CI_PROJECT_DIR}"
      $ant4c_tests = Join-Path -ChildPath "ant4c_tests.exe" -Path $build_directory

      if (Test-Path -Path "$ant4c_tests")
      {
        $test_output = "$CI_PROJECT_DIR\build-MinGW-$BUILD_TYPE\report-MinGW-$BUILD_TYPE-$make_number.xml"
        $tests_exec_app_exe = Join-Path -ChildPath "tests_exec_app.exe" -Path $build_directory
        $arguments = "--tests_xml={0} --tests_exec_app={1} --tests_base_directory={2} --gtest_output=""xml:{3}""" -f $tests_xml, $tests_exec_app_exe, ${env:CI_PROJECT_DIR}, $test_output
        $process = Start-Process -FilePath "$ant4c_tests" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

        if ($process.ExitCode -ne 0)
        {
          $arguments = "Exit code of $ant4c_tests is not equal to the '0' instead it - {0}." -f $process.ExitCode
          throw (New-Object -TypeName System.Exception -ArgumentList $arguments)
        }
      }
      else
      {
        $message = "File '{0}' not exists. Tests will not run." -f $ant4c_tests
        Write-Warning -Message $message
        Get-ChildItem -Path $build_directory -Recurse
      }

      $make_number = $make_number + 1
    }

  artifacts:
    paths:
      - $CI_PROJECT_DIR\build-MinGW-$BUILD_TYPE
    when: always
    reports:
      junit: $CI_PROJECT_DIR\build-MinGW-$BUILD_TYPE\report-MinGW-$BUILD_TYPE*.xml

  cache:
    key: windows-build-cache
    paths:
    - cmake.env

build_on_unix_like:

  tags:
    - unix-like

  parallel:
    matrix:
      - BUILD_TYPE: [ Debug, Release ]

  script: |
    if [ -n "$( echo $CI_RUNNER_TAGS | sed -n '/ubuntu/p')" ]; then
      git fetch origin ubuntu-latest
      git checkout origin/ubuntu-latest -- :\(top\)
      cmake -S $CI_PROJECT_DIR -B $CI_PROJECT_DIR/build-$BUILD_TYPE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLIBRARY_BINARY_DIR=$CI_PROJECT_DIR/ubuntu-latest -DPROGRAM_VERSION=$CI_COMMIT_TIMESTAMP
    else
      cmake -S $CI_PROJECT_DIR -B $CI_PROJECT_DIR/build-$BUILD_TYPE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPROGRAM_VERSION=$CI_COMMIT_TIMESTAMP
    fi

    cmake --build $CI_PROJECT_DIR/build-$BUILD_TYPE --config $BUILD_TYPE

    cd $CI_PROJECT_DIR/build-$BUILD_TYPE
    if [ -f $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c ]; then $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c; fi
    if [ -f $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c_tests ]; then $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c_tests --tests_xml=$CI_PROJECT_DIR/tests.xml --tests_exec_app=$CI_PROJECT_DIR/build-$BUILD_TYPE/tests_exec_app --tests_base_directory=$CI_PROJECT_DIR --gtest_output="xml:$CI_PROJECT_DIR/build-$BUILD_TYPE/report-$BUILD_TYPE.xml"; fi
    if [ ! -f $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c_tests ]; then echo "File '"$CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c_tests"' not exists. Tests will not run." ; ls -lah ; fi

  artifacts:
    paths:
      - $CI_PROJECT_DIR/build-$BUILD_TYPE
    when: always
    reports:
      junit: $CI_PROJECT_DIR/build-$BUILD_TYPE/report-$BUILD_TYPE.xml

ant4c.net.framework.module:

  needs: [ find_cmake, build_with_MSVC ]

  rules:
    - changes:
        - modules/ant4c.net.framework/**/*

  tags:
    - windows

  parallel:
    matrix:
      - TargetPlatform: [ x64, Win32 ]

  script: |
    if (-not(Test-Path -Path .\cmake.env))
    {
      throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList "Could not find .\cmake.env.")
    }

    $cmake = Get-Content -Path .\cmake.env -Raw

    if (-not(Test-Path -Path $cmake))
    {
      throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList "Could not find cmake at the location '$cmake'.")
    }

    Set-Alias -Name cmake -Value $cmake

    git fetch origin windows-latest
    git checkout origin/windows-latest -- .

    $build_directory = Join-Path -ChildPath "build-msvc-$env:TargetPlatform" -Path "$env:CI_PROJECT_DIR"
    $redist_directory = Join-Path -ChildPath "Redist" -Path "$build_directory"

    cmake -S $env:CI_PROJECT_DIR -B $build_directory -A $env:TargetPlatform -DLIBRARY_BINARY_DIR="${env:CI_PROJECT_DIR}\windows-latest" -DPROGRAM_VERSION=$env:CI_COMMIT_TIMESTAMP -DCMAKE_INSTALL_PREFIX="$redist_directory"

    if ($LastExitCode -ne 0)
    {
      $message = "Exit code of $cmake is not equal to the '0' instead it - {0}." -f $LastExitCode
      throw (New-Object -TypeName System.Exception -ArgumentList $message)
    }

    ForEach ($build_type in ("Debug", "Release"))
    {
      cmake --build $build_directory --config $build_type --parallel $env:NUMBER_OF_PROCESSORS --target install

      if ($LastExitCode -ne 0)
      {
        $message = "Exit code of $cmake is not equal to the '0' instead it - {0}." -f $LastExitCode
        throw (New-Object -TypeName System.Exception -ArgumentList $message)
      }

      $destination = "{0}_{1}" -f $redist_directory, $build_type
      Move-Item -Path $redist_directory -Destination $destination
    }

    Move-Item -Path "$build_directory\CMakeCache.txt" -Destination "$build_directory\CMakeCache.txt_"

    $source_directory = Join-Path -ChildPath "modules\ant4c.net.framework" -Path "$env:CI_PROJECT_DIR"
    cmake -S "$source_directory" -B $build_directory -A $env:TargetPlatform -DLIBRARY_BINARY_DIR="${env:CI_PROJECT_DIR}\windows-latest" -DANT4C_PATH="$destination"
    cd $build_directory

    ForEach ($build_type in ("Debug", "Release"))
    {
      cmake --build $build_directory --config $build_type --parallel $env:NUMBER_OF_PROCESSORS

      if ($LastExitCode -ne 0)
      {
        $message = "Exit code of $cmake is not equal to the '0' instead it - {0}." -f $LastExitCode
        throw (New-Object -TypeName System.Exception -ArgumentList $message)
      }

      $ant4c_tests = Join-Path -ChildPath "$build_type\tests_ant4c.net.framework.module.exe" -Path $build_directory

      if (Test-Path -Path "$ant4c_tests")
      {
        $test_output = "$CI_PROJECT_DIR\build-msvc-$TargetPlatform\report-msvc-net.framework.module-$TargetPlatform-$build_type.xml"
        & "$ant4c_tests" --gtest_output=""xml:$test_output""

        if ($LastExitCode -ne 0)
        {
          $message = "Exit code of $ant4c_tests is not equal to the '0' instead it - {0}." -f $LastExitCode
          throw (New-Object -TypeName System.Exception -ArgumentList $message)
        }
      }
      else
      {
        $message = "File '{0}' not exists. Tests will not run." -f $ant4c_tests
        Write-Warning -Message $message
        Get-ChildItem -Path $build_directory -Recurse
      }
    }

  artifacts:
    paths:
      - $CI_PROJECT_DIR\build-msvc-$TargetPlatform
    when: always
    reports:
      junit: $CI_PROJECT_DIR\build-msvc-$TargetPlatform\report-msvc*.xml

  cache:
    key: windows-build-cache
    paths:
    - cmake.env
