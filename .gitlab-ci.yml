build_with_MSVC:

  tags:
    - windows

  parallel:
    matrix:
      - TargetPlatform: [x64, Win32]

  script: |
    git fetch origin windows-latest
    git checkout origin/windows-latest -- .

    [string[]]$cmakes = @()
    $cmakes += Get-ChildItem -File -Filter cmake.exe -Name -Path "${env:ProgramFiles(x86)}" -Recurse

    if (0 -lt $cmakes.Count)
    {
      $cmake = Join-Path -ChildPath $cmakes[0] -Path "${env:ProgramFiles(x86)}"
    }
    else
    {
      $cmakes += Get-ChildItem -File -Filter cmake.exe -Name -Path "${env:ProgramFiles}" -Recurse

      if (0 -lt $cmakes.Count)
      {
        $cmake = Join-Path -ChildPath $cmakes[0] -Path "${env:ProgramFiles}"
      }
      else
      {
        throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList "Could not find cmake in any of the '${env:ProgramFiles(x86)}' and '${env:ProgramFiles}' subfolders.")
      }
    }

    $build_directory = Join-Path -ChildPath "build-${env:TargetPlatform}" -Path "${env:CI_PROJECT_DIR}"
    $arguments = "-E make_directory {0}" -f $build_directory
    $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    cd "$build_directory"

    $arguments = "{0} -A {1} -DLIBRARY_BINARY_DIR={0}/windows-latest" -f ${env:CI_PROJECT_DIR}, "${env:TargetPlatform}"
    $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    $arguments = "--build . --config Debug --parallel $env:NUMBER_OF_PROCESSORS"
    $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    $arguments = "--build . --config Release --parallel $env:NUMBER_OF_PROCESSORS"
    $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    $build_directory_Debug = Join-Path -ChildPath "Debug" -Path "$build_directory"

    $ant4c_Debug = Join-Path -ChildPath "ant4c.exe" -Path "$build_directory_Debug"
    $process = Start-Process -FilePath "$ant4c_Debug" -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    $build_directory_Release = Join-Path -ChildPath "Release" -Path "$build_directory"

    $ant4c_Release = Join-Path -ChildPath "ant4c.exe" -Path "$build_directory_Release"
    $process = Start-Process -FilePath "$ant4c_Release" -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    $tests_xml = Join-Path -ChildPath "tests.xml" -Path "${env:CI_PROJECT_DIR}"

    $ant4c_tests_Debug = Join-Path -ChildPath "ant4c_tests.exe" -Path "$build_directory_Debug"

    if (Test-Path -Path "$ant4c_tests_Debug")
    {
      $tests_exec_app_exe = Join-Path -ChildPath "tests_exec_app.exe" -Path "$build_directory_Debug"
      $arguments = "--tests_xml={0} --tests_exec_app={1} --tests_base_directory={2}" -f $tests_xml, $tests_exec_app_exe, ${env:CI_PROJECT_DIR}
      $process = Start-Process -FilePath "$ant4c_tests_Debug" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }
    }
    else
    {
      $message = "File '{0}' not exists. Tests will not run." -f $ant4c_tests_Debug
      Write-Warning -Message $message
      Get-ChildItem -Path "$build_directory_Debug" -Recurse
    }

    $ant4c_tests_Release = Join-Path -ChildPath "ant4c_tests.exe" -Path "$build_directory_Release"

    if (Test-Path -Path "$ant4c_tests_Release")
    {
      $tests_exec_app_exe = Join-Path -ChildPath "tests_exec_app.exe" -Path "$build_directory_Release"
      $arguments = "--tests_xml={0} --tests_exec_app={1} --tests_base_directory={2}" -f $tests_xml, $tests_exec_app_exe, ${env:CI_PROJECT_DIR}
      $process = Start-Process -FilePath "$ant4c_tests_Release" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }
    }
    else
    {
      $message = "File '{0}' not exists. Tests will not run." -f $ant4c_tests_Release
      Write-Warning -Message $message
      Get-ChildItem -Path "$build_directory_Release" -Recurse
    }

  artifacts:
    paths:
      - "$CI_PROJECT_DIR\\build-$TargetPlatform"

build_with_MinGW:

  tags:
    - windows

  parallel:
    matrix:
      - BUILD_TYPE: [Debug, Release]

  script: |
    git fetch origin windows-latest
    git checkout origin/windows-latest -- .

    [string[]]$cmakes = @()
    $cmakes += Get-ChildItem -File -Filter cmake.exe -Name -Path "${env:ProgramFiles(x86)}" -Recurse

    if (0 -lt $cmakes.Count)
    {
      $cmake = Join-Path -ChildPath $cmakes[0] -Path "${env:ProgramFiles(x86)}"
    }
    else
    {
      $cmakes += Get-ChildItem -File -Filter cmake.exe -Name -Path "${env:ProgramFiles}" -Recurse

      if (0 -lt $cmakes.Count)
      {
        $cmake = Join-Path -ChildPath $cmakes[0] -Path "${env:ProgramFiles}"
      }
      else
      {
        throw (New-Object -TypeName System.IO.FileNotFoundException -ArgumentList "Could not find cmake in any of the '${env:ProgramFiles(x86)}' and '${env:ProgramFiles}' subfolders.")
      }
    }

    [string[]]$mingw_makes = @()
    $mingw_makes += Get-ChildItem -File -Include mingw32-make.exe -Path $env:ProgramFiles\*\bin\*.* -Recurse

    $directory_path = Split-Path -Path $mingw_makes[0] -Parent
    $env:PATH="$env:PATH;$directory_path"

    $build_directory = Join-Path -ChildPath "build-MinGW-${env:BUILD_TYPE}" -Path "${env:CI_PROJECT_DIR}"
    $arguments = "-E make_directory {0}" -f $build_directory
    $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    cd "$build_directory"

    $arguments = "{0} -G {2} -DCMAKE_BUILD_TYPE={1} -DLIBRARY_BINARY_DIR={0}/windows-latest" -f ${env:CI_PROJECT_DIR}, ${env:BUILD_TYPE}, '"MinGW Makefiles"'
    $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    $arguments = "--build . --config ${env:BUILD_TYPE} --parallel $env:NUMBER_OF_PROCESSORS"
    $process = Start-Process -FilePath "$cmake" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    $ant4c = Join-Path -ChildPath "ant4c.exe" -Path "$build_directory"
    $process = Start-Process -FilePath "$ant4c" -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }

    $tests_xml = Join-Path -ChildPath "tests.xml" -Path "${env:CI_PROJECT_DIR}"
    $ant4c_tests = Join-Path -ChildPath "ant4c_tests.exe" -Path "$build_directory"

    if (Test-Path -Path "$ant4c_tests")
    {
      $tests_exec_app_exe = Join-Path -ChildPath "tests_exec_app.exe" -Path $build_directory
      $arguments = "--tests_xml={0} --tests_exec_app={1} --tests_base_directory={2}" -f $tests_xml, $tests_exec_app_exe, ${env:CI_PROJECT_DIR}
      $process = Start-Process -FilePath "$ant4c_tests" -ArgumentList $arguments -NoNewWindow -Wait -PassThru

    if ($process.ExitCode -ne 0)
    {
      throw (New-Object -TypeName System.Exception -ArgumentList "Exit code is not equal to the '0' instead it - $process.ExitCode.")
    }
    }
    else
    {
      $message = "File '{0}' not exists. Tests will not run." -f $ant4c_tests
      Write-Warning -Message $message
      Get-ChildItem -Path "$build_directory" -Recurse
    }

  artifacts:
    paths:
      - "$CI_PROJECT_DIR\\build-MinGW-$BUILD_TYPE"

build_on_unix_like:

  tags:
    - unix-like

  parallel:
    matrix:
      - BUILD_TYPE: [Debug, Release]

  script:
    - git fetch origin ubuntu-latest
    - git checkout origin/ubuntu-latest -- .

    - cmake -E make_directory $CI_PROJECT_DIR/build-$BUILD_TYPE
    - cd $CI_PROJECT_DIR/build-$BUILD_TYPE

    - cmake $CI_PROJECT_DIR -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLIBRARY_BINARY_DIR=$CI_PROJECT_DIR/ubuntu-latest
    - cmake --build . --config $BUILD_TYPE

    - if [ -f $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c ]; then $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c; fi
    - if [ -f $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c_tests ]; then $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c_tests --tests_xml=$CI_PROJECT_DIR/tests.xml --tests_exec_app=$CI_PROJECT_DIR/build-$BUILD_TYPE/tests_exec_app --tests_base_directory=$CI_PROJECT_DIR; fi
    - if [ ! -f $CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c_tests ]; then echo "File '"$CI_PROJECT_DIR/build-$BUILD_TYPE/ant4c_tests"' not exists. Tests will not run." ; ls -lah ; fi

  artifacts:
    paths:
      - $CI_PROJECT_DIR/build-$BUILD_TYPE
