<?xml version="1.0"?>
<Tests>
  <TestArgumentParser>
    <argument_parser_at_all>
      <input />
      <return>1</return>
      <!--build_file /-->
      <pause />
      <verbose />
      <debug />
      <quiet />
      <indent />
      <!--properties>
        <property name="property_name" value="property value" dynamic="false" readonly="true" /-->
      <!--/properties-->
      <log_file />
      <project_help />
      <no_logo />
      <help />
      <encoding />
      <module_priority />
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-indent:</input>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-indent:1</input>
      <return>1</return>
      <indent>1</indent>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-indent:-1</input>
      <return>1</return>
      <indent>1</indent>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-indent:21</input>
      <return>1</return>
      <indent>21</indent>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:sample.build</input>
      <return>1</return>
      <build_file>sample.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>/f:sample.build</input>
      <return>1</return>
      <build_file>sample.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:sample_1.build /f:sample_2.build</input>
      <return>1</return>
      <build_file>sample_1.build</build_file>
      <build_file>sample_2.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:/tmp/a/b/c/sample.build</input>
      <return>1</return>
      <build_file>/tmp/a/b/c/sample.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:/tmp/a/b/c/sample_1.build /f:sample_2.build</input>
      <return>1</return>
      <build_file>/tmp/a/b/c/sample_1.build</build_file>
      <build_file>sample_2.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:</input>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-l:</input>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:program_log.txt</input>
      <return>1</return>
      <log_file>program_log.txt</log_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-l:program_log.txt</input>
      <return>1</return>
      <log_file>program_log.txt</log_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:program_log_1.txt -l:program_log_2.txt</input>
      <return>1</return>
      <log_file>program_log_2.txt</log_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-pause</input>
      <return>1</return>
      <pause>1</pause>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-verbose</input>
      <return>1</return>
      <verbose>1</verbose>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-v</input>
      <verbose>1</verbose>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-debug</input>
      <return>1</return>
      <debug>1</debug>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-quiet</input>
      <return>1</return>
      <quiet>1</quiet>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-q</input>
      <return>1</return>
      <quiet>1</quiet>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-D:</input>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-D:property_name=property_value</input>
      <return>1</return>
      <properties>
        <property name="property_name" value="property_value" dynamic="true" readonly="true" />
      </properties>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-D:property_name_1=property_value_1 -D:property_name_2=property_value_2</input>
      <return>1</return>
      <properties>
        <property name="property_name_1" value="property_value_1" dynamic="true" readonly="true" />
        <property name="property_name_2" value="property_value_2" dynamic="true" readonly="true" />
      </properties>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-projecthelp</input>
      <return>1</return>
      <project_help>1</project_help>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-nologo</input>
      <return>1</return>
      <no_logo>1</no_logo>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-help</input>
      <return>1</return>
      <help>1</help>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-h</input>
      <return>1</return>
      <help>1</help>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>a</input>
      <target>a</target>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input> foo -logfile:C:\1.txt -buildfile:1.build bar</input>
      <target>foo</target>
      <log_file>C:\1.txt</log_file>
      <build_file>1.build</build_file>
      <target>bar</target>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-encoding:Unicode</input>
      <encoding>Unicode</encoding>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-encoding:ENC</input>
      <encoding>UNKNOWN</encoding>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-listener:default_listener</input>
      <listener>default_listener</listener>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-modulepriority</input>
      <module_priority>1</module_priority>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-modulepriority+</input>
      <module_priority>1</module_priority>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-modulepriority-</input>
      <module_priority>0</module_priority>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>1</input>
      <verbose>0</verbose>
      <target>1</target>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-v+</input>
      <verbose>1</verbose>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-v-</input>
      <verbose>0</verbose>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-v1</input>
      <verbose>0</verbose>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-verbose+</input>
      <verbose>1</verbose>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-verbose-</input>
      <verbose>0</verbose>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-verbose1</input>
      <verbose>0</verbose>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>/f:1.build</input>
      <build_file>1.build</build_file>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:1.build</input>
      <build_file>1.build</build_file>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-l:</input>
      <return>0</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-l:1.txt</input>
      <log_file>1.txt</log_file>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:</input>
      <output></output>
      <return>0</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:1.txt</input>
      <log_file>1.txt</log_file>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:"C:\Program Files\1.txt"</input>
      <log_file>C:\Program Files\1.txt</log_file>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-l:"C:\Program Files\1.txt"</input>
      <log_file>C:\Program Files\1.txt</log_file>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-listener:</input>
      <return>0</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-listener:libdefault_listener.so</input>
      <listener>libdefault_listener.so</listener>
      <return>1</return>
    </argument_parser_at_all>
      <argument_parser_at_all>
      <input>-listener:default_listener.dll</input>
      <listener>default_listener.dll</listener>
      <return>1</return>
    </argument_parser_at_all>
    <argument_append_arguments>
      <input></input>
      <output></output>
      <return></return>
    </argument_append_arguments>
    <argument_append_arguments>
      <input>1</input>
      <input>2</input>
      <input>3</input>
      <input>4</input>
      <input>5</input>
      <input>6</input>
      <input>7</input>
      <input>8</input>
      <input>9</input>
      <input>0</input>
      <output>10x020x030x040x050x060x070x080x090x000x0</output>
      <return>1</return>
    </argument_append_arguments>
    <argument_append_arguments>
      <input>"a b c"</input>
      <input>2</input>
      <input>3</input>
      <input>4</input>
      <input>5</input>
      <input>6</input>
      <input>7</input>
      <input>8</input>
      <input>9</input>
      <input>0</input>
      <output>a b c0x020x030x040x050x060x070x080x090x000x0</output>
      <return>1</return>
    </argument_append_arguments>
    <argument_append_arguments>
      <input>/f:C:\discriminant.build /f:"C:\first one.build" /f:"C:\Folder checker.build" /f:C:\sample.build</input>
      <output>/f:C:\discriminant.build0x0/f:C:\first one.build0x0/f:C:\Folder checker.build0x0/f:C:\sample.build0x0</output>
      <return>1</return>
    </argument_append_arguments>
    <argument_append_arguments>
      <input>/f:C:\discriminant.build</input>
      <input>/f:"C:\first one.build"</input>
      <input>/f:"C:\Folder checker.build"</input>
      <input>/f:C:\sample.build</input>
      <output>/f:C:\discriminant.build0x0/f:C:\first one.build0x0/f:C:\Folder checker.build0x0/f:C:\sample.build0x0</output>
      <return>1</return>
    </argument_append_arguments>
    <argument_append_arguments>
      <input>"a b c" "d e f" "g h" 4 5</input>
      <output>a b c0x0d e f0x0g h0x040x050x0</output>
      <return>1</return>
    </argument_append_arguments>
  </TestArgumentParser>
  <TestConversion>
    <bool_parse>
      <input></input>
      <output></output>
      <return>0</return>
    </bool_parse>
    <bool_parse>
      <input>True</input>
      <output>1</output>
      <return>1</return>
    </bool_parse>
    <bool_parse>
      <input>False</input>
      <output>0</output>
      <return>1</return>
    </bool_parse>
    <bool_parse>
      <input>true</input>
      <output>1</output>
      <return>1</return>
    </bool_parse>
    <bool_parse>
      <input>false</input>
      <output></output>
      <return>1</return>
    </bool_parse>
    <bool_to_string>
      <input></input>
      <output>False</output>
      <return>1</return>
    </bool_to_string>
    <bool_to_string>
      <input>0</input>
      <output>False</output>
      <return>1</return>
    </bool_to_string>
    <bool_to_string>
      <input>1</input>
      <output>True</output>
      <return>1</return>
    </bool_to_string>
    <bool_to_string>
      <input>2</input>
      <output></output>
      <return>0</return>
    </bool_to_string>
  </TestConversion>
  <TestDateTime>
    <datetime_format_to_string>
      <year>2019</year>
      <month>09</month>
      <day>01</day>
      <hour>02</hour>
      <minute>03</minute>
      <second>04</second>
      <return>1</return>
      <format>%A %c</format>
      <output>Sunday Sun Sep  1 02:03:04 2019</output>
      <mingw_output>Sunday 09/01/19 02:03:04</mingw_output>
    </datetime_format_to_string>
    <datetime_parse>
      <input></input>
      <return></return>
      <year></year>
      <month></month>
      <day></day>
      <hour></hour>
      <minute></minute>
      <second></second>
    </datetime_parse>
    <datetime_parse>
      <input>01.09.2019 2:03:04</input>
      <return>1</return>
      <year>2019</year>
      <month>09</month>
      <day>01</day>
      <hour>02</hour>
      <minute>03</minute>
      <second>04</second>
    </datetime_parse>
    <datetime_to_string>
      <year>2019</year>
      <month>09</month>
      <day>01</day>
      <hour>02</hour>
      <minute>03</minute>
      <second>04</second>
      <output>01.09.2019 2:03:04</output>
    </datetime_to_string>
    <datetime_get_day>
      <input>1</input>
    </datetime_get_day>
    <datetime_get_day>
      <input>15</input>
    </datetime_get_day>
    <datetime_get_day>
      <input>31</input>
    </datetime_get_day>
    <datetime_get_day_of_week>
      <year>1970</year>
      <month>1</month>
      <day>1</day>
      <return>4</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2015</year>
      <month>12</month>
      <day>23</day>
      <return>3</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2016</year>
      <month>12</month>
      <day>23</day>
      <return>5</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2017</year>
      <month>12</month>
      <day>23</day>
      <return>6</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2018</year>
      <month>12</month>
      <day>23</day>
      <return>0</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2019</year>
      <month>12</month>
      <day>23</day>
      <return>1</return>
    </datetime_get_day_of_week>
    <datetime_get_days_in_month>
      <year></year>
      <month></month>
      <return></return>
    </datetime_get_days_in_month>
    <datetime_get_days_in_month>
      <year>2019</year>
      <month>09</month>
      <return>30</return>
    </datetime_get_days_in_month>
    <datetime_get_days_in_month>
      <year>2019</year>
      <month>02</month>
      <return>28</return>
    </datetime_get_days_in_month>
    <datetime_get_days_in_month>
      <year>2016</year>
      <month>02</month>
      <return>29</return>
    </datetime_get_days_in_month>
    <datetime_get_hour>
      <input>0</input>
    </datetime_get_hour>
    <datetime_get_hour>
      <input>21</input>
    </datetime_get_hour>
    <datetime_get_hour>
      <input>23</input>
    </datetime_get_hour>
    <datetime_get_minute>
      <input>1</input>
    </datetime_get_minute>
    <datetime_get_minute>
      <input>30</input>
    </datetime_get_minute>
    <datetime_get_minute>
      <input>59</input>
    </datetime_get_minute>
    <datetime_get_month>
      <input>1</input>
    </datetime_get_month>
    <datetime_get_month>
      <input>6</input>
    </datetime_get_month>
    <datetime_get_month>
      <input>12</input>
    </datetime_get_month>
    <datetime_get_second>
      <input>0</input>
    </datetime_get_second>
    <datetime_get_second>
      <input>30</input>
    </datetime_get_second>
    <datetime_get_second>
      <input>59</input>
    </datetime_get_second>
    <datetime_get_year>
      <input>1970</input>
    </datetime_get_year>
    <datetime_get_year>
      <input>2000</input>
    </datetime_get_year>
    <datetime_get_year>
      <input>2019</input>
    </datetime_get_year>
    <datetime_is_leap_year>
      <input>1700</input>
      <return>0</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>1800</input>
      <return>0</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>1900</input>
      <return>0</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>1600</input>
      <return>1</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>2000</input>
      <return>1</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>2016</input>
      <return>1</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>2019</input>
      <return>0</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>2020</input>
      <return>1</return>
    </datetime_is_leap_year>
    <datetime_decode>
      <input>1569840495</input>
      <return>1</return>
      <year>2019</year>
      <month>09</month>
      <day>30</day>
      <hour>10</hour>
      <minute>48</minute>
      <second>15</second>
      <year_day>273</year_day>
    </datetime_decode>
  </TestDateTime>
  <TestEnvironment>
    <environment_variable_exists>
      <variable_name>PATH</variable_name>
      <variable_name_length>4</variable_name_length>
      <return>1</return>
    </environment_variable_exists>
    <environment_variable_exists>
      <variable_name>PATH!@#</variable_name>
      <variable_name_length>7</variable_name_length>
      <return>0</return>
    </environment_variable_exists>
  </TestEnvironment>
  <TestOperatingSystem>
    <operating_system_init>
      <platformID></platformID>
      <is_server></is_server>
      <version_string value_1="" value_2="" value_3="" value_4="" />
      <version></version>
    </operating_system_init>
    <operating_system_init>
      <platformID></platformID>
      <is_server>true</is_server>
      <version_string value_1="" value_2="" value_3="" value_4="" />
      <version>5.0.0.0</version>
    </operating_system_init>
    <operating_system_init>
      <platformID>1</platformID>
      <is_server></is_server>
      <version_string value_1="Linux " value_2="" value_3="" value_4="" />
      <version>4.0.0.0</version>
    </operating_system_init>
    <operating_system_init>
      <platformID>2</platformID>
      <version_string value_1="Darwin Kernel " value_2="" value_3="" value_4="" />
      <version>19.6.0</version>
    </operating_system_init>
    <operating_system_parse>
      <input>Microsoft Windows NT 6.2.9200</input>
      <output platform="0" major="6" minor="2" build="9200" revision="0" />
    </operating_system_parse>
    <operating_system_parse>
      <input>OpenBSD 6.5 GENERIC.MP#3 amd64</input>
      <output platform="1" major="6" minor="5" build="0" revision="0" />
    </operating_system_parse>
    <operating_system_parse>
      <input>Darwin 19.6.0 Darwin Kernel Version 19.6.0: Thu May  6 00:48:39 PDT 2021; root:xnu-6153.141.33~1/RELEASE_X86_64 x86_64</input>
      <output platform="2" major="19" minor="6" build="0" revision="0" />
    </operating_system_parse>
  </TestOperatingSystem>
  <TestExec allow_output_to_console="true">
    <exec_with_redirect_to_tmp_file>
      <append></append>
      <base_dir></base_dir>
      <command_line></command_line>
      <pid_property></pid_property>
      <result_property></result_property>
      <working_dir></working_dir>
      <environment_variables></environment_variables>
      <spawn></spawn>
      <time_out></time_out>
      <verbose></verbose>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <comment>command_line</comment>>
      <command_line>1 2 3 4 5</command_line>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-windows()}">
      <comment>working_dir</comment>>
      <working_dir>C:\</working_dir>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-unix()}">
      <comment>working_dir</comment>>
      <working_dir>/home/</working_dir>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <comment>environment_variables</comment>>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <comment>command_line environment_variables</comment>>
      <command_line>1 2 3 4 5</command_line>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-windows()}">
      <comment>working_dir environment_variables</comment>>
      <working_dir>C:\</working_dir>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-unix()}">
      <comment>working_dir environment_variables</comment>>
      <working_dir>/home/</working_dir>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-windows()}">
      <comment>command_line working_dir</comment>>
      <command_line>1 2 3 4 5</command_line>
      <working_dir>C:\</working_dir>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-unix()}">
      <comment>command_line working_dir</comment>>
      <command_line>1 2 3 4 5</command_line>
      <working_dir>/home/</working_dir>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-windows()}">
      <comment>command_line working_dir environment_variables</comment>>
      <command_line>1 2 3 4 5</command_line>
      <working_dir>C:\</working_dir>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-unix()}">
      <comment>command_line working_dir environment_variables</comment>>
      <command_line>1 2 3 4 5</command_line>
      <working_dir>/home/</working_dir>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <environment_variables>var1=value1 var2=value2</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <environment_variables>"var 1"="value 1"</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <environment_variables>"var 1"="value 1" "var 2"="value 2"</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <command_line>1 2 3 4 5</command_line>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <command_line>"a b c" "d e f" "g h" 4 5</command_line>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <pid_property>property_for_process_identification</pid_property>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <result_property>property_for_process_result</result_property>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <time_out>5000</time_out>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_get_program_full_path>
      <program></program>
      <base_dir></base_dir>
      <output></output>
      <return></return>
    </exec_get_program_full_path>
    <exec_get_program_full_path>
      <program>my_program</program>
      <base_dir></base_dir>
      <output>my_program</output>
      <return>1</return>
    </exec_get_program_full_path>
    <exec_get_program_full_path if="${platform::is-windows()}">
      <program>C:\my_program</program>
      <base_dir></base_dir>
      <output>C:\my_program</output>
      <return>1</return>
    </exec_get_program_full_path>
    <exec_get_program_full_path if="${platform::is-windows()}">
      <program>my_program</program>
      <base_dir>C:\</base_dir>
      <output>C:\my_program</output>
      <return>1</return>
    </exec_get_program_full_path>
    <exec_get_program_full_path if="${platform::is-windows()}">
      <program>C:\my_program</program>
      <base_dir>A:\</base_dir>
      <output>C:\my_program</output>
      <return>1</return>
    </exec_get_program_full_path>
    <exec_get_program_full_path if="${platform::is-unix()}">
      <program>/tmp/my_program</program>
      <base_dir></base_dir>
      <output>/tmp/my_program</output>
      <return>1</return>
    </exec_get_program_full_path>
    <exec_get_program_full_path if="${platform::is-unix()}">
      <program>my_program</program>
      <base_dir>/tmp/</base_dir>
      <output>/tmp/my_program</output>
      <return>1</return>
    </exec_get_program_full_path>
    <exec_get_program_full_path if="${platform::is-unix()}">
      <program>/tmp/my_program</program>
      <base_dir>/usr/</base_dir>
      <output>/tmp/my_program</output>
      <return>1</return>
    </exec_get_program_full_path>
  </TestExec>
  <TestFileSystem>
    <directory_enumerate_file_system_entries>
      <code input="folder"><![CDATA[
      <project name="Empty folder">
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" overwrite="true" />
        <mkdir dir="${property::get-value('folder')}" unless="${directory::exists(property::get-value('folder'))}" />
        <property name="folder" value="${path::combine(property::get-value('folder'), '*')}" readonly="true" />
      </project>
      ]]></code>
      <output entry_type="directory" recurse="false" />
      <output entry_type="file" recurse="false" />
      <output entry_type="all" recurse="false" />
      <output entry_type="directory" recurse="true" />
      <output entry_type="file" recurse="true" />
      <output entry_type="all" recurse="true" />
    </directory_enumerate_file_system_entries>
    <directory_enumerate_file_system_entries>
      <code input="folder"><![CDATA[
      <project name="With one folder">
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" overwrite="true" />
        <mkdir dir="${property::get-value('folder')}" unless="${directory::exists(property::get-value('folder'))}" />

        <property name="entry" value="${path::combine(property::get-value('folder'), hash::bytes-to-string(hash::crc32(property::get-value('folder'))))}" />
        <mkdir dir="${property::get-value('entry')}" unless="${directory::exists(property::get-value('entry'))}" />
        <property name="folder" value="${path::combine(property::get-value('folder'), '*')}" readonly="true" />
      </project>
      ]]></code>
      <output entry_type="directory" recurse="false">
        <entry>entry</entry>
      </output>
      <output entry_type="file" recurse="false" />
      <output entry_type="all" recurse="false">
        <entry>entry</entry>
      </output>
      <output entry_type="directory" recurse="true">
        <entry>entry</entry>
      </output>
      <output entry_type="file" recurse="true" />
      <output entry_type="all" recurse="true">
        <entry>entry</entry>
      </output>
    </directory_enumerate_file_system_entries>
    <directory_enumerate_file_system_entries>
      <code input="folder"><![CDATA[
      <project name="With one folder and inner in it">
        <description>Create root folder</description>
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" overwrite="true" />
        <mkdir dir="${property::get-value('folder')}" unless="${directory::exists(property::get-value('folder'))}" />

        <description>Create sub folder</description>
        <property name="entry" value="${path::combine(property::get-value('folder'), hash::bytes-to-string(hash::crc32(property::get-value('folder'))))}" />
        <mkdir dir="${property::get-value('entry')}" unless="${directory::exists(property::get-value('entry'))}" />

        <description>Create folder in the sub folder of root directory</description>
        <property name="entry_" value="${path::combine(property::get-value('entry'), hash::bytes-to-string(hash::crc32(property::get-value('entry'))))}" />
        <mkdir dir="${property::get-value('entry_')}" unless="${directory::exists(property::get-value('entry_'))}" />

        <description>Save in property input for function to test</description>
        <property name="folder" value="${path::combine(property::get-value('folder'), '*')}" readonly="true" />
      </project>
      ]]></code>
      <output entry_type="directory" recurse="false">
        <entry>entry</entry>
      </output>
      <output entry_type="file" recurse="false" />
      <output entry_type="all" recurse="false">
        <entry>entry</entry>
      </output>
      <output entry_type="directory" recurse="true">
        <entry>entry</entry>
        <entry>entry_</entry>
      </output>
      <output entry_type="file" recurse="true" />
      <output entry_type="all" recurse="true">
        <entry>entry</entry>
        <entry>entry_</entry>
      </output>
    </directory_enumerate_file_system_entries>
    <directory_exists>
      <input></input>
      <return></return>
    </directory_exists>
    <directory_exists if="${platform::is-windows()}">
      <input>C:\Windows</input>
      <return>1</return>
    </directory_exists>
    <directory_exists if="${platform::is-windows()}">
      <input>C:\Windows!</input>
      <return>0</return>
    </directory_exists>
    <directory_exists if="${platform::is-windows()}">
      <input>C:\Windows\regedit.exe</input>
      <return>0</return>
    </directory_exists>
    <directory_exists if="${platform::is-unix()}">
      <input>/home</input>
      <return>1</return>
    </directory_exists>
    <directory_exists if="${platform::is-unix()}">
      <input>/home!</input>
      <return>0</return>
    </directory_exists>
    <directory_exists if="${platform::is-unix()}">
      <input>/bin/ls</input>
      <return>0</return>
    </directory_exists>
    <file_exists>
      <input></input>
      <return></return>
    </file_exists>
    <file_exists if="${platform::is-windows()}">
      <input>C:\Windows</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-windows()}">
      <input>C:\Windows!</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-windows()}">
      <input>C:\Windows\regedit.exe</input>
      <return>1</return>
    </file_exists>
    <file_exists if="${platform::is-windows()}">
      <input>C:\Windows\regedit.exe1</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-unix()}">
      <input>/home</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-unix()}">
      <input>/home!</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-unix()}">
      <input>/bin/ls</input>
      <return>1</return>
    </file_exists>
    <file_exists if="${platform::is-unix()}">
      <input>/bin/ls1</input>
      <return>0</return>
    </file_exists>
    <file_read_lines>
      <input></input>
      <output></output>
    </file_read_lines>
    <file_read_lines>
      <input>a</input>
      <output>1</output>
    </file_read_lines>
    <file_read_lines>
      <input><![CDATA[a
        b
        c]]></input>
      <output>3</output>
    </file_read_lines>
    <file_read_lines>
      <input><![CDATA[a
        b
        c
]]></input>
      <output>3</output>
    </file_read_lines>
  </TestFileSystem>
  <TestHashAlgorithm>
    <BLAKE2>
      <input></input>
      <return>1</return>
      <BLAKE2b_160>3345524abf6bbe1809449224b5972c41790b6cf2</BLAKE2b_160>
      <BLAKE2b_256>0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8</BLAKE2b_256>
      <BLAKE2b_384>b32811423377f52d7862286ee1a72ee540524380fda1724a6f25d7978c6fd3244a6caf0498812673c5e05ef583825100</BLAKE2b_384>
      <BLAKE2b_512>786a02f742015903c6c6fd852552d272912f4740e15847618a86e217f71f5419d25e1031afee585313896444934eb04b903a685b1448b755d56f701afe9be2ce</BLAKE2b_512>
    </BLAKE2>
    <BLAKE2>
      <input>The quick brown fox jumps over the lazy dog</input>
      <return>1</return>
      <BLAKE2b_160>3c523ed102ab45a37d54f5610d5a983162fde84f</BLAKE2b_160>
      <BLAKE2b_256>01718cec35cd3d796dd00020e0bfecb473ad23457d063b75eff29c0ffa2e58a9</BLAKE2b_256>
      <BLAKE2b_384>b7c81b228b6bd912930e8f0b5387989691c1cee1e65aade4da3b86a3c9f678fc8018f6ed9e2906720c8d2a3aeda9c03d</BLAKE2b_384>
      <BLAKE2b_512>a8add4bdddfd93e4877d2746e62817b116364a1fa7bc148d95090bc7333b3673f82401cf7aa2e4cb1ecd90296e3f14cb5413f8ed77be73045b13914cdcd6a918</BLAKE2b_512>
    </BLAKE2>
    <BLAKE2>
      <input>BLAKE and BLAKE2 are hash functions based on the ChaCha stream cipher, and was one of the finalists in the NIST competition for SHA-3</input>
      <return>1</return>
      <BLAKE2b_160>5e92b21f7cb0b46d06416c314f41c474e2feaf30</BLAKE2b_160>
      <BLAKE2b_256>40a9706556c5b70ef10daae4c519c4fcfdee519b3ded9bc6801730b23f2c1d40</BLAKE2b_256>
      <BLAKE2b_384>1441c65e58b2e9656200df99c9bd1e188a3a4e18e80d0ed9f69d4ce67bde16ef8f726e54800554dda7b29f485e50d0e9</BLAKE2b_384>
      <BLAKE2b_512>f22f00d4570b502efe801674f6588ad6926b54ef3503d266224b65c257d1422683bfd4a12470ba3d5cb3c73d5016a5a6f1fb96a13b7f0a84d03777bb18e6e859</BLAKE2b_512>
    </BLAKE2>
    <hash_algorithm_blake3>
      <input>0</input>
      <hash_length>1024</hash_length>
      <output>af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262e00f03e7b69af26b7faaf09fcd333050338ddfe085b8cc869ca98b206c08243a26f</output>
      <output>5487789e8f660afe6c99ef9e0c52b92e7393024a80459cf91f476f9ffdbda7001c22e159b402631f277ca96f2defdf1078282314e763699a31c5363165421cce14d</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>1</input>
      <hash_length>1024</hash_length>
      <output>2d3adedff11b61f14c886e35afa036736dcd87a74d27b5c1510225d0f592e213c3a6cb8bf623e20cdb535f8d1a5ffb86342d9c0b64aca3bce1d31f60adfa137b358</output>
      <output>ad4d79f97b47c3d5e79f179df87a3b9776ef8325f8329886ba42f07fb138bb502f4081cbcec3195c5871e6c23e2cc97d3c69a613eba131e5f1351f3f1da786545e5</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>1023</input>
      <hash_length>1024</hash_length>
      <output>10108970eeda3eb932baac1428c7a2163b0e924c9a9e25b35bba72b28f70bd11a182d27a591b05592b15607500e1e8dd56bc6c7fc063715b7a1d737df5bad3339c5</output>
      <output>6778957d870eb9717b57ea3d9fb68d1b55127bba6a906a4a24bbd5acb2d123a37b28f9e9a81bbaae360d58f85e5fc9d75f7c370a0cc09b6522d9c8d822f2f28f485</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>1024</input>
      <hash_length>1024</hash_length>
      <output>42214739f095a406f3fc83deb889744ac00df831c10daa55189b5d121c855af71cf8107265ecdaf8505b95d8fcec83a98a6a96ea5109d2c179c47a387ffbb404756</output>
      <output>f6eeae7883b446b70ebb144527c2075ab8ab204c0086bb22b7c93d465efc57f8d917f0b385c6df265e77003b85102967486ed57db5c5ca170ba441427ed9afa684e</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>1025</input>
      <hash_length>1024</hash_length>
      <output>d00278ae47eb27b34faecf67b4fe263f82d5412916c1ffd97c8cb7fb814b8444f4c4a22b4b399155358a994e52bf255de60035742ec71bd08ac275a1b51cc6bfe33</output>
      <output>2b0ef84b409108cda080e6269ed4b3e2c3f7d722aa4cdc98d16deb554e5627be8f955c98e1d5f9565a9194cad0c4285f93700062d9595adb992ae68ff12800ab67a</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>2048</input>
      <hash_length>1024</hash_length>
      <output>e776b6028c7cd22a4d0ba182a8bf62205d2ef576467e838ed6f2529b85fba24a9a60bf80001410ec9eea6698cd537939fad4749edd484cb541aced55cd9bf54764d</output>
      <output>063f23f6f1e32e12958ba5cfeb1bf618ad094266d4fc3c968c2088f677454c288c67ba0dba337b9d91c7e1ba586dc9a5bc2d5e90c14f53a8863ac75655461cea8f9</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>2049</input>
      <hash_length>1024</hash_length>
      <output>5f4d72f40d7a5f82b15ca2b2e44b1de3c2ef86c426c95c1af0b687952256303096de31d71d74103403822a2e0bc1eb193e7aecc9643a76b7bbc0c9f9c52e8783aae</output>
      <output>98764ca468962b5c2ec92f0c74eb5448d519713e09413719431c802f948dd5d90425a4ecdadece9eb178d80f26efccae630734dff63340285adec2aed3b51073ad3</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>3072</input>
      <hash_length>1024</hash_length>
      <output>b98cb0ff3623be03326b373de6b9095218513e64f1ee2edd2525c7ad1e5cffd29a3f6b0b978d6608335c09dc94ccf682f9951cdfc501bfe47b9c9189a6fc7b404d1</output>
      <output>20258506341a6d802857322fbd20d3e5dae05b95c88793fa83db1cb08e7d8008d1599b6209d78336e24839724c191b2a52a80448306e0daa84a3fdb566661a37e11</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>3073</input>
      <hash_length>1024</hash_length>
      <output>7124b49501012f81cc7f11ca069ec9226cecb8a2c850cfe644e327d22d3e1cd39a27ae3b79d68d89da9bf25bc27139ae65a324918a5f9b7828181e52cf373c84f35</output>
      <output>b639b7fccbb985b6f2fa56aea0c18f531203497b8bbd3a07ceb5926f1cab74d14bd66486d9a91eba99059a98bd1cd25876b2af5a76c3e9eed554ed72ea952b603bf</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>4096</input>
      <hash_length>1024</hash_length>
      <output>015094013f57a5277b59d8475c0501042c0b642e531b0a1c8f58d2163229e9690289e9409ddb1b99768eafe1623da896faf7e1114bebeadc1be30829b6f8af707d8</output>
      <output>5c298f4f0ff4d9438aef948335612ae921e76d411c3a9111df62d27eaf871959ae0062b5492a0feb98ef3ed4af277f5395172dbe5c311918ea0074ce0036454f620</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>4097</input>
      <hash_length>1024</hash_length>
      <output>9b4052b38f1c5fc8b1f9ff7ac7b27cd242487b3d890d15c96a1c25b8aa0fb99505f91b0b5600a11251652eacfa9497b31cd3c409ce2e45cfe6c0a016967316c426b</output>
      <output>d26f619eab5d70af9a418b845c608840390f361630bd497b1ab44019316357c61dbe091ce72fc16dc340ac3d6e009e050b3adac4b5b2c92e722cffdc46501531956</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>5120</input>
      <hash_length>1024</hash_length>
      <output>9cadc15fed8b5d854562b26a9536d9707cadeda9b143978f319ab34230535833acc61c8fdc114a2010ce8038c853e121e1544985133fccdd0a2d507e8e615e611e9</output>
      <output>a0ba4f47915f49e53d721816a9198e8b30f12d20ec3689989175f1bf7a300eee0d9321fad8da232ece6efb8e9fd81b42ad161f6b9550a069e66b11b40487a5f5059</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>5121</input>
      <hash_length>1024</hash_length>
      <output>628bd2cb2004694adaab7bbd778a25df25c47b9d4155a55f8fbd79f2fe154cff96adaab0613a6146cdaabe498c3a94e529d3fc1da2bd08edf54ed64d40dcd677764</output>
      <output>7eac51d8277d70219a9694334a68bc8f0f23e20b0ff70ada6f844542dfa32cd4204ca1846ef76d811cdb296f65e260227f477aa7aa008bac878f72257484f2b6c95</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>6144</input>
      <hash_length>1024</hash_length>
      <output>3e2e5b74e048f3add6d21faab3f83aa44d3b2278afb83b80b3c35164ebeca2054d742022da6fdda444ebc384b04a54c3ac5839b49da7d39f6d8a9db03deab32aade</output>
      <output>156c1c0311e9b3435cde0ddba0dce7b26a376cad121294b689193508dd63151603c6ddb866ad16c2ee41585d1633a2cea093bea714f4c5d6b903522045b20395c83</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>6145</input>
      <hash_length>1024</hash_length>
      <output>f1323a8631446cc50536a9f705ee5cb619424d46887f3c376c695b70e0f0507f18a2cfdd73c6e39dd75ce7c1c6e3ef238fd54465f053b25d21044ccb2093beb0150</output>
      <output>15532b108313b5829c3621ce324b8e14229091b7c93f32db2e4e63126a377d2a63a3597997d4f1cba59309cb4af240ba70cebff9a23d5e3ff0cdae2cfd54e070022</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>7168</input>
      <hash_length>1024</hash_length>
      <output>61da957ec2499a95d6b8023e2b0e604ec7f6b50e80a9678b89d2628e99ada77a5707c321c83361793b9af62a40f43b523df1c8633cecb4cd14d00bdc79c78fca516</output>
      <output>5b863893f6d38b02ff7236c5a9a8ad2dba87d24c547cab046c29fc5bc1ed142e1de4763613bb162a5a538e6ef05ed05199d751f9eb58d332791b8d73fb74e4fce95</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>7169</input>
      <hash_length>1024</hash_length>
      <output>a003fc7a51754a9b3c7fae0367ab3d782dccf28855a03d435f8cfe74605e781798a8b20534be1ca9eb2ae2df3fae2ea60e48c6fb0b850b1385b5de0fe460dbe9d9f</output>
      <output>9b0d8db4435da75c601156df9d047f4ede008732eb17adc05d96180f8a73548522840779e6062d643b79478a6e8dbce68927f36ebf676ffa7d72d5f68f050b119c8</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>8192</input>
      <hash_length>1024</hash_length>
      <output>aae792484c8efe4f19e2ca7d371d8c467ffb10748d8a5a1ae579948f718a2a635fe51a27db045a567c1ad51be5aa34c01c6651c4d9b5b5ac5d0fd58cf18dd61a477</output>
      <output>78566b797a8c67df7b1d60b97b19288d2d877bb2df417ace009dcb0241ca1257d62712b6a4043b4ff33f690d849da91ea3bf711ed583cb7b7a7da2839ba71309bbf</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>8193</input>
      <hash_length>1024</hash_length>
      <output>bab6c09cb8ce8cf459261398d2e7aef35700bf488116ceb94a36d0f5f1b7bc3bb2282aa69be089359ea1154b9a9286c4a56af4de975a9aa4a5c497654914d279bea</output>
      <output>60bb6d2cf7225a2fa0ff5ef56bbe4b149f3ed15860f78b4e2ad04e158e375c1e0c0b551cd7dfc82f1b155c11b6b3ed51ec9edb30d133653bb5709d1dbd55f4e1ff6</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>16384</input>
      <hash_length>1024</hash_length>
      <output>f875d6646de28985646f34ee13be9a576fd515f76b5b0a26bb324735041ddde49d764c270176e53e97bdffa58d549073f2c660be0e81293767ed4e4929f9ad34bbb</output>
      <output>39a529334c57c4a381ffd2a6d4bfdbf1482651b172aa883cc13408fa67758a3e47503f93f87720a3177325f7823251b85275f64636a8f1d599c2e49722f42e93893</output>
    </hash_algorithm_blake3>
    <hash_algorithm_blake3>
      <input>31744</input>
      <hash_length>1024</hash_length>
      <output>62b6960e1a44bcc1eb1a611a8d6235b6b4b78f32e7abc4fb4c6cdcce94895c47860cc51f2b0c28a7b77304bd55fe73af663c02d3f52ea053ba43431ca5bab7bfea2</output>
      <output>f5e9d7121770d88f70ae9649ea713087d1914f7f312147e247f87eb2d4ffef0ac978bf7b6579d57d533355aa20b8b77b13fd09748728a5cc327a8ec470f4013226f</output>
    </hash_algorithm_blake3>
    <crc32>
      <return>1</return>
    </crc32>
    <crc32>
      <input>123456789</input>
      <return>1</return>
      <increasing>2639f4cb</increasing>
      <decreasing>cbf43926</decreasing>
    </crc32>
    <crc32>
      <input>The quick brown fox jumps over the lazy dog</input>
      <return>1</return>
      <increasing>39a34f41</increasing>
      <decreasing>414fa339</decreasing>
    </crc32>
    <Keccak>
      <input>0</input>
      <return>1</return>
      <Keccak_224>f71837502ba8e10837bdd8d365adb85591895602fc552b48b7390abd</Keccak_224>
      <Keccak_256>c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470</Keccak_256>
      <Keccak_384>2c23146a63a29acf99e73b88f8c24eaa7dc60aa771780ccc006afbfa8fe2479b2dd2b21362337441ac12b515911957ff</Keccak_384>
      <Keccak_512>0eab42de4c3ceb9235fc91acffe746b29c29a8c366b7c60e4e67c466f36a4304c00fa9caf9d87976ba469bcbe06713b435f091ef2769fb160cdab33d3670680e</Keccak_512>
      <SHA3_224>6b4e03423667dbb73b6e15454f0eb1abd4597f9a1b078e3f5b5a6bc7</SHA3_224>
      <SHA3_256>a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a</SHA3_256>
      <SHA3_384>0c63a75b845e4f7d01107d852e4c2485c51a50aaaa94fc61995e71bbee983a2ac3713831264adb47fb6bd1e058d5f004</SHA3_384>
      <SHA3_512>a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26</SHA3_512>
    </Keccak>
    <Keccak>
      <input>1</input>
      <return>1</return>
      <SHA3_224>bdd5167212d2dc69665f5a8875ab87f23d5ce7849132f56371a19096</SHA3_224>
      <SHA3_256>5d53469f20fef4f8eab52b88044ede69c77a6a68a60728609fc4a65ff531e7d0</SHA3_256>
      <SHA3_384>127677f8b66725bbcb7c3eae9698351ca41e0eb6d66c784bd28dcdb3b5fb12d0c8e840342db03ad1ae180b92e3504933</SHA3_384>
      <SHA3_512>7127aab211f82a18d06cf7578ff49d5089017944139aa60d8bee057811a15fb55a53887600a3eceba004de51105139f32506fe5b53e1913bfa6b32e716fe97da</SHA3_512>
    </Keccak>
    <Keccak>
      <input>69</input>
      <return>1</return>
      <SHA3_224>bb41c858301cb57230fd85083ba5c76044282170123a990f461e3b14</SHA3_224>
      <SHA3_256>ed379e9012f1d3a4fef5096688a2557b3ceb68c619245bffcf05a14a5a846fd9</SHA3_256>
      <SHA3_384>71007b69c9b15fa519af8cab73514a8b92534513aa19153e7723e56ab54c34bce618bafef9ab92d13298bd35cb6e692a</SHA3_384>
      <SHA3_512>65e34948011bf0715855139bd03afcd01c10a0cba4a6c237cf38a79977080eace8f47e1e9ee14e7d60dcc2a9fe2e9dab47da5bd0ea1cd3932fa788f07e04d7a0</SHA3_512>
    </Keccak>
    <Keccak>
      <input>70</input>
      <return>1</return>
      <SHA3_224>c885e6c9be4a56615adc88657907b0449ff80a0b14459096caa14999</SHA3_224>
      <SHA3_256>97a26b0e8066f35d400b7f12a6ae62a290bc1ca68660b4da8bf17afad6b8c948</SHA3_256>
      <SHA3_384>f82eab30f732330e9692860682ea083586216ee761ea08c014c8a8dd2dc08fc9901942f311f63f63bf3ab8b4dab14975</SHA3_384>
      <SHA3_512>351164e46da292fd3d75132545401498d8983be9d143732de2df21fbf975a5e2c81584d90a773d34d7895d4cece328637ad2ffa973e21d4b6d03f39141cf44c8</SHA3_512>
    </Keccak>
    <Keccak>
      <input>71</input>
      <return>1</return>
      <SHA3_224>5e31d4bc8904e6e77531e6b975d3dcdd4330c03620e5204bc047ce2e</SHA3_224>
      <SHA3_256>881ad9ffbd7f090efa51cbdfe93da23a0401f4446f7adf150d1c226851cbfff2</SHA3_256>
      <SHA3_384>4bb4db01ac1c1d1a5de657436aca5275e4cae772bd6ab9b358e0ed094202be9600724a5bdfef0461ba7f1dc2427cf155</SHA3_384>
      <SHA3_512>3ccc850d53a1287af7b4560b2ef0d43eb5d9a80d62a0e9cf1dbc040135921104d4395168e90bfc871773ebb34bca1bd67056e1cc7dc7a48ff7c3167d389f117c</SHA3_512>
    </Keccak>
    <Keccak>
      <input>101</input>
      <return>1</return>
      <SHA3_224>03b96617edf75c33e4949e2b462eb75828546a2eb8308bdd4c0859cf</SHA3_224>
      <SHA3_256>af504dd36feb666b16fe553116adbdd604e449ca783e54a83171aee7ddc7e7b1</SHA3_256>
      <SHA3_384>1c3a5ccc5dc4030ba16305a85f59dced8cb5023db4479e8b3749a7004ae77bb18996931af4c16409efcc0c72caa4c1a1</SHA3_384>
      <SHA3_512>c8560c1f73d8f309676b71c239c06fcf16a7a8fc710c593b0f83b32606d6d7c85b66f9ad987a4c24bad2f4a03a20da89d5f1f0987f60fc97f40f306e221edbef</SHA3_512>
    </Keccak>
    <Keccak>
      <input>102</input>
      <return>1</return>
      <SHA3_224>c556db7b33e53bf1736d9bc84f30aa936a8ea4afcc590d70fbe647ab</SHA3_224>
      <SHA3_256>986b81944604ef3a1f26032a04537777c0ecd1cb66b37e3ca6e9b108befaf56c</SHA3_256>
      <SHA3_384>ee8a6c983daaec5976cb0ed4446494d348d0d571eb4c77fd8cf7eebdaa0733f96de2bdd8cdd0c70f5fa4391a336107b9</SHA3_384>
      <SHA3_512>9d6df09db9028fb57b45e346886fc0a6ba37d81607bf21b4c7e5ef811197e01eefd4be9c22e68a1b7c714f8f7924f2ea699b0e83a3c95379f7e8dd0ce20ca8b6</SHA3_512>
    </Keccak>
    <Keccak>
      <input>103</input>
      <return>1</return>
      <SHA3_224>8b59fefcaf88187d29eb7b887f5c066475168a4348deac4f34993d63</SHA3_224>
      <SHA3_256>120a055c592d237c0f535eebfc05673374fe4a50e1330293ef2c1ab611e0d0ba</SHA3_256>
      <SHA3_384>1f91ee551ad18f268876d1fc262f137fe196580216c5193819a95ec5222537d2a658dd129c3d8080e65ec7460f1f4704</SHA3_384>
      <SHA3_512>c2204bc64deef9249ab2e29187e31db863002b0ab130c1189d76d8e41f40aab95606b1cc3955788fd6e377d438c2c88c4aecf8f2096a5c8d214863cfbaa3ef5e</SHA3_512>
    </Keccak>
    <Keccak>
      <input>133</input>
      <return>1</return>
      <SHA3_224>67dd1365e9e2ec75f4d96a8460a0a9bf686827920e2b7fbbb0ef2925</SHA3_224>
      <SHA3_256>721f0e936b3b93c0384f970c07680a8a6293e5012295e83615ea4657ed5d7e17</SHA3_256>
      <SHA3_384>72d7f791dd6b7e70cb118634b458bf6977a64b1a6c27a136464ae12db9e7ecc5cb2d7d73c8faf07d4d93d1b2e2f1c0da</SHA3_384>
      <SHA3_512>df7f2a48b2d154de7d3adf710cdd3d1528ebcb06371a72ae607e6e6836163b179800e1ef1ba08649ed405637c6617d6600b0afcdfd7fd9e39a1240f45c21ff96</SHA3_512>
    </Keccak>
    <Keccak>
      <input>134</input>
      <return>1</return>
      <SHA3_224>6d8a43354b6c4e4e28e93ad60e16df666eeca61b360f718009c445a1</SHA3_224>
      <SHA3_256>644e15224f5597351aef5c4bdd22b27ca0c19db2244431534c2a4a0bebfdf39c</SHA3_256>
      <SHA3_384>0dd4000d8a25d0cffdfe2b7151fc610cb5bf25d9249d855ce8d0d647d2151235a12092a75233efa7820fcdfedc59041f</SHA3_384>
      <SHA3_512>76dc7b65f9c314c810c75a7c7a520ca9bc750d14fb4984f982e86e4bb1e46f3df3ce529bfa7b52366884ec66a1fb6dcdb9ec04a72d9405e0af9fa1bde9054a32</SHA3_512>
    </Keccak>
    <Keccak>
      <input>135</input>
      <return>1</return>
      <SHA3_224>3174e5126280625ecdfdb238d6a10d1c8b071031870ed197640cad90</SHA3_224>
      <SHA3_256>fded8fd9d6551c601eeb3b7c6bc5e5cfd8aad1d015b7e9aaa9c9b9475231d5e2</SHA3_256>
      <SHA3_384>25d2be1f5a681f8135992e0cc18a7b0758d1a880eb3c64d9c722f80d68b744bb3a89c223a0c38164cf4a423f91f8a533</SHA3_384>
      <SHA3_512>d942df0df09ac042cd3b641144c98d8fda0980bb037fc5c0e7f2e9a073b073dc4bb8a8c1f4cb5b45f5805c6523741ed0571d6779b15829b2faa280fc60b50645</SHA3_512>
    </Keccak>
    <Keccak>
      <input>141</input>
      <return>1</return>
      <SHA3_224>a8df4dbdc4c5d535eb3f590dd7e097e0b1b3ace931447d987ac25e94</SHA3_224>
      <SHA3_256>4134fa637cc87ac52320f311f4a681ef740b58da8ce2c09c721eedd720179c4f</SHA3_256>
      <SHA3_384>cb6b185e7f5e232db435f2d02f6e8bf16db60f895fc92cbc7fbad356807c5d693853fe638305c4d163d7b35d51b9041c</SHA3_384>
      <SHA3_512>3e92887ff9919469c7927cfc56523492abdcfda14d7fad2bf1de875fa05e2416674ae1793799b7a0703d4da88cf67d09ac64004dc4e332adb6b199ba6ee52479</SHA3_512>
    </Keccak>
    <Keccak>
      <input>142</input>
      <return>1</return>
      <SHA3_224>4353e7ed38eb9cc41abbf0709c6ab707de70d759e5d6eedf09043fd0</SHA3_224>
      <SHA3_256>4996d371abd506e72178b4cbea8e9f5ad781a5a566543d97f89a4efb13d5bb5f</SHA3_256>
      <SHA3_384>abe7a3a2309b13851157043658589d3f011cf2b58ded164cefc56654146f1884ed73d195c5176ea879f7821e9c332b3a</SHA3_384>
      <SHA3_512>64e5a4e32097cf9eeb8170b582503af020076f2856d7e67c0acb4c53c5f7fcb6bed9e330bcaac7c9229d7875efbe233877d5d3a43a25376eaf7804320599676e</SHA3_512>
    </Keccak>
    <Keccak>
      <input>143</input>
      <return>1</return>
      <SHA3_224>64d0e8a1be3cf30ef6727b30a6e428f7f068d44634c943d277ad8e7f</SHA3_224>
      <SHA3_256>295fef4d46110ee21fba0d1798a1bb7c1bbc88306bc9b7661b18ace7170f02ae</SHA3_256>
      <SHA3_384>f25214f92d3b1ccc162c46a74ad8fafd33e00abdcb3048744d93d36bc77f2796f92d91cea8946b357f14f249792dd8de</SHA3_384>
      <SHA3_512>eb9748309c6b70ffe82820052ad26ea99f43968d2af359adc804b2a76741a62ea8d710f018ea113c2259d0bd6687e3838602ae6c1dff727ae985f059141c7217</SHA3_512>
    </Keccak>
    <Keccak>
      <input>1023</input>
      <return>1</return>
      <SHA3_224>e7d72a8635ec1a6b177046d8f98c60bb934204fc7a6990469bed72cd</SHA3_224>
      <SHA3_256>3456dac4a1209693b8c2bd2cd27fc64c330ce283b8d43a0d9662761825865cbc</SHA3_256>
      <SHA3_384>db04f83cdfeb0bc711e9e2aca51f838e8dd725155daa64cbd3b913d40e56475ecc7b4ecab75b771a5f7ccc365ef3a5ae</SHA3_384>
      <SHA3_512>703be67f6d9c1a2d99b1995e60744a05097ddde919f9a4eb4ee3fe0088c9e5a502daa96064f284fbda40d1b22cc70d273b46bb4e4f48fe0e5a2d29f296bfe8a6</SHA3_512>
    </Keccak>
    <Keccak>
      <input>1024</input>
      <return>1</return>
      <SHA3_224>59e82bec68b80a525fd12a0408580ecda62ee6d4c8b12d6529ce0c20</SHA3_224>
      <SHA3_256>ba7f1834cddbba9f82cd4dcf7a106bb2e615fec90020f5a5de8efff8d49198b6</SHA3_256>
      <SHA3_384>885b25cbe374a0e76d495caea95475a2b870909abe434035316d4c60dcade94b8b18b18102059034de194e9f1e682811</SHA3_384>
      <SHA3_512>8f0c52262455dca2c7d7a6157bbc545cb34cea699290735fbc46b5c83173a458d53666e2137eb66e3b672070a97134775e3006a8ee542585ddb54183932f768d</SHA3_512>
    </Keccak>
    <Keccak>
      <input>1025</input>
      <return>1</return>
      <SHA3_224>faa2566329eef816510312ec08e329cdc855e96a440e47e92da4cc92</SHA3_224>
      <SHA3_256>413cf357775aef534fcd49da91a30f7877b50bbd924a20649315a4827f79cac0</SHA3_256>
      <SHA3_384>d00dfd2110cb761ca3f3f3195037e89b29660805e6ce37e9f3164a22517e1c1ac937adbd38c78ad568ada4340f039e58</SHA3_384>
      <SHA3_512>4d77323a341a3c8edd736ed718cb07deb66bcc5317dbc6f73da4c686dcec8440e414a2ed46ed5219cc226160b2416b276d9d9d95ad83c4c9e301397c89e37864</SHA3_512>
    </Keccak>
    <Keccak>
      <input>2048</input>
      <return>1</return>
      <SHA3_224>f761d1bb315dd7d743de1e76b6fe0e8a9f32c74be8819d2f09b49349</SHA3_224>
      <SHA3_256>51a0283a8332e99679957152f59acd063596f607f567053ef538e64c9f75ecf2</SHA3_256>
      <SHA3_384>44f9abfc39f11d63ab2e92f5b2c62b770a76bcedee29e2674c658088c39e383c03ed2c3d9746af7aadf76c0cc18144f9</SHA3_384>
      <SHA3_512>746a42aeef3cdf3f3deb899628f20c36c92e2268fb0ad45883cfbfe74394ff84a15a6f421d26f46c231a911ddae489049019c610e2c0a309e4b9704e57035cd8</SHA3_512>
    </Keccak>
    <Keccak>
      <input>2049</input>
      <return>1</return>
      <SHA3_224>13d59fd552e8a83f759fa10b443d560e36f9b32d3d54553690036282</SHA3_224>
      <SHA3_256>aee1e49906909f36267064b9e924a42cc84832c16f2b453ce3dc90ed09431ee9</SHA3_256>
      <SHA3_384>5e3347f462f9514df49d6d6d9f2df802144318dcb22fef6add07ddfb46f72bdf1c9bb9323bcaee870039af86978f1068</SHA3_384>
      <SHA3_512>0354e1653a3c8f4307f4d31f83e84f532598b69211618a73088969768ed995a718fb1da5feaddb4ad79600ee76efe2a52b58bd33029ee291af5419f392f8c16e</SHA3_512>
    </Keccak>
    <Keccak>
      <input>3072</input>
      <return>1</return>
      <SHA3_224>7e28e44f1df828b246b1952d24c7de5faa98d139a9daee2e491d6edb</SHA3_224>
      <SHA3_256>3d6f9314a37c0dec3cd87ccfb4b5d515c3449e40c1640c0123e511134fd3371c</SHA3_256>
      <SHA3_384>49b4adb6da7229dd2803835c7f3846376742ec22728aaf9117ebe4f1ed9812409781400c206f0132b1d992d2794c3ec6</SHA3_384>
      <SHA3_512>776f1df7cbffdff1df64d2fdcb3b3a238667916f901b27b5cddc54f2664572ac6326459b44ab1d28dd023b2a44a868cb6a950ceec4f4720c58cc2c8ad03f5c55</SHA3_512>
    </Keccak>
    <Keccak>
      <input>3073</input>
      <return>1</return>
      <SHA3_224>d5756b31553455e694bde2514720f02e6eff5004df280db6741731c0</SHA3_224>
      <SHA3_256>5f24381c43d4473a3a65dba2430023c3415eb682d7ab0baffec2576c6e20649e</SHA3_256>
      <SHA3_384>2d9861baf20a6d4d094c8eb8e2f4462492856567fafc8e23b5d9bd696098561315202928c5bae4dd73dc0ed0dce7bc6e</SHA3_384>
      <SHA3_512>b53488fe0c03f3ddd91cf153e7cc33701cc4789bb8a02c3a4c8215d6abab0589dffc7778058b606c20725cca5fe1b3c480269eaa43677eb1b5ba84c9ee4c6ef1</SHA3_512>
    </Keccak>
    <Keccak>
      <input>4096</input>
      <return>1</return>
      <SHA3_224>e710eeadf70563847a754d60ba7c97362b08b0eec91e08b7f628dce6</SHA3_224>
      <SHA3_256>40e655a0042c7fc243710579c0d6fad05daceba7d474de35cccb17d194c2cda2</SHA3_256>
      <SHA3_384>de7e4e4470424afae94fea724569c73744f766215c48e5314dd0b2256f8c2a5848bbe3f341f32a59e6b4d055f2fde812</SHA3_384>
      <SHA3_512>ac8fc5c0a7dc20b9234524accd6000bcafbad2850a66455600873c13d1cb6875824f6888630829896eb411ee4973896e0fb6487d8be89fcc3dfd9eed6c93fe90</SHA3_512>
    </Keccak>
    <Keccak>
      <input>4097</input>
      <return>1</return>
      <SHA3_224>ed37079a71b014db056fba28be20e275bef7002152685f55563ee7ba</SHA3_224>
      <SHA3_256>c1743d3e79e9a1516251b027c4210f8b592630bfc9456d4ce36b17e9908bf8fa</SHA3_256>
      <SHA3_384>958c222c76083e19e2e64edf9b71a73844090592f6282874dcad59ff94c078a315c5f16f625643a8c052f306cfc280fb</SHA3_384>
      <SHA3_512>61d8587ac16b5f06e2010ab90e4e369d609ba8e995cb5a65098ef4d681d4c11ef46f1a62bb897981f5e8bce8496645885302ca8269a4042c337e7564e4075bf0</SHA3_512>
    </Keccak>
    <Keccak>
      <input>5120</input>
      <return>1</return>
      <SHA3_224>c5bb921beb40e901bb6a8b9ff87f54acd102b31617b69dae27d80edc</SHA3_224>
      <SHA3_256>791faf2ff8ab27eb6ea5b860baa8db20336213bbe1da02e050f4da3451d868e4</SHA3_256>
      <SHA3_384>f4edc71aa7bcf93bf466b278a378711b4333ab7c8bf6a0b597d93a6068785ad95a390b6d7e0cf21ee611e0fe5cb4b620</SHA3_384>
      <SHA3_512>161e9fe6165a4e9cc91779fe436e5b8e59d11bfb2328bdf389de7cefa2d613f36d8c4249400ae1b2bfed5ebbb52ab2c164b7498a7c187d4f52e7d98a7ef77ffb</SHA3_512>
    </Keccak>
    <Keccak>
      <input>5121</input>
      <return>1</return>
      <SHA3_224>cefb803e3da97cca87920e3142f84f9601eb3f1a68383d05c9c71e09</SHA3_224>
      <SHA3_256>d07ffdb737ad569dc7f648f0bc6dd0968475a7c72dc8aaf8a40184829d9e276d</SHA3_256>
      <SHA3_384>24395363a35adc5c9cc1fab5346afdacc0432727c3ff6b5456b966fd8b168ba0c6151d4853959175c7fb83845fc5c430</SHA3_384>
      <SHA3_512>ff6253c8686d52864b21b6fac5bd91dcadddb30daf39e8a70f07c26904c49889f32449e5cbeb8781c21dff89dce285783bba9df10d6c86fcd24064ed970da13d</SHA3_512>
    </Keccak>
    <Keccak>
      <input>6144</input>
      <return>1</return>
      <SHA3_224>e46947a65472b14a893436f8d8aeb434a324470d21b85993122a25d3</SHA3_224>
      <SHA3_256>2d31fe5b4080fb6a965196936406cb33d3a929030ad9b151dde066e533bb4b99</SHA3_256>
      <SHA3_384>891902665b409c474d75a53985a5e5e324cb05f95edeb0e8df714a8895353faa5c8aa88849189aa8a78328ab899a70d9</SHA3_384>
      <SHA3_512>2cfea6de3c394e88ffbc2236d8b87381cb14e6e5a23235e5d03fa2f395383dd239df59807edd148d39bb271d64e1ab6f7746a9bbd16e553a538ea32bebd3bfee</SHA3_512>
    </Keccak>
    <Keccak>
      <input>6145</input>
      <return>1</return>
      <SHA3_224>9eaa48302221fbd4458032b63c2a0fd656f66baf06be0e727c56410a</SHA3_224>
      <SHA3_256>2277dd53396cef38fe8aa8716739e7d2f4fa33a55c697f21409e96715eca91dc</SHA3_256>
      <SHA3_384>159b07f2aeac0a2aee7f65a367003acfd3f42efce3799170bc8cf29d2bad1eeccdae3b35b86d5c95b980d5d026e68153</SHA3_384>
      <SHA3_512>d5fdcdb2a4cf311ab061ccf062a62bbb2802103f30b87e077ef066f5b20e01b32e4a7443d5bfa518767c92c76b0835a3bebd013d5749fd5ab9586b72824b5a1f</SHA3_512>
    </Keccak>
    <Keccak>
      <input>7168</input>
      <return>1</return>
      <SHA3_224>2e4f3b82daecda1e8f546590c2006625001fd3802b04781233355d38</SHA3_224>
      <SHA3_256>de9a4c24206979eea656585ffc5877faf6203b1bc90a4fbde802f05c36d44c73</SHA3_256>
      <SHA3_384>b1bd8d0584707f9cca3adc794da83a54d268b0512e755d8e9eb7e8f209189de3447fb14cf3e3b0e34634c62b96e09d80</SHA3_384>
      <SHA3_512>3d29a32838788f1068a017d30abbde48438e200164d16810cfc5e72131ca0493c3f147d77e58b594f3dc6dce0fe6d157edb37ddd16fbafa8892d03dd3b7438a6</SHA3_512>
    </Keccak>
    <Keccak>
      <input>7169</input>
      <return>1</return>
      <SHA3_224>ce0dc42b066c8d4aa4c412e625896c3253a371fba7647049689d269e</SHA3_224>
      <SHA3_256>1c76a266bcfc80883d589fbd593ccd628d0b368ecbb40bd9e932d9def73598c9</SHA3_256>
      <SHA3_384>bd3c93282ea84a25b0096468012511b8b2f8217e185d63800511048bd0da36c0d8e1af3113a68f68f0fdaca07fb4fe4f</SHA3_384>
      <SHA3_512>c04d24a5098866a4689f8dea4bae1ca23a86ae20c38550b3ff42694730fcc71fce3a13e6eddd1e948cc5f42a6b479612ec8f5055eb541de81a72e4cf99c35a3b</SHA3_512>
    </Keccak>
    <Keccak>
      <input>8192</input>
      <return>1</return>
      <SHA3_224>b6b0c36fe2b845f393199b5896c06ea2203535fa40f61454f66be7ec</SHA3_224>
      <SHA3_256>ae1e2d41aabdd5f20028d82dbd03bb02c64de6021b9c5afb5db3bec5b415528c</SHA3_256>
      <SHA3_384>dfd45758ce0596a69b5ebcfbd41fd82ab73336b0798882a45b0fa19bdbc31cbfd2dbfc21b599d7baaaf0aa6db172d384</SHA3_384>
      <SHA3_512>54944f3d94baf90603f2d2536d7612aced75dee0e8f1e9e70490729f33539e87a87c1db5eb12779802e47a9a2c4629f00d6363ea282bf876c28779140ab73d17</SHA3_512>
    </Keccak>
    <Keccak>
      <input>8193</input>
      <return>1</return>
      <SHA3_224>a7232b923c520ff46e1d3cf1c21fb712308b37c54ddf49b8a57618b0</SHA3_224>
      <SHA3_256>91cbc140c95662bd52cfb156b36fe9eed52f264dd7babde25cb5e84837633b88</SHA3_256>
      <SHA3_384>d68d76b03025d73fad0495718910f5167bca3667e7dcd90a91f721ec8d28f79d8ae7575db6ddc0d889b50619c3aed756</SHA3_384>
      <SHA3_512>757d20247c70b52e77308ef1bc1eb3dcb5ccd04f9e22c62fb2c62ad49350f336a08d126e9d00edb85af69ff92524b477b9f515c4ce8742cfa2a9c6b243cbe6a0</SHA3_512>
    </Keccak>
    <Keccak>
      <input>16384</input>
      <return>1</return>
      <SHA3_224>ee18735acfa752902c13bd2fa0472b2fb11687f80bd1b717edd92a5e</SHA3_224>
      <SHA3_256>8f8eeb8c5f4c7ca72654a2f6b8ee7c84e0367846655af46494e3e98f91208a43</SHA3_256>
      <SHA3_384>6cbb72f240f59e8acef6e7995430e27d277b0c838f6fe2873ce8ae2ca05ce74c66d89d1a9b974026de3d8694be65ac73</SHA3_384>
      <SHA3_512>7e94924b09f131d8e32a1c6ed0f5340e55aae3bbfd3619cd297acf40730d1ebf92acd763a06a25d58e94d214cacca52542768e78851ba1d82f56c0154d2fd5c8</SHA3_512>
    </Keccak>
    <Keccak>
      <input>31744</input>
      <return>1</return>
      <SHA3_224>314056dd3d94ca15731815ab1b85322ba07ff26e90555d435822e1af</SHA3_224>
      <SHA3_256>cbc6fd3ce90dafe74a83bb29674e48082f59efd400b989214a63e85ae1984d43</SHA3_256>
      <SHA3_384>93115f5c2f020a9c6cd4bf4a20b09abf0096b78b0e2646e64aeee0d87498d2b2cdb5458daf0253273942499a757cf352</SHA3_384>
      <SHA3_512>827727b142e9a09e066f3847c800912b7d76c26cc22874e92b359880b4dc2f593cf13c473004d0033b7afe218db7b58792b5545c812baeaf6d096cbe9f36ded2</SHA3_512>
    </Keccak>
    <sha3>
      <input></input>
      <return>1</return>
      <Keccak_224>f71837502ba8e10837bdd8d365adb85591895602fc552b48b7390abd</Keccak_224>
      <Keccak_256>c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470</Keccak_256>
      <Keccak_384>2c23146a63a29acf99e73b88f8c24eaa7dc60aa771780ccc006afbfa8fe2479b2dd2b21362337441ac12b515911957ff</Keccak_384>
      <Keccak_512>0eab42de4c3ceb9235fc91acffe746b29c29a8c366b7c60e4e67c466f36a4304c00fa9caf9d87976ba469bcbe06713b435f091ef2769fb160cdab33d3670680e</Keccak_512>
      <SHA3_224>6b4e03423667dbb73b6e15454f0eb1abd4597f9a1b078e3f5b5a6bc7</SHA3_224>
      <SHA3_256>a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a</SHA3_256>
      <SHA3_384>0c63a75b845e4f7d01107d852e4c2485c51a50aaaa94fc61995e71bbee983a2ac3713831264adb47fb6bd1e058d5f004</SHA3_384>
      <SHA3_512>a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26</SHA3_512>
    </sha3>
    <sha3>
      <input>The quick brown fox jumps over the lazy dog</input>
      <return>1</return>
      <Keccak_224>310aee6b30c47350576ac2873fa89fd190cdc488442f3ef654cf23fe</Keccak_224>
      <Keccak_256>4d741b6f1eb29cb2a9b9911c82f56fa8d73b04959d3d9d222895df6c0b28aa15</Keccak_256>
      <Keccak_384>283990fa9d5fb731d786c5bbee94ea4db4910f18c62c03d173fc0a5e494422e8a0b3da7574dae7fa0baf005e504063b3</Keccak_384>
      <Keccak_512>d135bb84d0439dbac432247ee573a23ea7d3c9deb2a968eb31d47c4fb45f1ef4422d6c531b5b9bd6f449ebcc449ea94d0a8f05f62130fda612da53c79659f609</Keccak_512>
      <SHA3_224>d15dadceaa4d5d7bb3b48f446421d542e08ad8887305e28d58335795</SHA3_224>
      <SHA3_256>69070dda01975c8c120c3aada1b282394e7f032fa9cf32f4cb2259a0897dfc04</SHA3_256>
      <SHA3_384>7063465e08a93bce31cd89d2e3ca8f602498696e253592ed26f07bf7e703cf328581e1471a7ba7ab119b1a9ebdf8be41</SHA3_384>
      <SHA3_512>01dedd5de4ef14642445ba5f5b97c15e47b9ad931326e4b0727cd94cefc44fff23f07bf543139939b49128caf436dc1bdee54fcb24023a08d9403f9b4bf0d450</SHA3_512>
    </sha3>
    <xxHash algorithm="XXH32" return="46947589" /><!-- BE -> 0x02CC5D05 -->
    <xxHash algorithm="XXH32" seed="2654435761" return="917998311" /><!-- BE -> 0x36B78AE7 -->
    <xxHash algorithm="XXH32" length="1" return="3093085925" /><!-- BE -> 0xB85CBEE5 -->
    <xxHash algorithm="XXH32" length="1" seed="2654435761" return="3582221668" /><!-- BE -> 0xD5845D64 -->
    <xxHash algorithm="XXH32" length="14" return="3853126324" /><!-- BE -> 0xE5AA0AB4 -->
    <xxHash algorithm="XXH32" length="14" seed="2654435761" return="1149343005" /><!-- BE -> 0x4481951D -->
    <xxHash algorithm="XXH32" length="222" return="3355904022" /><!-- BE -> 0xC8070816 -->
    <xxHash algorithm="XXH32" length="222" seed="2654435761" return="4090480722" /><!-- BE -> 0xF3CFC852 -->
    <xxHash algorithm="XXH64" return="17241709254077376921" /><!-- BE -> 0xEF46DB3751D8E999 -->
    <xxHash algorithm="XXH64" seed="2654435761" return="12427117621484918767" /><!-- BE -> 0xAC75FDA2929B17EF -->
    <xxHash algorithm="XXH64" length="1" return="5750596776143442648" /><!-- BE -> 0x4FCE394CC88952D8 -->
    <xxHash algorithm="XXH64" length="1" seed="2654435761" return="8329478753618994979" /><!-- BE -> 0x739840CB819FA723 -->
    <xxHash algorithm="XXH64" length="14" return="14986446533618842173" /><!-- BE -> 0xCFFA8DB881BC3A3D -->
    <xxHash algorithm="XXH64" length="14" seed="2654435761" return="6599481375206459851" /><!-- BE -> 0x5B9611585EFCC9CB -->
    <xxHash algorithm="XXH64" length="222" return="11373004714924552253" /><!-- BE -> 0x9DD507880DEBB03D -->
    <xxHash algorithm="XXH64" length="222" seed="2654435761" return="15875559714628437504" /><!-- BE -> 0xDC515172B8EE0600 -->
    <file_get_checksum>
      <blake2b-512 input="0">786a02f742015903c6c6fd852552d272912f4740e15847618a86e217f71f5419d25e1031afee585313896444934eb04b903a685b1448b755d56f701afe9be2ce</blake2b-512>
      <blake2b-512 input="1">2fa3f686df876995167e7c2e5d74c4c7b6e48f8068fe0e44208344d480f7904c36963e44115fe3eb2a3ac8694c28bcb4f5a0f3276f2e79487d8219057a506e4b</blake2b-512>
      <blake2b-512 input="69">78a9fc048e25c6dcb5de45667de8ffdd3a93711141d594e9fa62a959475da6075ea8f0916e84e45ad911b75467077ee52d2c9aebf4d58f20ce4a3a00458b05d4</blake2b-512>
      <blake2b-512 input="70">45813f441769ab6ed37d349ff6e72267d76ae6bb3e3c612ec05c6e02a12af5a37c918b52bf74267c3f6a3f183a8064ff84c07b193d08066789a01accdb6f9340</blake2b-512>
      <blake2b-512 input="71">956da1c68d83a7b881e01b9a966c3c0bf27f68606a8b71d457bd016d4c41dd8a380c709a296cb4c6544792920fd788835771a07d4a16fb52ed48050331dc4c8b</blake2b-512>
      <blake2b-512 input="101">965f20f139765fcc4ce4ba3794675863cac24db472cd2b799d035bce3dbea502da7b524865f6b811d8c5828d3a889646fe64a380da1aa7c7044e9f245dced128</blake2b-512>
      <blake2b-512 input="102">ec295b5783601244c30e4641e3b45be222c4dce77a58700f53bc8ec52a941690b4d0b087fb6fcb3f39832b9de8f75ec20bd43079811749cdc907edb94157d180</blake2b-512>
      <blake2b-512 input="103">61c72f8ccc91dbb54ca6750bc489672de09faedb8fdd4f94ff2320909a303f5d5a98481c0bc1a625419fb4debfbf7f8a53bb07ec3d985e8ea11e72d559940780</blake2b-512>
      <blake2b-512 input="133">e59b9987d428b3eda37d80abdb16cd2b0aef674c2b1dda4432ea91ee6c935c684b48b4428a8cc740e579a30deff35a803013820dd23f14ae1d8413b5c8672aec</blake2b-512>
      <blake2b-512 input="134">cd9fcc99f99d4cc16d031900b2a736e1508db4b586814e6345857f354a70ccecb1df3b50a19adaf43c278efa423ff4bb6c523ec7fd7859b97b168a7ebff8467c</blake2b-512>
      <blake2b-512 input="135">0602185d8c3a78738b99164b8bc6ffb21c7debebbf806372e0da44d121545597b9c662a255dc31542cf995ecbe6a50fb5e6e0ee4ef240fe557eded1188087e86</blake2b-512>
      <blake2b-512 input="141">75351313b52a8529298d8c186b1768666dcca8595317d7a4816eb88c062020c0c8efc554bb341b64688db5ccafc35f3c3cd09d6564b36d7b04a248e146980d4b</blake2b-512>
      <blake2b-512 input="142">e3128b1d311d02179d7f25f97a5a8bee2cc8c86303644fcd664e157d1fef00f23e46f9a5e8e5c890ce565bb6abd4302ce06469d52a5bd53e1c5a54d04649dc03</blake2b-512>
      <blake2b-512 input="143">c2382a72d2d3ace9d5933d00b60827ed380cda08d0ba5f6dd41e29ee6dbe8ecb9235f06be95d83b6816a2fb7a5ad47035e8a4b69a4884b99e4bece58cab25d44</blake2b-512>
      <blake2b-512 input="1023">e55fd611a16696f8295ea5120a151e312e5dfb1488ac74be64118ffe1bc1d539e725ad0440e5213de297ba435d381c66edf88eebf28b8d640e31103842d3be29</blake2b-512>
      <blake2b-512 input="1024">8d1090909017add40e749df2d0ebac43273d6fc816bc4ffaf2a6dfabe4206dea13677d2002399e4a38e700d8083db4af8341ee9b3a5147110b6a963a3894e4e2</blake2b-512>
      <blake2b-512 input="1025">7a9e5283a15d13b995755360fde4c65c2ae1bc0cf33e8db2ce8416e5d10697c73fc4b2622a29b938a1faec43d931b02e71ad8635e071265633643a9d9396ec28</blake2b-512>
      <blake2b-512 input="2048">84ef376f8080d5d19a6914c9b8e8eaf71b3f716f5b4f0da4fdf81b6c465a5656e01b52807011e1fce05e77729aae5422c6424fe241f7ba93da39456e5c5448d9</blake2b-512>
      <blake2b-512 input="2049">146560fd774a01704fcce96f5f9b4b042ae43c928ad6546fb070b0ec18d2a4ac592578af038a1f6c5b79144fb16a0c6428999d518384d8349a3ec3707aa50ac2</blake2b-512>
      <blake2b-512 input="3072">6a4fd5fd8cc0a8e717b28757c896096b0452750684cf7c6c3636f51a98beb32c88f32c9ed7140f90a2cdff2fc4ff49bcaa257f14a6bf6f926530cb47cc7aa340</blake2b-512>
      <blake2b-512 input="3073">8f204a6e0204733471290db377aff78f069bc2d3d943de81f9a0b71764204c71fb3b1c09a3cd7f3b9f290b7325afb591597ebebc853657acff0fdb242f745d16</blake2b-512>
      <blake2b-512 input="4096">c7a3d6a53bd11772ecf077c1dc9633a39c6fe691ec07a530e0e765c0a9d5a01a16f00995536578b83e54c2821766ac7ac6ae86e22269a5d14208ccac954cc95f</blake2b-512>
      <blake2b-512 input="4097">a1aca2bd515e5a87ed22476d9209f748754ebaeddef9cd1e1d57c12cc4b9029342cb74899a9f23cfece0ee8be2fd86e9e72a9289921231a6e40883d01694e0dd</blake2b-512>
      <blake2b-512 input="5120">c4ce856743cab7efd10591a0b43e0049dee967baaf0ac042fe571a62b01687c99ac345fd6bb3a5ffec83b31f96f92bd00337a59bb6f066696c2968e624461644</blake2b-512>
      <blake2b-512 input="5121">92fecb457c0e6c3de55bf61fbabdcf805191fd53aa8d46efbf7a4e76828ac79cd10b5a00aab74e3c9c5bc053cfb742e8170604a85087bf9aa634729b2a7939c6</blake2b-512>
      <blake2b-512 input="6144">71b0c49f685263009535c8d90d3cb3983eb39840f5b6e32072ac239f2a5f7fc72d1ef13a5a765a82f1485dfe63b0f5145726940848ca2390a57dc5e719f17b4e</blake2b-512>
      <blake2b-512 input="6145">39b663dd381569a0b708005e423b1813dd90e2a0b3716995a7366ce226f2d624c5826aa40b5eee94003ccab32ddf940d3b8bb7312643d1e1bb3ae10228fd0d84</blake2b-512>
      <blake2b-512 input="7168">643e53172be0fd9c4a9480ee718205fa593b0c0ee325d92248bceac3f8c7b31a4fb23b9465df1df8f822da17b7f7ec0d538e5a462e2b559578b313b84392ea2e</blake2b-512>
      <blake2b-512 input="7169">ec21a001756ee29de1e67ad1b5fa4e5f5ef702332ac30a38fd3e8765355bdbcd8052ef4343bd9b9f9ef577cd93b8c20c64646ab48950922d0a64f11aa60abc04</blake2b-512>
      <blake2b-512 input="8192">6e02a28235a5fea5bb41fe376b384a8f83376b633ae67572d73b4152c94b07a5fadb1478a2debefb3ac30cb5594e0352b108b73163f9e09f260e4f483900a039</blake2b-512>
      <blake2b-512 input="8193">00f382e50aa061d8e3eac0a7bec89c711d2ec4c315d894fef92a8c71d79b4f9b8b6182bd2965b2428c12001c0748efff0e7a9610cea33f83a055c695d5ab767f</blake2b-512>
      <blake2b-512 input="16384">fdaf9dca1aaf9c01e65379b5b17dffc40f890721627bf5eca54558245324ad8983b7f445a642f9d9388367226e4a1d2fb15591ac0cbeec886c247eee76d3a576</blake2b-512>
      <blake2b-512 input="31744">c3494504df969632ed8a0827ab8508354f31059e7cd44ae21a27a510793cffb53fc21dd1a42efbb0dfe7b22435450056443a2090992ff6043818fb0b25b1d5d0</blake2b-512>
    </file_get_checksum>
    <file_get_checksum>
      <blake3 input="0">af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262</blake3>
      <blake3 input="1">2d3adedff11b61f14c886e35afa036736dcd87a74d27b5c1510225d0f592e213</blake3>
      <blake3 input="1023">10108970eeda3eb932baac1428c7a2163b0e924c9a9e25b35bba72b28f70bd11</blake3>
      <blake3 input="1024">42214739f095a406f3fc83deb889744ac00df831c10daa55189b5d121c855af7</blake3>
      <blake3 input="1025">d00278ae47eb27b34faecf67b4fe263f82d5412916c1ffd97c8cb7fb814b8444</blake3>
      <blake3 input="2048">e776b6028c7cd22a4d0ba182a8bf62205d2ef576467e838ed6f2529b85fba24a</blake3>
      <blake3 input="2049">5f4d72f40d7a5f82b15ca2b2e44b1de3c2ef86c426c95c1af0b6879522563030</blake3>
      <blake3 input="3072">b98cb0ff3623be03326b373de6b9095218513e64f1ee2edd2525c7ad1e5cffd2</blake3>
      <blake3 input="3073">7124b49501012f81cc7f11ca069ec9226cecb8a2c850cfe644e327d22d3e1cd3</blake3>
      <blake3 input="4096">015094013f57a5277b59d8475c0501042c0b642e531b0a1c8f58d2163229e969</blake3>
      <blake3 input="4097">9b4052b38f1c5fc8b1f9ff7ac7b27cd242487b3d890d15c96a1c25b8aa0fb995</blake3>
      <blake3 input="5120">9cadc15fed8b5d854562b26a9536d9707cadeda9b143978f319ab34230535833</blake3>
      <blake3 input="5121">628bd2cb2004694adaab7bbd778a25df25c47b9d4155a55f8fbd79f2fe154cff</blake3>
      <blake3 input="6144">3e2e5b74e048f3add6d21faab3f83aa44d3b2278afb83b80b3c35164ebeca205</blake3>
      <blake3 input="6145">f1323a8631446cc50536a9f705ee5cb619424d46887f3c376c695b70e0f0507f</blake3>
      <blake3 input="7168">61da957ec2499a95d6b8023e2b0e604ec7f6b50e80a9678b89d2628e99ada77a</blake3>
      <blake3 input="7169">a003fc7a51754a9b3c7fae0367ab3d782dccf28855a03d435f8cfe74605e7817</blake3>
      <blake3 input="8192">aae792484c8efe4f19e2ca7d371d8c467ffb10748d8a5a1ae579948f718a2a63</blake3>
      <blake3 input="8193">bab6c09cb8ce8cf459261398d2e7aef35700bf488116ceb94a36d0f5f1b7bc3b</blake3>
      <blake3 input="16384">f875d6646de28985646f34ee13be9a576fd515f76b5b0a26bb324735041ddde4</blake3>
      <blake3 input="31744">62b6960e1a44bcc1eb1a611a8d6235b6b4b78f32e7abc4fb4c6cdcce94895c47</blake3>
    </file_get_checksum>
    <file_get_checksum>
      <sha3 input="0">a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a</sha3>
      <sha3 input="1">5d53469f20fef4f8eab52b88044ede69c77a6a68a60728609fc4a65ff531e7d0</sha3>
      <sha3 input="69">ed379e9012f1d3a4fef5096688a2557b3ceb68c619245bffcf05a14a5a846fd9</sha3>
      <sha3 input="70">97a26b0e8066f35d400b7f12a6ae62a290bc1ca68660b4da8bf17afad6b8c948</sha3>
      <sha3 input="71">881ad9ffbd7f090efa51cbdfe93da23a0401f4446f7adf150d1c226851cbfff2</sha3>
      <sha3 input="101">af504dd36feb666b16fe553116adbdd604e449ca783e54a83171aee7ddc7e7b1</sha3>
      <sha3 input="102">986b81944604ef3a1f26032a04537777c0ecd1cb66b37e3ca6e9b108befaf56c</sha3>
      <sha3 input="103">120a055c592d237c0f535eebfc05673374fe4a50e1330293ef2c1ab611e0d0ba</sha3>
      <sha3 input="133">721f0e936b3b93c0384f970c07680a8a6293e5012295e83615ea4657ed5d7e17</sha3>
      <sha3 input="134">644e15224f5597351aef5c4bdd22b27ca0c19db2244431534c2a4a0bebfdf39c</sha3>
      <sha3 input="135">fded8fd9d6551c601eeb3b7c6bc5e5cfd8aad1d015b7e9aaa9c9b9475231d5e2</sha3>
      <sha3 input="136">cf3ccff92480a29160c2d38317c430e14749bfee1788106957dfe73f8c4930e5</sha3>
      <sha3 input="141">4134fa637cc87ac52320f311f4a681ef740b58da8ce2c09c721eedd720179c4f</sha3>
      <sha3 input="142">4996d371abd506e72178b4cbea8e9f5ad781a5a566543d97f89a4efb13d5bb5f</sha3>
      <sha3 input="143">295fef4d46110ee21fba0d1798a1bb7c1bbc88306bc9b7661b18ace7170f02ae</sha3>
      <sha3 input="1023">3456dac4a1209693b8c2bd2cd27fc64c330ce283b8d43a0d9662761825865cbc</sha3>
      <sha3 input="1024">ba7f1834cddbba9f82cd4dcf7a106bb2e615fec90020f5a5de8efff8d49198b6</sha3>
      <sha3 input="1025">413cf357775aef534fcd49da91a30f7877b50bbd924a20649315a4827f79cac0</sha3>
      <sha3 input="2048">51a0283a8332e99679957152f59acd063596f607f567053ef538e64c9f75ecf2</sha3>
      <sha3 input="2049">aee1e49906909f36267064b9e924a42cc84832c16f2b453ce3dc90ed09431ee9</sha3>
      <sha3 input="3072">3d6f9314a37c0dec3cd87ccfb4b5d515c3449e40c1640c0123e511134fd3371c</sha3>
      <sha3 input="3073">5f24381c43d4473a3a65dba2430023c3415eb682d7ab0baffec2576c6e20649e</sha3>
      <sha3 input="4096">40e655a0042c7fc243710579c0d6fad05daceba7d474de35cccb17d194c2cda2</sha3>
      <sha3 input="4097">c1743d3e79e9a1516251b027c4210f8b592630bfc9456d4ce36b17e9908bf8fa</sha3>
      <sha3 input="5120">791faf2ff8ab27eb6ea5b860baa8db20336213bbe1da02e050f4da3451d868e4</sha3>
      <sha3 input="5121">d07ffdb737ad569dc7f648f0bc6dd0968475a7c72dc8aaf8a40184829d9e276d</sha3>
      <sha3 input="6144">2d31fe5b4080fb6a965196936406cb33d3a929030ad9b151dde066e533bb4b99</sha3>
      <sha3 input="6145">2277dd53396cef38fe8aa8716739e7d2f4fa33a55c697f21409e96715eca91dc</sha3>
      <sha3 input="7168">de9a4c24206979eea656585ffc5877faf6203b1bc90a4fbde802f05c36d44c73</sha3>
      <sha3 input="7169">1c76a266bcfc80883d589fbd593ccd628d0b368ecbb40bd9e932d9def73598c9</sha3>
      <sha3 input="8192">ae1e2d41aabdd5f20028d82dbd03bb02c64de6021b9c5afb5db3bec5b415528c</sha3>
      <sha3 input="8193">91cbc140c95662bd52cfb156b36fe9eed52f264dd7babde25cb5e84837633b88</sha3>
      <sha3 input="16384">8f8eeb8c5f4c7ca72654a2f6b8ee7c84e0367846655af46494e3e98f91208a43</sha3>
      <sha3 input="31744">cbc6fd3ce90dafe74a83bb29674e48082f59efd400b989214a63e85ae1984d43</sha3>
    </file_get_checksum>
  </TestHashAlgorithm>
  <TestInterpreter>
    <interpreter_disassemble_function>
      <input></input>
      <name_space></name_space>
      <name></name>
      <arguments_area></arguments_area>
      <return></return>
    </interpreter_disassemble_function>
    <interpreter_disassemble_function>
      <input><![CDATA[string::substring('project.name', string::last-index-of('project.name', '.'), string::get-length('project.name') - string::last-index-of('project.name', '.'))]]></input>
      <input></input>
      <name_space>string</name_space>
      <name>substring</name>
      <arguments_area><![CDATA['project.name', string::last-index-of('project.name', '.'), string::get-length('project.name') - string::last-index-of('project.name', '.')]]></arguments_area>
      <return>1</return>
    </interpreter_disassemble_function>
    <interpreter_get_values_for_arguments>
      <arguments></arguments>
      <return></return>
    </interpreter_get_values_for_arguments>
    <interpreter_get_values_for_arguments>
      <arguments>'Abc', 'a'</arguments>
      <return>2</return>
      <output>Abc</output>
      <output>a</output>
    </interpreter_get_values_for_arguments>
    <interpreter_get_values_for_arguments>
      <arguments><![CDATA['project.name', string::last-index-of('project.name', '.'), '5']]></arguments>
      <return>3</return>
      <output>project.name</output>
      <output>7</output>
      <output>5</output>
    </interpreter_get_values_for_arguments>
    <interpreter_get_values_for_arguments>
      <arguments><![CDATA[string::get-length('project.name') - string::last-index-of('project.name', '.')]]></arguments>
      <return>1</return>
      <output>12 - 7</output>
    </interpreter_get_values_for_arguments>
    <interpreter_get_values_for_arguments>
      <arguments><![CDATA['project.name', string::last-index-of('project.name', '.'), string::get-length('project.name') - string::last-index-of('project.name', '.')]]></arguments>
      <return>3</return>
      <output>project.name</output>
      <output>7</output>
      <output>12 - 7</output>
    </interpreter_get_values_for_arguments>
    <interpreter_evaluate_code>
      <code></code>
      <output></output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>Just a string.</code>
      <output>Just a string.</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Desktop')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Programs')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Personal')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyDocuments')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Favorites')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Startup')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Recent')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('SendTo')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('StartMenu')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyMusic')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyVideos')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('DesktopDirectory')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyComputer')</code>
      <code>)}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('NetworkShortcuts')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Fonts')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Templates')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonStartMenu')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonPrograms')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonStartup')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonDesktopDirectory')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('ApplicationData')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('PrinterShortcuts')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('LocalApplicationData')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('InternetCache')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Cookies')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('History')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonApplicationData')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Windows')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('System')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('ProgramFiles')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyPictures')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('UserProfile')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('SystemX86')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('ProgramFilesX86')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonProgramFiles')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonProgramFilesX86')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonTemplates')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonDocuments')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonAdminTools')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('AdminTools')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonMusic')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonPictures')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonVideos')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Resources')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('LocalizedResources')</code>
      <code>)}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonOemLinks')</code>
      <code>)}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CDBurning')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${math::less(string::get-length(environment::get-machine-name()), '255')}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::get-operating-system())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::substring(environment::get-operating-system(), '0', '20')}</code>
      <output>Microsoft Windows NT</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::get-user-name())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(environment::get-variable('SystemRoot'))}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>newline() -> ${environment::newline()} </code>
      <output>newline() -> &#13;&#10; </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>newline() -> ${environment::newline()} </code>
      <output>newline() -> &#10; </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>variable-exists('PATH') -> ${environment::variable-exists('PATH')} </code>
      <output>variable-exists('PATH') -> True </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>variable-exists('PATH!@#') -> ${environment::variable-exists('PATH!@#')} </code>
      <output>variable-exists('PATH!@#') -> False </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::is64bit-process())} </code>
      <output>False </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::is64bit-operating-system())} </code>
      <output>False </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${math::less('0', environment::processor-count())} </code>
      <output>True </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>contains('Abc', 'a') -> ${string::contains('Abc', 'a')}</code>
      <output>contains('Abc', 'a') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>contains('Abc', 'A') -> ${string::contains('Abc', 'A')}</code>
      <output>contains('Abc', 'A') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with('', '') -> ${string::ends-with('', '')}</code>
      <output>ends-with('', '') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with('', 'A') -> ${string::ends-with('', 'A')}</code>
      <output>ends-with('', 'A') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with(' ', ' ') -> ${string::ends-with(' ', ' ')}</code>
      <output>ends-with(' ', ' ') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with('AB', 'CD') -> ${string::ends-with('AB', 'CD')}</code>
      <output>ends-with('AB', 'CD') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with('ABCD', 'CD') -> ${string::ends-with('ABCD', 'CD')}</code>
      <output>ends-with('ABCD', 'CD') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-length('') -> ${string::get-length('')}</code>
      <output>get-length('') -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-length(' ') -> ${string::get-length(' ')}</code>
      <output>get-length(' ') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty() -> ${string::empty('')}, </code>
      <code>empty( ) -> ${string::empty(' ')}</code>
      <output>empty() -> True, </output>
      <output>empty( ) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-length('ABCDE') -> ${string::get-length('ABCDE')}</code>
      <output>get-length('ABCDE') -> 5</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of('', '') -> ${string::index-of('', '')}</code>
      <output>index-of('', '') -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of(' ', ' ') -> ${string::index-of(' ', ' ')}</code>
      <output>index-of(' ', ' ') -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of(' ', 'A') -> ${string::index-of(' ', 'A')}</code>
      <output>index-of(' ', 'A') -> -1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of('AB', 'B') -> ${string::index-of('AB', 'B')}</code>
      <output>index-of('AB', 'B') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of('ABAB', 'B') -> ${string::index-of('ABAB', 'B')}</code>
      <output>index-of('ABAB', 'B') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of('AB', 'C') -> ${string::index-of('AB', 'C')}</code>
      <output>index-of('AB', 'C') -> -1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>last-index-of('AB', 'B') -> ${string::last-index-of('AB', 'B')}</code>
      <output>last-index-of('AB', 'B') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>last-index-of('ABAB', 'B') -> ${string::last-index-of('ABAB', 'B')}</code>
      <output>last-index-of('ABAB', 'B') -> 3</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>last-index-of('AB', 'C') -> ${string::last-index-of('AB', 'C')}</code>
      <output>last-index-of('AB', 'C') -> -1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of-any('AB', 'BA') -> ${string::index-of-any('AB', 'BA')}</code>
      <output>index-of-any('AB', 'BA') -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of-any('ABAB', 'AB') -> ${string::index-of-any('ABAB', 'AB')}</code>
      <output>index-of-any('ABAB', 'AB') -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>last-index-of-any('AB', 'BA') -> ${string::last-index-of-any('AB', 'BA')}</code>
      <output>last-index-of-any('AB', 'BA') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>last-index-of-any('ABAB', 'BA') -> ${string::last-index-of-any('ABAB', 'BA')}</code>
      <output>last-index-of-any('ABAB', 'BA') -> 3</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>pad-left('Abc', '4', ' ') -> ${string::pad-left('Abc', '4', ' ')}</code>
      <output>pad-left('Abc', '4', ' ') ->  Abc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>pad-right('Abc', '4', ' ') -> ${string::pad-right('Abc', '4', ' ')}</code>
      <output>pad-right('Abc', '4', ' ') -> Abc </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>replace('', '', '') -> ${string::replace('', '', '')}</code>
      <output>replace('', '', '') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>replace('abc', 'b', 'ABC') -> ${string::replace('abc', 'b', 'ABC')}</code>
      <output>replace('abc', 'b', 'ABC') -> aABCc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>replace('abc123', 'bc1', '') -> ${string::replace('abc123', 'bc1', '')}</code>
      <output>replace('abc123', 'bc1', '') -> a23</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with('', '') -> ${string::starts-with('', '')}</code>
      <output>starts-with('', '') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with('', 'A') -> ${string::starts-with('', 'A')}</code>
      <output>starts-with('', 'A') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with(' ', ' ') -> ${string::starts-with(' ', ' ')}</code>
      <output>starts-with(' ', ' ') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with('AB', 'CD') -> ${string::starts-with('AB', 'CD')}</code>
      <output>starts-with('AB', 'CD') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with('ABCD', 'AB') -> ${string::starts-with('ABCD', 'AB')}</code>
      <output>starts-with('ABCD', 'AB') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '2', '1') -> ${string::substring('ABCD', '2', '1')}</code>
      <output>substring('ABCD', '2', '1') -> C</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '2', '3') -> ${string::substring('ABCD', '2', '3')}</code>
      <output>substring('ABCD', '2', '3') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '2', '4') -> ${string::substring('ABCD', '2', '4')}</code>
      <output>substring('ABCD', '2', '4') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '2') -> ${string::substring('ABCD', '2')}</code>
      <output>substring('ABCD', '2') -> CD</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '4') -> ${string::substring('ABCD', '4')}</code>
      <output>substring('ABCD', '4') -> </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '5') -> ${string::substring('ABCD', '5')}</code>
      <output>substring('ABCD', '5') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-lower('') -> ${string::to-lower('')}</code>
      <output>to-lower('') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-lower('ABCD') -> ${string::to-lower('ABCD')}</code>
      <output>to-lower('ABCD') -> abcd</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-lower('abcd') -> ${string::to-lower('abcd')}</code>
      <output>to-lower('abcd') -> abcd</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-upper('') -> ${string::to-upper('')}</code>
      <output>to-upper('') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-upper('ABCD') -> ${string::to-upper('ABCD')}</code>
      <output>to-upper('ABCD') -> ABCD</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-upper('abcd') -> ${string::to-upper('abcd')}</code>
      <output>to-upper('abcd') -> ABCD</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>trim(' abc ') -> ${string::trim(' abc ')}</code>
      <output>trim(' abc ') -> abc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>trim-end(' abc ') -> ${string::trim-end(' abc ')}</code>
      <output>trim-end(' abc ') ->  abc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>trim-start(' abc ') -> ${string::trim-start(' abc ')}</code>
      <output>trim-start(' abc ') -> abc </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>quote() -> ${string::quote('')}</code>
      <output>quote() -> ""</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>quote(a b c) -> ${string::quote('a b c')}</code>
      <output>quote(a b c) -> "a b c"</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>un-quote() -> ${string::un-quote('')}</code>
      <output>un-quote() -> </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>un-quote(") -> ${string::un-quote('"')}</code>
      <output>un-quote(") -> </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>un-quote("a b c") -> ${string::un-quote('"a b c"')}</code>
      <output>un-quote("a b c") -> a b c</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>un-quote(""a b c"") -> ${string::un-quote('""a b c""')}</code>
      <output>un-quote(""a b c"") -> a b c</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>equal('', '') -> ${string::equal('', '')}</code>
      <output>equal('', '') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>equal(' ', ' ') -> ${string::equal(' ', ' ')}</code>
      <output>equal(' ', ' ') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>equal('A', 'B') -> ${string::equal('A', 'B')}</code>
      <output>equal('A', 'B') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${property::exists('My_property')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${property::get-value('My_property')}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${property::is-dynamic('My_property')}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${property::is-readonly('My_property')}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::equal(platform::is-macos(), platform::is-windows())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-macos()}">
      <code>${string::equal(platform::is-macos(), platform::is-windows())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(platform::is-macos())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::equal(platform::is-unix(), platform::is-windows())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::parse('1.2.3.4')}</code>
      <output>1.2.3.4</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::to-string('1.2.3.4')}</code>
      <output>1.2.3.4</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::get-major('1.2.3.4')}</code>
      <output>1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::get-minor('1.2.3.4')}</code>
      <output>2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::get-build('1.2.3.4')}</code>
      <output>3</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::get-revision('1.2.3.4')}</code>
      <output>4</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-base-directory()}</code>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-buildfile-path()}</code>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-buildfile-uri()}</code>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-default-target()}</code>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-name()}</code>
      <return>1</return>
    </interpreter_evaluate_code>
    <!--interpreter_evaluate_code>
      <code>${program::version()}</code>
      <return>0</return>
    </interpreter_evaluate_code-->
    <interpreter_evaluate_code>
      <code>path::change-extension('1.txt', '.exe') => ${path::change-extension('1.txt', '.exe')}</code>
      <output>path::change-extension('1.txt', '.exe') => 1.exe</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>path::combine('C:\', '\Windows') => ${path::combine('C:\', '\Windows')}</code>
      <output>path::combine('C:\', '\Windows') => C:\Windows</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>path::combine('/tmp/', '/file') => ${path::combine('/tmp/', '/file')}</code>
      <output>path::combine('/tmp/', '/file') => /tmp/file</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>path::get-directory-name('C:\Windows\System32\cmd.exe') => ${path::get-directory-name('C:\Windows\System32\cmd.exe')}</code>
      <output>path::get-directory-name('C:\Windows\System32\cmd.exe') => C:\Windows\System32</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>path::get-directory-name('/tmp/file') => ${path::get-directory-name('/tmp/file')}</code>
      <output>path::get-directory-name('/tmp/file') => /tmp</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>get-file-name('C:\Windows\System32\cmd.exe') => ${path::get-file-name('C:\Windows\System32\cmd.exe')}</code>
      <output>get-file-name('C:\Windows\System32\cmd.exe') => cmd.exe</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>get-file-name('/tmp/file') => ${path::get-file-name('/tmp/file')}</code>
      <output>get-file-name('/tmp/file') => file</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-file-name-without-extension('1.txt') => ${path::get-file-name-without-extension('1.txt')}</code>
      <output>get-file-name-without-extension('1.txt') => 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-file-name-without-extension('abc.txt') => ${path::get-file-name-without-extension('abc.txt')}</code>
      <output>get-file-name-without-extension('abc.txt') => abc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>get-path-root('C:\Windows\System32\cmd.exe') => ${path::get-path-root('C:\Windows\System32\cmd.exe')}</code>
      <output>get-path-root('C:\Windows\System32\cmd.exe') => C:\</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>get-path-root('/tmp/file') => ${path::get-path-root('/tmp/file')}</code>
      <output>get-path-root('/tmp/file') => /</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>is-path-rooted(get-temp-file-name()) => ${path::is-path-rooted(path::get-temp-file-name())}</code>
      <output>is-path-rooted(get-temp-file-name()) => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>is-path-rooted(get-temp-path()) => ${path::is-path-rooted(path::get-temp-path())}</code>
      <output>is-path-rooted(get-temp-path()) => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>has-extension('abc.txt') => ${path::has-extension('abc.txt')}</code>
      <output>has-extension('abc.txt') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>has-extension('abc') => ${path::has-extension('abc')}</code>
      <output>has-extension('abc') => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>is-path-rooted('abc') => ${path::is-path-rooted('abc')}</code>
      <output>is-path-rooted('abc') => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>is-path-rooted('C:\') => ${path::is-path-rooted('C:\')}</code>
      <output>is-path-rooted('C:\') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>is-path-rooted('\\?\C:\') => ${path::is-path-rooted('\\?\C:\')}</code>
      <output>is-path-rooted('\\?\C:\') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>is-path-rooted('/') => ${path::is-path-rooted('/')}</code>
      <output>is-path-rooted('/') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>less('1', string::get-length(get-full-path('.'))) => ${math::less('1', string::get-length(path::get-full-path('.')))}</code>
      <output>less('1', string::get-length(get-full-path('.'))) => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <!--code>get-dos-path('C:\Program Files\Windows Defender Advanced Threat Protection') => ${cygpath::get-dos-path('C:\Program Files\Windows Defender Advanced Threat Protection')}</code>
      <output>get-dos-path('C:\Program Files\Windows Defender Advanced Threat Protection') => C:\PROGRA~1\WIF4A9~1</output-->
      <code>get-dos-path('C:\Program Files\Internet Explorer') => ${cygpath::get-dos-path('C:\Program Files\Internet Explorer')}</code>
      <output>get-dos-path('C:\Program Files\Internet Explorer') => C:\PROGRA~1\INTERN~1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>get-dos-path('\') => ${cygpath::get-dos-path('\')}</code>
      <output>get-dos-path('\') => </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-unix-path('C:\Windows\System32') => ${cygpath::get-unix-path('C:\Windows\System32')}</code>
      <output>get-unix-path('C:\Windows\System32') => C:/Windows/System32</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-unix-path('/usr/lib/') => ${cygpath::get-unix-path('/usr/lib/')}</code>
      <output>get-unix-path('/usr/lib/') => /usr/lib/</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-windows-path('C:\Windows\System32') => ${cygpath::get-windows-path('C:\Windows\System32')}</code>
      <output>get-windows-path('C:\Windows\System32') => C:\Windows\System32</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-windows-path('/usr/lib/') => ${cygpath::get-windows-path('/usr/lib/')}</code>
      <output>get-windows-path('/usr/lib/') => \usr\lib\</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(get-directory-name(get-temp-path())) -> ${string::empty(path::get-directory-name(path::get-temp-path()))}</code>
      <output>empty(get-directory-name(get-temp-path())) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(current-directory()) => ${string::empty(program::current-directory())}</code>
      <output>empty(current-directory()) => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('True') => ${bool::parse('True')}</code>
      <output>parse('True') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('False') => ${bool::parse('False')}</code>
      <output>parse('False') => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('True') => ${bool::to-string('True')}</code>
      <output>to-string('True') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('False') => ${bool::to-string('False')}</code>
      <output>to-string('False') => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('0.5') => ${string::substring(double::parse('0.5'), '0', '3')}</code>
      <output>parse('0.5') => 0.5</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('0.5') => ${string::substring(double::to-string('0.5'), '0', '3')}</code>
      <output>to-string('0.5') => 0.5</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('2') => ${int::parse('2')}</code>
      <output>parse('2') => 2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('2') => ${int::to-string('2')}</code>
      <output>to-string('2') => 2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('2147483647') => ${long::parse('2147483647')}</code>
      <output>parse('2147483647') => 2147483647</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('2147483647') => ${long::to-string('2147483647')}</code>
      <output>to-string('2147483647') => 2147483647</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('9223372036854775807') => ${int64::parse('9223372036854775807')}</code>
      <output>parse('9223372036854775807') => 9223372036854775807</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('9223372036854775807') => ${int64::to-string('9223372036854775807')}</code>
      <output>to-string('9223372036854775807') => 9223372036854775807</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(abs('-1')) -> ${math::truncate(math::abs('-1'))}, truncate(abs('1')) -> ${math::truncate(math::abs('1'))}</code>
      <output>truncate(abs('-1')) -> 1, truncate(abs('1')) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(ceiling('-1.75')) -> ${math::truncate(math::ceiling('-1.75'))}, </code>
      <code>truncate(ceiling('-1.5')) -> ${math::truncate(math::ceiling('-1.5'))}, </code>
      <code>truncate(ceiling('-1.25')) -> ${math::truncate(math::ceiling('-1.25'))}, </code>
      <code>truncate(ceiling('-1')) -> ${math::truncate(math::ceiling('-1'))}, </code>
      <code>truncate(ceiling('-0.75')) -> ${math::truncate(math::ceiling('-0.75'))}, </code>
      <code>truncate(ceiling('-0.5')) -> ${math::truncate(math::ceiling('-0.5'))}, </code>
      <code>truncate(ceiling('-0.25')) -> ${math::truncate(math::ceiling('-0.25'))}, </code>
      <code>truncate(ceiling('0')) -> ${math::truncate(math::ceiling('0'))}, </code>
      <code>truncate(ceiling('0.25')) -> ${math::truncate(math::ceiling('0.25'))}, </code>
      <code>truncate(ceiling('0.5')) -> ${math::truncate(math::ceiling('0.5'))}, </code>
      <code>truncate(ceiling('0.75')) -> ${math::truncate(math::ceiling('0.75'))}, </code>
      <code>truncate(ceiling('1')) -> ${math::truncate(math::ceiling('1'))}, </code>
      <code>truncate(ceiling('1.25')) -> ${math::truncate(math::ceiling('1.25'))}, </code>
      <code>truncate(ceiling('1.5')) -> ${math::truncate(math::ceiling('1.5'))}, </code>
      <code>truncate(ceiling('1.75')) -> ${math::truncate(math::ceiling('1.75'))}</code>
      <output>truncate(ceiling('-1.75')) -> -1, </output>
      <output>truncate(ceiling('-1.5')) -> -1, </output>
      <output>truncate(ceiling('-1.25')) -> -1, </output>
      <output>truncate(ceiling('-1')) -> -1, </output>
      <output>truncate(ceiling('-0.75')) -> 0, </output>
      <output>truncate(ceiling('-0.5')) -> 0, </output>
      <output>truncate(ceiling('-0.25')) -> 0, </output>
      <output>truncate(ceiling('0')) -> 0, </output>
      <output>truncate(ceiling('0.25')) -> 1, </output>
      <output>truncate(ceiling('0.5')) -> 1, </output>
      <output>truncate(ceiling('0.75')) -> 1, </output>
      <output>truncate(ceiling('1')) -> 1, </output>
      <output>truncate(ceiling('1.25')) -> 2, </output>
      <output>truncate(ceiling('1.5')) -> 2, </output>
      <output>truncate(ceiling('1.75')) -> 2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(floor('-1.75')) -> ${math::truncate(math::floor('-1.75'))}, </code>
      <code>truncate(floor('-1.5')) -> ${math::truncate(math::floor('-1.5'))}, </code>
      <code>truncate(floor('-1.25')) -> ${math::truncate(math::floor('-1.25'))}, </code>
      <code>truncate(floor('-1')) -> ${math::truncate(math::floor('-1'))}, </code>
      <code>truncate(floor('-0.75')) -> ${math::truncate(math::floor('-0.75'))}, </code>
      <code>truncate(floor('-0.5')) -> ${math::truncate(math::floor('-0.5'))}, </code>
      <code>truncate(floor('-0.25')) -> ${math::truncate(math::floor('-0.25'))}, </code>
      <code>truncate(floor('0')) -> ${math::truncate(math::floor('0'))}, </code>
      <code>truncate(floor('0.25')) -> ${math::truncate(math::floor('0.25'))}, </code>
      <code>truncate(floor('0.5')) -> ${math::truncate(math::floor('0.5'))}, </code>
      <code>truncate(floor('0.75')) -> ${math::truncate(math::floor('0.75'))}, </code>
      <code>truncate(floor('1')) -> ${math::truncate(math::floor('1'))}, </code>
      <code>truncate(floor('1.25')) -> ${math::truncate(math::floor('1.25'))}, </code>
      <code>truncate(floor('1.5')) -> ${math::truncate(math::floor('1.5'))}, </code>
      <code>truncate(floor('1.75')) -> ${math::truncate(math::floor('1.75'))}</code>
      <output>truncate(floor('-1.75')) -> -2, </output>
      <output>truncate(floor('-1.5')) -> -2, </output>
      <output>truncate(floor('-1.25')) -> -2, </output>
      <output>truncate(floor('-1')) -> -1, </output>
      <output>truncate(floor('-0.75')) -> -1, </output>
      <output>truncate(floor('-0.5')) -> -1, </output>
      <output>truncate(floor('-0.25')) -> -1, </output>
      <output>truncate(floor('0')) -> 0, </output>
      <output>truncate(floor('0.25')) -> 0, </output>
      <output>truncate(floor('0.5')) -> 0, </output>
      <output>truncate(floor('0.75')) -> 0, </output>
      <output>truncate(floor('1')) -> 1, </output>
      <output>truncate(floor('1.25')) -> 1, </output>
      <output>truncate(floor('1.5')) -> 1, </output>
      <output>truncate(floor('1.75')) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(round('-1.75')) -> ${math::truncate(math::round('-1.75'))}, </code>
      <code>truncate(round('-1.5')) -> ${math::truncate(math::round('-1.5'))}, </code>
      <code>truncate(round('-1.25')) -> ${math::truncate(math::round('-1.25'))}, </code>
      <code>truncate(round('-1')) -> ${math::truncate(math::round('-1'))}, </code>
      <code>truncate(round('-0.75')) -> ${math::truncate(math::round('-0.75'))}, </code>
      <code>truncate(round('-0.5')) -> ${math::truncate(math::round('-0.5'))}, </code>
      <code>truncate(round('-0.25')) -> ${math::truncate(math::round('-0.25'))}, </code>
      <code>truncate(round('0')) -> ${math::truncate(math::round('0'))}, </code>
      <code>truncate(round('0.25')) -> ${math::truncate(math::round('0.25'))}, </code>
      <code>truncate(round('0.5')) -> ${math::truncate(math::round('0.5'))}, </code>
      <code>truncate(round('0.75')) -> ${math::truncate(math::round('0.75'))}, </code>
      <code>truncate(round('1')) -> ${math::truncate(math::round('1'))}, </code>
      <code>truncate(round('1.25')) -> ${math::truncate(math::round('1.25'))}, </code>
      <code>truncate(round('1.5')) -> ${math::truncate(math::round('1.5'))}, </code>
      <code>truncate(round('1.75')) -> ${math::truncate(math::round('1.75'))}</code>
      <output>truncate(round('-1.75')) -> -2, </output>
      <output>truncate(round('-1.5')) -> -2, </output>
      <output>truncate(round('-1.25')) -> -1, </output>
      <output>truncate(round('-1')) -> -1, </output>
      <output>truncate(round('-0.75')) -> -1, </output>
      <output>truncate(round('-0.5')) -> 0, </output>
      <output>truncate(round('-0.25')) -> 0, </output>
      <output>truncate(round('0')) -> 0, </output>
      <output>truncate(round('0.25')) -> 0, </output>
      <output>truncate(round('0.5')) -> 0, </output>
      <output>truncate(round('0.75')) -> 1, </output>
      <output>truncate(round('1')) -> 1, </output>
      <output>truncate(round('1.25')) -> 1, </output>
      <output>truncate(round('1.5')) -> 2, </output>
      <output>truncate(round('1.75')) -> 2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, acos(-1))) -> ${math::truncate(math::multiplication('100000', math::acos('-1')))}, </code>
      <code>truncate(multiplication(100000, acos(-0.75))) -> ${math::truncate(math::multiplication('100000', math::acos('-0.75')))}, </code>
      <code>truncate(multiplication(100000, acos(-0.5))) -> ${math::truncate(math::multiplication('100000', math::acos('-0.5')))}, </code>
      <code>truncate(multiplication(100000, acos(-0.25))) -> ${math::truncate(math::multiplication('100000', math::acos('-0.25')))}, </code>
      <code>truncate(multiplication(100000, acos(0))) -> ${math::truncate(math::multiplication('100000', math::acos('0')))}, </code>
      <code>truncate(multiplication(100000, acos(0.25))) -> ${math::truncate(math::multiplication('100000', math::acos('0.25')))}, </code>
      <code>truncate(multiplication(100000, acos(0.5))) -> ${math::truncate(math::multiplication('100000', math::acos('0.5')))}, </code>
      <code>truncate(multiplication(100000, acos(0.75))) -> ${math::truncate(math::multiplication('100000', math::acos('0.75')))}, </code>
      <code>truncate(multiplication(100000, acos(1))) -> ${math::truncate(math::multiplication('100000', math::acos('1')))}</code>
      <output>truncate(multiplication(100000, acos(-1))) -> 314159, </output>
      <output>truncate(multiplication(100000, acos(-0.75))) -> 241885, </output>
      <output>truncate(multiplication(100000, acos(-0.5))) -> 209439, </output>
      <output>truncate(multiplication(100000, acos(-0.25))) -> 182347, </output>
      <output>truncate(multiplication(100000, acos(0))) -> 157079, </output>
      <output>truncate(multiplication(100000, acos(0.25))) -> 131811, </output>
      <output>truncate(multiplication(100000, acos(0.5))) -> 104719, </output>
      <output>truncate(multiplication(100000, acos(0.75))) -> 72273, </output>
      <output>truncate(multiplication(100000, acos(1))) -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, asin(-1))) -> ${math::truncate(math::multiplication('100000', math::asin('-1')))}, </code>
      <code>truncate(multiplication(100000, asin(-0.75))) -> ${math::truncate(math::multiplication('100000', math::asin('-0.75')))}, </code>
      <code>truncate(multiplication(100000, asin(-0.5))) -> ${math::truncate(math::multiplication('100000', math::asin('-0.5')))}, </code>
      <code>truncate(multiplication(100000, asin(-0.25))) -> ${math::truncate(math::multiplication('100000', math::asin('-0.25')))}, </code>
      <code>truncate(multiplication(100000, asin(0))) -> ${math::truncate(math::multiplication('100000', math::asin('0')))}, </code>
      <code>truncate(multiplication(100000, asin(0.25))) -> ${math::truncate(math::multiplication('100000', math::asin('0.25')))}, </code>
      <code>truncate(multiplication(100000, asin(0.5))) -> ${math::truncate(math::multiplication('100000', math::asin('0.5')))}, </code>
      <code>truncate(multiplication(100000, asin(0.75))) -> ${math::truncate(math::multiplication('100000', math::asin('0.75')))}, </code>
      <code>truncate(multiplication(100000, asin(1))) -> ${math::truncate(math::multiplication('100000', math::asin('1')))}</code>
      <output>truncate(multiplication(100000, asin(-1))) -> -157079, </output>
      <output>truncate(multiplication(100000, asin(-0.75))) -> -84806, </output>
      <output>truncate(multiplication(100000, asin(-0.5))) -> -52359, </output>
      <output>truncate(multiplication(100000, asin(-0.25))) -> -25268, </output>
      <output>truncate(multiplication(100000, asin(0))) -> 0, </output>
      <output>truncate(multiplication(100000, asin(0.25))) -> 25268, </output>
      <output>truncate(multiplication(100000, asin(0.5))) -> 52359, </output>
      <output>truncate(multiplication(100000, asin(0.75))) -> 84806, </output>
      <output>truncate(multiplication(100000, asin(1))) -> 157079</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, atan(-1))) -> ${math::truncate(math::multiplication('100000', math::atan('-1')))}, </code>
      <code>truncate(multiplication(100000, atan(-0.75))) -> ${math::truncate(math::multiplication('100000', math::atan('-0.75')))}, </code>
      <code>truncate(multiplication(100000, atan(-0.5))) -> ${math::truncate(math::multiplication('100000', math::atan('-0.5')))}, </code>
      <code>truncate(multiplication(100000, atan(-0.25))) -> ${math::truncate(math::multiplication('100000', math::atan('-0.25')))}, </code>
      <code>truncate(multiplication(100000, atan(0))) -> ${math::truncate(math::multiplication('100000', math::atan('0')))}, </code>
      <code>truncate(multiplication(100000, atan(0.25))) -> ${math::truncate(math::multiplication('100000', math::atan('0.25')))}, </code>
      <code>truncate(multiplication(100000, atan(0.5))) -> ${math::truncate(math::multiplication('100000', math::atan('0.5')))}, </code>
      <code>truncate(multiplication(100000, atan(0.75))) -> ${math::truncate(math::multiplication('100000', math::atan('0.75')))}, </code>
      <code>truncate(multiplication(100000, atan(1))) -> ${math::truncate(math::multiplication('100000', math::atan('1')))}</code>
      <output>truncate(multiplication(100000, atan(-1))) -> -78539, </output>
      <output>truncate(multiplication(100000, atan(-0.75))) -> -64350, </output>
      <output>truncate(multiplication(100000, atan(-0.5))) -> -46364, </output>
      <output>truncate(multiplication(100000, atan(-0.25))) -> -24497, </output>
      <output>truncate(multiplication(100000, atan(0))) -> 0, </output>
      <output>truncate(multiplication(100000, atan(0.25))) -> 24497, </output>
      <output>truncate(multiplication(100000, atan(0.5))) -> 46364, </output>
      <output>truncate(multiplication(100000, atan(0.75))) -> 64350, </output>
      <output>truncate(multiplication(100000, atan(1))) -> 78539</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, atan2(0.5, -1))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '-1')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, -0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '-0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, -0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '-0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, -0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '-0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 0))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '0')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 1))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '1')))}</code>
      <output>truncate(multiplication(100000, atan2(0.5, -1))) -> -110714, </output>
      <output>truncate(multiplication(100000, atan2(0.5, -0.75))) -> -98279, </output>
      <output>truncate(multiplication(100000, atan2(0.5, -0.5))) -> -78539, </output>
      <output>truncate(multiplication(100000, atan2(0.5, -0.25))) -> -46364, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 0))) -> 0, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 0.25))) -> 46364, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 0.5))) -> 78539, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 0.75))) -> 98279, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 1))) -> 110714</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, atan2(1, -1))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '-1')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, -0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '-0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, -0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '-0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, -0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '-0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 0))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '0')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 1))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '1')))}</code>
      <output>truncate(multiplication(100000, atan2(1, -1))) -> -78539, </output>
      <output>truncate(multiplication(100000, atan2(1, -0.75))) -> -64350, </output>
      <output>truncate(multiplication(100000, atan2(1, -0.5))) -> -46364, </output>
      <output>truncate(multiplication(100000, atan2(1, -0.25))) -> -24497, </output>
      <output>truncate(multiplication(100000, atan2(1, 0))) -> 0, </output>
      <output>truncate(multiplication(100000, atan2(1, 0.25))) -> 24497, </output>
      <output>truncate(multiplication(100000, atan2(1, 0.5))) -> 46364, </output>
      <output>truncate(multiplication(100000, atan2(1, 0.75))) -> 64350, </output>
      <output>truncate(multiplication(100000, atan2(1, 1))) -> 78539</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, atan2(2, -1))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '-1')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, -0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '-0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, -0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '-0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, -0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '-0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 0))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '0')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 1))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '1')))}</code>
      <output>truncate(multiplication(100000, atan2(2, -1))) -> -46364, </output>
      <output>truncate(multiplication(100000, atan2(2, -0.75))) -> -35877, </output>
      <output>truncate(multiplication(100000, atan2(2, -0.5))) -> -24497, </output>
      <output>truncate(multiplication(100000, atan2(2, -0.25))) -> -12435, </output>
      <output>truncate(multiplication(100000, atan2(2, 0))) -> 0, </output>
      <output>truncate(multiplication(100000, atan2(2, 0.25))) -> 12435, </output>
      <output>truncate(multiplication(100000, atan2(2, 0.5))) -> 24497, </output>
      <output>truncate(multiplication(100000, atan2(2, 0.75))) -> 35877, </output>
      <output>truncate(multiplication(100000, atan2(2, 1))) -> 46364</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, cos(-6.28318531))) -> ${math::truncate(math::multiplication('100000', math::cos('-6.28318531')))}, </code>
      <code>truncate(multiplication(100000, cos(-5.49778714))) -> ${math::truncate(math::multiplication('100000', math::cos('-5.49778714')))}, </code>
      <code>truncate(multiplication(100000, cos(-4.71238898))) -> ${math::truncate(math::multiplication('100000', math::cos('-4.71238898')))}, </code>
      <code>truncate(multiplication(100000, cos(-3.92699082))) -> ${math::truncate(math::multiplication('100000', math::cos('-3.92699082')))}, </code>
      <code>truncate(multiplication(100000, cos(-3.14159265))) -> ${math::truncate(math::multiplication('100000', math::cos('-3.14159265')))}, </code>
      <code>truncate(multiplication(100000, cos(-2.35619449))) -> ${math::truncate(math::multiplication('100000', math::cos('-2.35619449')))}, </code>
      <code>truncate(multiplication(100000, cos(-1.57079633))) -> ${math::truncate(math::multiplication('100000', math::cos('-1.57079633')))}, </code>
      <code>truncate(multiplication(100000, cos(-0.78539816))) -> ${math::truncate(math::multiplication('100000', math::cos('-0.78539816')))}, </code>
      <code>truncate(multiplication(100000, cos(0))) -> ${math::truncate(math::multiplication('100000', math::cos('0')))}, </code>
      <code>truncate(multiplication(100000, cos(0.78539816))) -> ${math::truncate(math::multiplication('100000', math::cos('0.78539816')))}, </code>
      <code>truncate(multiplication(100000, cos(1.57079633))) -> ${math::truncate(math::multiplication('100000', math::cos('1.57079633')))}, </code>
      <code>truncate(multiplication(100000, cos(2.35619449))) -> ${math::truncate(math::multiplication('100000', math::cos('2.35619449')))}, </code>
      <code>truncate(multiplication(100000, cos(3.14159265))) -> ${math::truncate(math::multiplication('100000', math::cos('3.14159265')))}, </code>
      <code>truncate(multiplication(100000, cos(3.92699082))) -> ${math::truncate(math::multiplication('100000', math::cos('3.92699082')))}, </code>
      <code>truncate(multiplication(100000, cos(4.71238898))) -> ${math::truncate(math::multiplication('100000', math::cos('4.71238898')))}, </code>
      <code>truncate(multiplication(100000, cos(5.49778714))) -> ${math::truncate(math::multiplication('100000', math::cos('5.49778714')))}, </code>
      <code>truncate(multiplication(100000, cos(6.28318531))) -> ${math::truncate(math::multiplication('100000', math::cos('6.28318531')))}</code>
      <output>truncate(multiplication(100000, cos(-6.28318531))) -> 100000, </output>
      <output>truncate(multiplication(100000, cos(-5.49778714))) -> 70710, </output>
      <output>truncate(multiplication(100000, cos(-4.71238898))) -> 0, </output>
      <output>truncate(multiplication(100000, cos(-3.92699082))) -> -70710, </output>
      <output>truncate(multiplication(100000, cos(-3.14159265))) -> -100000, </output>
      <output>truncate(multiplication(100000, cos(-2.35619449))) -> -70710, </output>
      <output>truncate(multiplication(100000, cos(-1.57079633))) -> 0, </output>
      <output>truncate(multiplication(100000, cos(-0.78539816))) -> 70710, </output>
      <output>truncate(multiplication(100000, cos(0))) -> 100000, </output>
      <output>truncate(multiplication(100000, cos(0.78539816))) -> 70710, </output>
      <output>truncate(multiplication(100000, cos(1.57079633))) -> 0, </output>
      <output>truncate(multiplication(100000, cos(2.35619449))) -> -70710, </output>
      <output>truncate(multiplication(100000, cos(3.14159265))) -> -100000, </output>
      <output>truncate(multiplication(100000, cos(3.92699082))) -> -70710, </output>
      <output>truncate(multiplication(100000, cos(4.71238898))) -> 0, </output>
      <output>truncate(multiplication(100000, cos(5.49778714))) -> 70710, </output>
      <output>truncate(multiplication(100000, cos(6.28318531))) -> 100000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(cosh(-6.28318531)) -> ${math::truncate(math::cosh('-6.28318531'))}, </code>
      <code>truncate(cosh(-5.49778714)) -> ${math::truncate(math::cosh('-5.49778714'))}, </code>
      <code>truncate(cosh(-4.71238898)) -> ${math::truncate(math::cosh('-4.71238898'))}, </code>
      <code>truncate(cosh(-3.92699082)) -> ${math::truncate(math::cosh('-3.92699082'))}, </code>
      <code>truncate(cosh(-3.14159265)) -> ${math::truncate(math::cosh('-3.14159265'))}, </code>
      <code>truncate(cosh(-2.35619449)) -> ${math::truncate(math::cosh('-2.35619449'))}, </code>
      <code>truncate(cosh(-1.57079633)) -> ${math::truncate(math::cosh('-1.57079633'))}, </code>
      <code>truncate(cosh(-0.78539816)) -> ${math::truncate(math::cosh('-0.78539816'))}, </code>
      <code>truncate(cosh(0)) -> ${math::truncate(math::cosh('0'))}, </code>
      <code>truncate(cosh(0.78539816)) -> ${math::truncate(math::cosh('0.78539816'))}, </code>
      <code>truncate(cosh(1.57079633)) -> ${math::truncate(math::cosh('1.57079633'))}, </code>
      <code>truncate(cosh(2.35619449)) -> ${math::truncate(math::cosh('2.35619449'))}, </code>
      <code>truncate(cosh(3.14159265)) -> ${math::truncate(math::cosh('3.14159265'))}, </code>
      <code>truncate(cosh(3.92699082)) -> ${math::truncate(math::cosh('3.92699082'))}, </code>
      <code>truncate(cosh(4.71238898)) -> ${math::truncate(math::cosh('4.71238898'))}, </code>
      <code>truncate(cosh(5.49778714)) -> ${math::truncate(math::cosh('5.49778714'))}, </code>
      <code>truncate(cosh(6.28318531)) -> ${math::truncate(math::cosh('6.28318531'))}</code>
      <output>truncate(cosh(-6.28318531)) -> 267, </output>
      <output>truncate(cosh(-5.49778714)) -> 122, </output>
      <output>truncate(cosh(-4.71238898)) -> 55, </output>
      <output>truncate(cosh(-3.92699082)) -> 25, </output>
      <output>truncate(cosh(-3.14159265)) -> 11, </output>
      <output>truncate(cosh(-2.35619449)) -> 5, </output>
      <output>truncate(cosh(-1.57079633)) -> 2, </output>
      <output>truncate(cosh(-0.78539816)) -> 1, </output>
      <output>truncate(cosh(0)) -> 1, </output>
      <output>truncate(cosh(0.78539816)) -> 1, </output>
      <output>truncate(cosh(1.57079633)) -> 2, </output>
      <output>truncate(cosh(2.35619449)) -> 5, </output>
      <output>truncate(cosh(3.14159265)) -> 11, </output>
      <output>truncate(cosh(3.92699082)) -> 25, </output>
      <output>truncate(cosh(4.71238898)) -> 55, </output>
      <output>truncate(cosh(5.49778714)) -> 122, </output>
      <output>truncate(cosh(6.28318531)) -> 267</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, exp(-3))) -> ${math::truncate(math::multiplication('100000', math::exp('-3')))}, </code>
      <code>truncate(multiplication(100000, exp(-2.75))) -> ${math::truncate(math::multiplication('100000', math::exp('-2.75')))}, </code>
      <code>truncate(multiplication(100000, exp(-2.5))) -> ${math::truncate(math::multiplication('100000', math::exp('-2.5')))}, </code>
      <code>truncate(multiplication(100000, exp(-2.25))) -> ${math::truncate(math::multiplication('100000', math::exp('-2.25')))}, </code>
      <code>truncate(multiplication(100000, exp(-2))) -> ${math::truncate(math::multiplication('100000', math::exp('-2')))}, </code>
      <code>truncate(multiplication(100000, exp(-1.75))) -> ${math::truncate(math::multiplication('100000', math::exp('-1.75')))}, </code>
      <code>truncate(multiplication(100000, exp(-1.5))) -> ${math::truncate(math::multiplication('100000', math::exp('-1.5')))}, </code>
      <code>truncate(multiplication(100000, exp(-1.25))) -> ${math::truncate(math::multiplication('100000', math::exp('-1.25')))}, </code>
      <code>truncate(multiplication(100000, exp(-1))) -> ${math::truncate(math::multiplication('100000', math::exp('-1')))}, </code>
      <code>truncate(multiplication(100000, exp(-0.75))) -> ${math::truncate(math::multiplication('100000', math::exp('-0.75')))}, </code>
      <code>truncate(multiplication(100000, exp(-0.5))) -> ${math::truncate(math::multiplication('100000', math::exp('-0.5')))}, </code>
      <code>truncate(multiplication(100000, exp(-0.25))) -> ${math::truncate(math::multiplication('100000', math::exp('-0.25')))}, </code>
      <code>truncate(multiplication(100000, exp(0))) -> ${math::truncate(math::multiplication('100000', math::exp('0')))}, </code>
      <code>truncate(multiplication(100000, exp(0.25))) -> ${math::truncate(math::multiplication('100000', math::exp('0.25')))}, </code>
      <code>truncate(multiplication(100000, exp(0.5))) -> ${math::truncate(math::multiplication('100000', math::exp('0.5')))}, </code>
      <code>truncate(multiplication(100000, exp(0.75))) -> ${math::truncate(math::multiplication('100000', math::exp('0.75')))}, </code>
      <code>truncate(multiplication(100000, exp(1))) -> ${math::truncate(math::multiplication('100000', math::exp('1')))}, </code>
      <code>truncate(multiplication(100000, exp(1.25))) -> ${math::truncate(math::multiplication('100000', math::exp('1.25')))}, </code>
      <code>truncate(multiplication(100000, exp(1.5))) -> ${math::truncate(math::multiplication('100000', math::exp('1.5')))}, </code>
      <code>truncate(multiplication(100000, exp(1.75))) -> ${math::truncate(math::multiplication('100000', math::exp('1.75')))}, </code>
      <code>truncate(multiplication(100000, exp(2))) -> ${math::truncate(math::multiplication('100000', math::exp('2')))}, </code>
      <code>truncate(multiplication(100000, exp(2.25))) -> ${math::truncate(math::multiplication('100000', math::exp('2.25')))}, </code>
      <code>truncate(multiplication(100000, exp(2.5))) -> ${math::truncate(math::multiplication('100000', math::exp('2.5')))}, </code>
      <code>truncate(multiplication(100000, exp(2.75))) -> ${math::truncate(math::multiplication('100000', math::exp('2.75')))}, </code>
      <code>truncate(multiplication(100000, exp(3))) -> ${math::truncate(math::multiplication('100000', math::exp('3')))}</code>
      <output>truncate(multiplication(100000, exp(-3))) -> 4978, </output>
      <output>truncate(multiplication(100000, exp(-2.75))) -> 6392, </output>
      <output>truncate(multiplication(100000, exp(-2.5))) -> 8208, </output>
      <output>truncate(multiplication(100000, exp(-2.25))) -> 10539, </output>
      <output>truncate(multiplication(100000, exp(-2))) -> 13533, </output>
      <output>truncate(multiplication(100000, exp(-1.75))) -> 17377, </output>
      <output>truncate(multiplication(100000, exp(-1.5))) -> 22313, </output>
      <output>truncate(multiplication(100000, exp(-1.25))) -> 28650, </output>
      <output>truncate(multiplication(100000, exp(-1))) -> 36787, </output>
      <output>truncate(multiplication(100000, exp(-0.75))) -> 47236, </output>
      <output>truncate(multiplication(100000, exp(-0.5))) -> 60653, </output>
      <output>truncate(multiplication(100000, exp(-0.25))) -> 77880, </output>
      <output>truncate(multiplication(100000, exp(0))) -> 100000, </output>
      <output>truncate(multiplication(100000, exp(0.25))) -> 128402, </output>
      <output>truncate(multiplication(100000, exp(0.5))) -> 164872, </output>
      <output>truncate(multiplication(100000, exp(0.75))) -> 211700, </output>
      <output>truncate(multiplication(100000, exp(1))) -> 271828, </output>
      <output>truncate(multiplication(100000, exp(1.25))) -> 349034, </output>
      <output>truncate(multiplication(100000, exp(1.5))) -> 448168, </output>
      <output>truncate(multiplication(100000, exp(1.75))) -> 575460, </output>
      <output>truncate(multiplication(100000, exp(2))) -> 738905, </output>
      <output>truncate(multiplication(100000, exp(2.25))) -> 948773, </output>
      <output>truncate(multiplication(100000, exp(2.5))) -> 1218249, </output>
      <output>truncate(multiplication(100000, exp(2.75))) -> 1564263, </output>
      <output>truncate(multiplication(100000, exp(3))) -> 2008553</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, log(0.25))) -> ${math::truncate(math::multiplication('100000', math::log('0.25')))}, </code>
      <code>truncate(multiplication(100000, log(0.5))) -> ${math::truncate(math::multiplication('100000', math::log('0.5')))}, </code>
      <code>truncate(multiplication(100000, log(0.75))) -> ${math::truncate(math::multiplication('100000', math::log('0.75')))}, </code>
      <code>truncate(multiplication(100000, log(1))) -> ${math::truncate(math::multiplication('100000', math::log('1')))}, </code>
      <code>truncate(multiplication(100000, log(1.25))) -> ${math::truncate(math::multiplication('100000', math::log('1.25')))}, </code>
      <code>truncate(multiplication(100000, log(1.5))) -> ${math::truncate(math::multiplication('100000', math::log('1.5')))}, </code>
      <code>truncate(multiplication(100000, log(1.75))) -> ${math::truncate(math::multiplication('100000', math::log('1.75')))}, </code>
      <code>truncate(multiplication(100000, log(2))) -> ${math::truncate(math::multiplication('100000', math::log('2')))}, </code>
      <code>truncate(multiplication(100000, log(2.25))) -> ${math::truncate(math::multiplication('100000', math::log('2.25')))}, </code>
      <code>truncate(multiplication(100000, log(2.5))) -> ${math::truncate(math::multiplication('100000', math::log('2.5')))}, </code>
      <code>truncate(multiplication(100000, log(2.75))) -> ${math::truncate(math::multiplication('100000', math::log('2.75')))}, </code>
      <code>truncate(multiplication(100000, log(3))) -> ${math::truncate(math::multiplication('100000', math::log('3')))}, </code>
      <code>truncate(multiplication(100000, log(3.25))) -> ${math::truncate(math::multiplication('100000', math::log('3.25')))}, </code>
      <code>truncate(multiplication(100000, log(3.5))) -> ${math::truncate(math::multiplication('100000', math::log('3.5')))}, </code>
      <code>truncate(multiplication(100000, log(3.75))) -> ${math::truncate(math::multiplication('100000', math::log('3.75')))}, </code>
      <code>truncate(multiplication(100000, log(4))) -> ${math::truncate(math::multiplication('100000', math::log('4')))}</code>
      <output>truncate(multiplication(100000, log(0.25))) -> -138629, </output>
      <output>truncate(multiplication(100000, log(0.5))) -> -69314, </output>
      <output>truncate(multiplication(100000, log(0.75))) -> -28768, </output>
      <output>truncate(multiplication(100000, log(1))) -> 0, </output>
      <output>truncate(multiplication(100000, log(1.25))) -> 22314, </output>
      <output>truncate(multiplication(100000, log(1.5))) -> 40546, </output>
      <output>truncate(multiplication(100000, log(1.75))) -> 55961, </output>
      <output>truncate(multiplication(100000, log(2))) -> 69314, </output>
      <output>truncate(multiplication(100000, log(2.25))) -> 81093, </output>
      <output>truncate(multiplication(100000, log(2.5))) -> 91629, </output>
      <output>truncate(multiplication(100000, log(2.75))) -> 101160, </output>
      <output>truncate(multiplication(100000, log(3))) -> 109861, </output>
      <output>truncate(multiplication(100000, log(3.25))) -> 117865, </output>
      <output>truncate(multiplication(100000, log(3.5))) -> 125276, </output>
      <output>truncate(multiplication(100000, log(3.75))) -> 132175, </output>
      <output>truncate(multiplication(100000, log(4))) -> 138629</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, log10(0.25))) -> ${math::truncate(math::multiplication('100000', math::log10('0.25')))}, </code>
      <code>truncate(multiplication(100000, log10(0.5))) -> ${math::truncate(math::multiplication('100000', math::log10('0.5')))}, </code>
      <code>truncate(multiplication(100000, log10(0.75))) -> ${math::truncate(math::multiplication('100000', math::log10('0.75')))}, </code>
      <code>truncate(multiplication(100000, log10(1))) -> ${math::truncate(math::multiplication('100000', math::log10('1')))}, </code>
      <code>truncate(multiplication(100000, log10(1.25))) -> ${math::truncate(math::multiplication('100000', math::log10('1.25')))}, </code>
      <code>truncate(multiplication(100000, log10(1.5))) -> ${math::truncate(math::multiplication('100000', math::log10('1.5')))}, </code>
      <code>truncate(multiplication(100000, log10(1.75))) -> ${math::truncate(math::multiplication('100000', math::log10('1.75')))}, </code>
      <code>truncate(multiplication(100000, log10(2))) -> ${math::truncate(math::multiplication('100000', math::log10('2')))}, </code>
      <code>truncate(multiplication(100000, log10(2.25))) -> ${math::truncate(math::multiplication('100000', math::log10('2.25')))}, </code>
      <code>truncate(multiplication(100000, log10(2.5))) -> ${math::truncate(math::multiplication('100000', math::log10('2.5')))}, </code>
      <code>truncate(multiplication(100000, log10(2.75))) -> ${math::truncate(math::multiplication('100000', math::log10('2.75')))}, </code>
      <code>truncate(multiplication(100000, log10(3))) -> ${math::truncate(math::multiplication('100000', math::log10('3')))}, </code>
      <code>truncate(multiplication(100000, log10(3.25))) -> ${math::truncate(math::multiplication('100000', math::log10('3.25')))}, </code>
      <code>truncate(multiplication(100000, log10(3.5))) -> ${math::truncate(math::multiplication('100000', math::log10('3.5')))}, </code>
      <code>truncate(multiplication(100000, log10(3.75))) -> ${math::truncate(math::multiplication('100000', math::log10('3.75')))}, </code>
      <code>truncate(multiplication(100000, log10(4))) -> ${math::truncate(math::multiplication('100000', math::log10('4')))}</code>
      <output>truncate(multiplication(100000, log10(0.25))) -> -60205, </output>
      <output>truncate(multiplication(100000, log10(0.5))) -> -30102, </output>
      <output>truncate(multiplication(100000, log10(0.75))) -> -12493, </output>
      <output>truncate(multiplication(100000, log10(1))) -> 0, </output>
      <output>truncate(multiplication(100000, log10(1.25))) -> 9691, </output>
      <output>truncate(multiplication(100000, log10(1.5))) -> 17609, </output>
      <output>truncate(multiplication(100000, log10(1.75))) -> 24303, </output>
      <output>truncate(multiplication(100000, log10(2))) -> 30102, </output>
      <output>truncate(multiplication(100000, log10(2.25))) -> 35218, </output>
      <output>truncate(multiplication(100000, log10(2.5))) -> 39794, </output>
      <output>truncate(multiplication(100000, log10(2.75))) -> 43933, </output>
      <output>truncate(multiplication(100000, log10(3))) -> 47712, </output>
      <output>truncate(multiplication(100000, log10(3.25))) -> 51188, </output>
      <output>truncate(multiplication(100000, log10(3.5))) -> 54406, </output>
      <output>truncate(multiplication(100000, log10(3.75))) -> 57403, </output>
      <output>truncate(multiplication(100000, log10(4))) -> 60205</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(max(-1, -2)) -> ${math::truncate(math::max('-1', '-2'))}, </code>
      <code>truncate(min(-1, -2)) -> ${math::truncate(math::min('-1', '-2'))}, </code>
      <code>truncate(max(1, 2)) -> ${math::truncate(math::max('1', '2'))}, </code>
      <code>truncate(min(1, 2)) -> ${math::truncate(math::min('1', '2'))}</code>
      <output>truncate(max(-1, -2)) -> -1, </output>
      <output>truncate(min(-1, -2)) -> -2, </output>
      <output>truncate(max(1, 2)) -> 2, </output>
      <output>truncate(min(1, 2)) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(10000, pow(-3, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-3', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-2.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-2.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-2.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-2.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-2.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-2.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-2, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-2', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-1.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-1.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-1.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-1.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-1.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-1.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-1, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-1', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-0.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-0.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-0.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-0.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-0.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-0.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(0, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('0', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(0.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('0.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(0.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('0.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(0.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('0.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(1, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('1', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(1.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('1.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(1.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('1.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(1.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('1.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(2, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('2', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(2.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('2.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(2.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('2.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(2.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('2.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(3, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('3', '2')))}</code>
      <output>truncate(multiplication(10000, pow(-3, 2))) -> 90000, </output>
      <output>truncate(multiplication(10000, pow(-2.75, 2))) -> 75625, </output>
      <output>truncate(multiplication(10000, pow(-2.5, 2))) -> 62500, </output>
      <output>truncate(multiplication(10000, pow(-2.25, 2))) -> 50625, </output>
      <output>truncate(multiplication(10000, pow(-2, 2))) -> 40000, </output>
      <output>truncate(multiplication(10000, pow(-1.75, 2))) -> 30625, </output>
      <output>truncate(multiplication(10000, pow(-1.5, 2))) -> 22500, </output>
      <output>truncate(multiplication(10000, pow(-1.25, 2))) -> 15625, </output>
      <output>truncate(multiplication(10000, pow(-1, 2))) -> 10000, </output>
      <output>truncate(multiplication(10000, pow(-0.75, 2))) -> 5625, </output>
      <output>truncate(multiplication(10000, pow(-0.5, 2))) -> 2500, </output>
      <output>truncate(multiplication(10000, pow(-0.25, 2))) -> 625, </output>
      <output>truncate(multiplication(10000, pow(0, 2))) -> 0, </output>
      <output>truncate(multiplication(10000, pow(0.25, 2))) -> 625, </output>
      <output>truncate(multiplication(10000, pow(0.5, 2))) -> 2500, </output>
      <output>truncate(multiplication(10000, pow(0.75, 2))) -> 5625, </output>
      <output>truncate(multiplication(10000, pow(1, 2))) -> 10000, </output>
      <output>truncate(multiplication(10000, pow(1.25, 2))) -> 15625, </output>
      <output>truncate(multiplication(10000, pow(1.5, 2))) -> 22500, </output>
      <output>truncate(multiplication(10000, pow(1.75, 2))) -> 30625, </output>
      <output>truncate(multiplication(10000, pow(2, 2))) -> 40000, </output>
      <output>truncate(multiplication(10000, pow(2.25, 2))) -> 50625, </output>
      <output>truncate(multiplication(10000, pow(2.5, 2))) -> 62500, </output>
      <output>truncate(multiplication(10000, pow(2.75, 2))) -> 75625, </output>
      <output>truncate(multiplication(10000, pow(3, 2))) -> 90000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${math::sign('-2')} ${math::sign('-1.5')} ${math::sign('-1')} ${math::sign('-0.5')} </code>
      <code>${math::sign('0')} ${math::sign('0.5')} ${math::sign('1')} ${math::sign('1.5')} ${math::sign('2')}</code>
      <output>-1 -1 -1 -1 1 1 1 1 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, sin(-6.28318531))) -> ${math::truncate(math::multiplication('100000', math::sin('-6.28318531')))}, </code>
      <code>truncate(multiplication(100000, sin(-5.49778714))) -> ${math::truncate(math::multiplication('100000', math::sin('-5.49778714')))}, </code>
      <code>truncate(multiplication(100000, sin(-4.71238898))) -> ${math::truncate(math::multiplication('100000', math::sin('-4.71238898')))}, </code>
      <code>truncate(multiplication(100000, sin(-3.92699082))) -> ${math::truncate(math::multiplication('100000', math::sin('-3.92699082')))}, </code>
      <code>truncate(multiplication(100000, sin(-3.14159265))) -> ${math::truncate(math::multiplication('100000', math::sin('-3.14159265')))}, </code>
      <code>truncate(multiplication(100000, sin(-2.35619449))) -> ${math::truncate(math::multiplication('100000', math::sin('-2.35619449')))}, </code>
      <code>truncate(multiplication(100000, sin(-1.57079633))) -> ${math::truncate(math::multiplication('100000', math::sin('-1.57079633')))}, </code>
      <code>truncate(multiplication(100000, sin(-0.78539816))) -> ${math::truncate(math::multiplication('100000', math::sin('-0.78539816')))}, </code>
      <code>truncate(multiplication(100000, sin(0))) -> ${math::truncate(math::multiplication('100000', math::sin('0')))}, </code>
      <code>truncate(multiplication(100000, sin(0.78539816))) -> ${math::truncate(math::multiplication('100000', math::sin('0.78539816')))}, </code>
      <code>truncate(multiplication(100000, sin(1.57079633))) -> ${math::truncate(math::multiplication('100000', math::sin('1.57079633')))}, </code>
      <code>truncate(multiplication(100000, sin(2.35619449))) -> ${math::truncate(math::multiplication('100000', math::sin('2.35619449')))}, </code>
      <code>truncate(multiplication(100000, sin(3.14159265))) -> ${math::truncate(math::multiplication('100000', math::sin('3.14159265')))}, </code>
      <code>truncate(multiplication(100000, sin(3.92699082))) -> ${math::truncate(math::multiplication('100000', math::sin('3.92699082')))}, </code>
      <code>truncate(multiplication(100000, sin(4.71238898))) -> ${math::truncate(math::multiplication('100000', math::sin('4.71238898')))}, </code>
      <code>truncate(multiplication(100000, sin(5.49778714))) -> ${math::truncate(math::multiplication('100000', math::sin('5.49778714')))}, </code>
      <code>truncate(multiplication(100000, sin(6.28318531))) -> ${math::truncate(math::multiplication('100000', math::sin('6.28318531')))}</code>
      <output>truncate(multiplication(100000, sin(-6.28318531))) -> 0, </output>
      <output>truncate(multiplication(100000, sin(-5.49778714))) -> 70710, </output>
      <output>truncate(multiplication(100000, sin(-4.71238898))) -> 100000, </output>
      <output>truncate(multiplication(100000, sin(-3.92699082))) -> 70710, </output>
      <output>truncate(multiplication(100000, sin(-3.14159265))) -> 0, </output>
      <output>truncate(multiplication(100000, sin(-2.35619449))) -> -70710, </output>
      <output>truncate(multiplication(100000, sin(-1.57079633))) -> -100000, </output>
      <output>truncate(multiplication(100000, sin(-0.78539816))) -> -70710, </output>
      <output>truncate(multiplication(100000, sin(0))) -> 0, </output>
      <output>truncate(multiplication(100000, sin(0.78539816))) -> 70710, </output>
      <output>truncate(multiplication(100000, sin(1.57079633))) -> 100000, </output>
      <output>truncate(multiplication(100000, sin(2.35619449))) -> 70710, </output>
      <output>truncate(multiplication(100000, sin(3.14159265))) -> 0, </output>
      <output>truncate(multiplication(100000, sin(3.92699082))) -> -70710, </output>
      <output>truncate(multiplication(100000, sin(4.71238898))) -> -100000, </output>
      <output>truncate(multiplication(100000, sin(5.49778714))) -> -70710, </output>
      <output>truncate(multiplication(100000, sin(6.28318531))) -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(sinh(-6.28318531)) -> ${math::truncate(math::sinh('-6.28318531'))}, </code>
      <code>truncate(sinh(-5.49778714)) -> ${math::truncate(math::sinh('-5.49778714'))}, </code>
      <code>truncate(sinh(-4.71238898)) -> ${math::truncate(math::sinh('-4.71238898'))}, </code>
      <code>truncate(sinh(-3.92699082)) -> ${math::truncate(math::sinh('-3.92699082'))}, </code>
      <code>truncate(sinh(-3.14159265)) -> ${math::truncate(math::sinh('-3.14159265'))}, </code>
      <code>truncate(sinh(-2.35619449)) -> ${math::truncate(math::sinh('-2.35619449'))}, </code>
      <code>truncate(sinh(-1.57079633)) -> ${math::truncate(math::sinh('-1.57079633'))}, </code>
      <code>truncate(sinh(-0.78539816)) -> ${math::truncate(math::sinh('-0.78539816'))}, </code>
      <code>truncate(sinh(0)) -> ${math::truncate(math::sinh('0'))}, </code>
      <code>truncate(sinh(0.78539816)) -> ${math::truncate(math::sinh('0.78539816'))}, </code>
      <code>truncate(sinh(1.57079633)) -> ${math::truncate(math::sinh('1.57079633'))}, </code>
      <code>truncate(sinh(2.35619449)) -> ${math::truncate(math::sinh('2.35619449'))}, </code>
      <code>truncate(sinh(3.14159265)) -> ${math::truncate(math::sinh('3.14159265'))}, </code>
      <code>truncate(sinh(3.92699082)) -> ${math::truncate(math::sinh('3.92699082'))}, </code>
      <code>truncate(sinh(4.71238898)) -> ${math::truncate(math::sinh('4.71238898'))}, </code>
      <code>truncate(sinh(5.49778714)) -> ${math::truncate(math::sinh('5.49778714'))}, </code>
      <code>truncate(sinh(6.28318531)) -> ${math::truncate(math::sinh('6.28318531'))}</code>
      <output>truncate(sinh(-6.28318531)) -> -267, </output>
      <output>truncate(sinh(-5.49778714)) -> -122, </output>
      <output>truncate(sinh(-4.71238898)) -> -55, </output>
      <output>truncate(sinh(-3.92699082)) -> -25, </output>
      <output>truncate(sinh(-3.14159265)) -> -11, </output>
      <output>truncate(sinh(-2.35619449)) -> -5, </output>
      <output>truncate(sinh(-1.57079633)) -> -2, </output>
      <output>truncate(sinh(-0.78539816)) -> 0, </output>
      <output>truncate(sinh(0)) -> 0, </output>
      <output>truncate(sinh(0.78539816)) -> 0, </output>
      <output>truncate(sinh(1.57079633)) -> 2, </output>
      <output>truncate(sinh(2.35619449)) -> 5, </output>
      <output>truncate(sinh(3.14159265)) -> 11, </output>
      <output>truncate(sinh(3.92699082)) -> 25, </output>
      <output>truncate(sinh(4.71238898)) -> 55, </output>
      <output>truncate(sinh(5.49778714)) -> 122, </output>
      <output>truncate(sinh(6.28318531)) -> 267</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(10, sqrt(0))) -> ${math::truncate(math::multiplication('10', math::sqrt('0')))}, </code>
      <code>truncate(multiplication(10, sqrt(0.25))) -> ${math::truncate(math::multiplication('10', math::sqrt('0.25')))}, </code>
      <code>truncate(multiplication(10, sqrt(1))) -> ${math::truncate(math::multiplication('10', math::sqrt('1')))}, </code>
      <code>truncate(multiplication(10, sqrt(2.25))) -> ${math::truncate(math::multiplication('10', math::sqrt('2.25')))}, </code>
      <code>truncate(multiplication(10, sqrt(4))) -> ${math::truncate(math::multiplication('10', math::sqrt('4')))}</code>
      <output>truncate(multiplication(10, sqrt(0))) -> 0, </output>
      <output>truncate(multiplication(10, sqrt(0.25))) -> 5, </output>
      <output>truncate(multiplication(10, sqrt(1))) -> 10, </output>
      <output>truncate(multiplication(10, sqrt(2.25))) -> 15, </output>
      <output>truncate(multiplication(10, sqrt(4))) -> 20</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>near(tan(0), 0) -> ${math::near(math::tan('0'), '0')}, </code>
      <code>near(tan(PI / 6), 0.577350) -> ${math::near(math::tan(math::division(math::PI(), '6')), '0.577350', '0.000001')}, </code>
      <code>near(tan(PI / 4), 1) -> ${math::near(math::tan(math::division(math::PI(), '4')), '1')}, </code>
      <code>near(tan(PI / 3), 1.732050) -> ${math::near(math::tan(math::division(math::PI(), '3')), '1.732050', '0.000001')}, </code>
      <code>near(tan(PI), 0) -> ${math::near(math::tan(math::PI()), '0', '0.000001')}, </code>
      <code>near(tan(2 * PI), 0) -> ${math::near(math::tan(math::multiplication('2', math::PI())), '0', '0.000001')}</code>
      <!--code>near(tan(2 * PI), 0) -> ${math::near(math::tan(math::multiplication('2', math::PI())), '0'), TODO: Should be mark as error '0.000001'}</code-->
      <output>near(tan(0), 0) -> True, </output>
      <output>near(tan(PI / 6), 0.577350) -> True, </output>
      <output>near(tan(PI / 4), 1) -> True, </output>
      <output>near(tan(PI / 3), 1.732050) -> True, </output>
      <output>near(tan(PI), 0) -> True, </output>
      <output>near(tan(2 * PI), 0) -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(10, tanh(-5))) -> ${math::truncate(math::multiplication('10', math::tanh('-5')))}, </code>
      <code>truncate(multiplication(10, tanh(-4))) -> ${math::truncate(math::multiplication('10', math::tanh('-4')))}, </code>
      <code>truncate(multiplication(10, tanh(-3))) -> ${math::truncate(math::multiplication('10', math::tanh('-3')))}, </code>
      <code>truncate(multiplication(10, tanh(-2))) -> ${math::truncate(math::multiplication('10', math::tanh('-2')))}, </code>
      <code>truncate(multiplication(10, tanh(-1))) -> ${math::truncate(math::multiplication('10', math::tanh('-1')))}, </code>
      <code>truncate(multiplication(10, tanh(0))) -> ${math::truncate(math::multiplication('10', math::tanh('0')))}, </code>
      <code>truncate(multiplication(10, tanh(1))) -> ${math::truncate(math::multiplication('10', math::tanh('1')))}, </code>
      <code>truncate(multiplication(10, tanh(2))) -> ${math::truncate(math::multiplication('10', math::tanh('2')))}, </code>
      <code>truncate(multiplication(10, tanh(3))) -> ${math::truncate(math::multiplication('10', math::tanh('3')))}, </code>
      <code>truncate(multiplication(10, tanh(4))) -> ${math::truncate(math::multiplication('10', math::tanh('4')))}, </code>
      <code>truncate(multiplication(10, tanh(5))) -> ${math::truncate(math::multiplication('10', math::tanh('5')))}</code>
      <output>truncate(multiplication(10, tanh(-5))) -> -9, </output>
      <output>truncate(multiplication(10, tanh(-4))) -> -9, </output>
      <output>truncate(multiplication(10, tanh(-3))) -> -9, </output>
      <output>truncate(multiplication(10, tanh(-2))) -> -9, </output>
      <output>truncate(multiplication(10, tanh(-1))) -> -7, </output>
      <output>truncate(multiplication(10, tanh(0))) -> 0, </output>
      <output>truncate(multiplication(10, tanh(1))) -> 7, </output>
      <output>truncate(multiplication(10, tanh(2))) -> 9, </output>
      <output>truncate(multiplication(10, tanh(3))) -> 9, </output>
      <output>truncate(multiplication(10, tanh(4))) -> 9, </output>
      <output>truncate(multiplication(10, tanh(5))) -> 9</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>near(cot(PI / 6), 1.732050) -> ${math::near(math::cot(math::division(math::PI(), '6')), '1.732050', '0.000001')}, </code>
      <code>near(cot(PI / 4), 1) -> ${math::near(math::cot(math::division(math::PI(), '4')), '1', '0.000001')}, </code>
      <code>near(cot(PI / 3), 0.577350) -> ${math::near(math::cot(math::division(math::PI(), '3')), '0.577350', '0.000001')}, </code>
      <code>near(cot(PI / 2), 0) -> ${math::near(math::cot(math::division(math::PI(), '2')), '0', '0.000001')}, </code>
      <code>near(cot(3 * PI / 2), 0) -> ${math::near(math::cot(math::division(math::multiplication('3', math::PI()), '2')), '0', '0.000001')}</code>
      <output>near(cot(PI / 6), 1.732050) -> True, </output>
      <output>near(cot(PI / 4), 1) -> True, </output>
      <output>near(cot(PI / 3), 0.577350) -> True, </output>
      <output>near(cot(PI / 2), 0) -> True, </output>
      <output>near(cot(3 * PI / 2), 0) -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(10, coth(-5))) -> ${math::truncate(math::multiplication('10', math::coth('-5')))}, </code>
      <code>truncate(multiplication(10, coth(-4))) -> ${math::truncate(math::multiplication('10', math::coth('-4')))}, </code>
      <code>truncate(multiplication(10, coth(-3))) -> ${math::truncate(math::multiplication('10', math::coth('-3')))}, </code>
      <code>truncate(multiplication(10, coth(-2))) -> ${math::truncate(math::multiplication('10', math::coth('-2')))}, </code>
      <code>truncate(multiplication(10, coth(-1))) -> ${math::truncate(math::multiplication('10', math::coth('-1')))}, </code>
      <code>truncate(multiplication(10, coth(1))) -> ${math::truncate(math::multiplication('10', math::coth('1')))}, </code>
      <code>truncate(multiplication(10, coth(2))) -> ${math::truncate(math::multiplication('10', math::coth('2')))}, </code>
      <code>truncate(multiplication(10, coth(3))) -> ${math::truncate(math::multiplication('10', math::coth('3')))}, </code>
      <code>truncate(multiplication(10, coth(4))) -> ${math::truncate(math::multiplication('10', math::coth('4')))}, </code>
      <code>truncate(multiplication(10, coth(5))) -> ${math::truncate(math::multiplication('10', math::coth('5')))}</code>
      <output>truncate(multiplication(10, coth(-5))) -> -10, </output>
      <output>truncate(multiplication(10, coth(-4))) -> -10, </output>
      <output>truncate(multiplication(10, coth(-3))) -> -10, </output>
      <output>truncate(multiplication(10, coth(-2))) -> -10, </output>
      <output>truncate(multiplication(10, coth(-1))) -> -13, </output>
      <output>truncate(multiplication(10, coth(1))) -> 13, </output>
      <output>truncate(multiplication(10, coth(2))) -> 10, </output>
      <output>truncate(multiplication(10, coth(3))) -> 10, </output>
      <output>truncate(multiplication(10, coth(4))) -> 10, </output>
      <output>truncate(multiplication(10, coth(5))) -> 10</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(-1) -> ${math::truncate('-1')}, </code>
      <code>truncate(-1.5) -> ${math::truncate('-1.5')}, </code>
      <code>truncate(0) -> ${math::truncate('0')}, </code>
      <code>truncate(0.0) -> ${math::truncate('0.0')}, </code>
      <code>truncate(1) -> ${math::truncate('1')}, </code>
      <code>truncate(1.5) -> ${math::truncate('1.5')}</code>
      <output>truncate(-1) -> -1, </output>
      <output>truncate(-1.5) -> -1, </output>
      <output>truncate(0) -> 0, </output>
      <output>truncate(0.0) -> 0, </output>
      <output>truncate(1) -> 1, </output>
      <output>truncate(1.5) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>near(PI, 3.1415926535897931) -> ${math::near(math::PI(), '3.1415926535897931', '0.000001')}, </code>
      <code>near(E, 2.7182818284590451) -> ${math::near(math::E(), '2.7182818284590451', '0.000001')}</code>
      <output>near(PI, 3.1415926535897931) -> True, </output>
      <output>near(E, 2.7182818284590451) -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>-2 * PI -> ${math::truncate(math::degrees(math::multiplication('-2', math::PI())))}, </code>
      <code>-PI - 3 * PI/4 -> ${math::truncate(math::degrees(math::subtraction(math::multiplication('-1', math::PI()), math::division(math::multiplication('3', math::PI()), '4'))))}, </code>
      <code>-PI - PI/2 -> ${math::truncate(math::degrees(math::subtraction(math::multiplication('-1', math::PI()), math::division(math::PI(), '2'))))}, </code>
      <code>-PI - PI/4 -> ${math::truncate(math::degrees(math::subtraction(math::multiplication('-1', math::PI()), math::division(math::PI(), '4'))))}, </code>
      <code>-PI -> ${math::truncate(math::degrees(math::multiplication('-1', math::PI())))}, </code>
      <code>-3 * PI/4 -> ${math::truncate(math::degrees(math::multiplication('-1', math::division(math::multiplication('3', math::PI()), '4'))))}, </code>
      <code>-PI/2 -> ${math::truncate(math::degrees(math::multiplication('-1', math::division(math::PI(), '2'))))}, </code>
      <code>-PI/4 -> ${math::truncate(math::degrees(math::multiplication('-1', math::division(math::PI(), '4'))))}, </code>
      <code>0 -> ${math::truncate(math::degrees('0'))}, </code>
      <code>PI/4 -> ${math::truncate(math::degrees(math::division(math::PI(), '4')))}, </code>
      <code>PI/2 -> ${math::truncate(math::degrees(math::division(math::PI(), '2')))}, </code>
      <code>3 * PI/4 -> ${math::truncate(math::degrees(math::division(math::multiplication('3', math::PI()), '4')))}, </code>
      <code>PI -> ${math::truncate(math::degrees(math::PI()))}, </code>
      <code>PI + PI/4 -> ${math::truncate(math::degrees(math::addition(math::PI(), math::division(math::PI(), '4'))))}, </code>
      <code>PI + PI/2 -> ${math::truncate(math::degrees(math::addition(math::PI(), math::division(math::PI(), '2'))))}, </code>
      <code>PI + 3 * PI/4 -> ${math::truncate(math::degrees(math::addition(math::PI(), math::division(math::multiplication('3', math::PI()), '4'))))}, </code>
      <code>2 * PI -> ${math::truncate(math::degrees(math::multiplication('2', math::PI())))}</code>
      <output>-2 * PI -> -360, </output>
      <output>-PI - 3 * PI/4 -> -315, </output>
      <output>-PI - PI/2 -> -270, </output>
      <output>-PI - PI/4 -> -225, </output>
      <output>-PI -> -180, </output>
      <output>-3 * PI/4 -> -135, </output>
      <output>-PI/2 -> -90, </output>
      <output>-PI/4 -> -45, </output>
      <output>0 -> 0, </output>
      <output>PI/4 -> 45, </output>
      <output>PI/2 -> 90, </output>
      <output>3 * PI/4 -> 135, </output>
      <output>PI -> 180, </output>
      <output>PI + PI/4 -> 225, </output>
      <output>PI + PI/2 -> 270, </output>
      <output>PI + 3 * PI/4 -> 315, </output>
      <output>2 * PI -> 360</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>-360 -> ${math::truncate(math::multiplication('100000', math::radians('-360')))}, </code>
      <code>-315 -> ${math::truncate(math::multiplication('100000', math::radians('-315')))}, </code>
      <code>-270 -> ${math::truncate(math::multiplication('100000', math::radians('-270')))}, </code>
      <code>-225 -> ${math::truncate(math::multiplication('100000', math::radians('-225')))}, </code>
      <code>-180 -> ${math::truncate(math::multiplication('100000', math::radians('-180')))}, </code>
      <code>-135 -> ${math::truncate(math::multiplication('100000', math::radians('-135')))}, </code>
      <code>-90 -> ${math::truncate(math::multiplication('100000', math::radians('-90')))}, </code>
      <code>-45 -> ${math::truncate(math::multiplication('100000', math::radians('-45')))}, </code>
      <code>0 -> ${math::truncate(math::multiplication('100000', math::radians('0')))}, </code>
      <code>45 -> ${math::truncate(math::multiplication('100000', math::radians('45')))}, </code>
      <code>90 -> ${math::truncate(math::multiplication('100000', math::radians('90')))}, </code>
      <code>135 -> ${math::truncate(math::multiplication('100000', math::radians('135')))}, </code>
      <code>180 -> ${math::truncate(math::multiplication('100000', math::radians('180')))}, </code>
      <code>225 -> ${math::truncate(math::multiplication('100000', math::radians('225')))}, </code>
      <code>270 -> ${math::truncate(math::multiplication('100000', math::radians('270')))}, </code>
      <code>315 -> ${math::truncate(math::multiplication('100000', math::radians('315')))}, </code>
      <code>360 -> ${math::truncate(math::multiplication('100000', math::radians('360')))}</code>
      <output>-360 -> -628318, </output>
      <output>-315 -> -549778, </output>
      <output>-270 -> -471238, </output>
      <output>-225 -> -392699, </output>
      <output>-180 -> -314159, </output>
      <output>-135 -> -235619, </output>
      <output>-90 -> -157079, </output>
      <output>-45 -> -78539, </output>
      <output>0 -> 0, </output>
      <output>45 -> 78539, </output>
      <output>90 -> 157079, </output>
      <output>135 -> 235619, </output>
      <output>180 -> 314159, </output>
      <output>225 -> 392699, </output>
      <output>270 -> 471238, </output>
      <output>315 -> 549778, </output>
      <output>360 -> 628318</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>3 + 4 -> ${math::truncate(math::addition('3', '4'))}, </code>
      <code>3 - 4 -> ${math::truncate(math::addition('3', '-4'))}</code>
      <output>3 + 4 -> 7, </output>
      <output>3 - 4 -> -1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>3 - 4 -> ${math::truncate(math::subtraction('3', '4'))}, </code>
      <code>3 + 4 -> ${math::truncate(math::subtraction('3', '-4'))}</code>
      <output>3 - 4 -> -1, </output>
      <output>3 + 4 -> 7</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>3 * 4 -> ${math::truncate(math::multiplication('3', '4'))}, </code>
      <code>3 * -4 -> ${math::truncate(math::multiplication('3', '-4'))}</code>
      <output>3 * 4 -> 12, </output>
      <output>3 * -4 -> -12</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>9 / 3 -> ${math::truncate(math::division('9', '3'))}, </code>
      <code>9 / -3 -> ${math::truncate(math::division('9', '-3'))}</code>
      <output>9 / 3 -> 3, </output>
      <output>9 / -3 -> -3</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(double_epsilon()) -> ${string::empty(math::double_epsilon())}, </code>
      <code>near(1, 2) -> ${math::near('1', '2')}, </code>
      <code>near(1, 2, 0.000001) -> ${math::near('1', '2', '0.000001')}, </code>
      <code>less(1, 2) -> ${math::less('1', '2')}, </code>
      <code>greater(1, 2) -> ${math::greater('1', '2')}</code>
      <output>empty(double_epsilon()) -> False, </output>
      <output>near(1, 2) -> False, </output>
      <output>near(1, 2, 0.000001) -> False, </output>
      <output>less(1, 2) -> True, </output>
      <output>greater(1, 2) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>The quadratic polynomial </code>
      <code>x^2 - 16 = 0 </code>
      <code>have next solution(s) </code>
      <code>X1 -> </code>
      <code>${math::truncate(math::division(math::addition(math::multiplication('-1', '0'), </code>
      <code>math::sqrt(math::subtraction(math::pow('0', '2'), math::multiplication('4', math::multiplication('1', '-16'))))), math::multiplication('2', '1'))))}</code>
      <code> X2 -> </code>
      <code>${math::truncate(math::division(math::subtraction(math::multiplication('-1', '0'), </code>
      <code>math::sqrt(math::subtraction(math::pow('0', '2'), math::multiplication('4', math::multiplication('1', '-16'))))), math::multiplication('2', '1'))))}</code>
      <output>The quadratic polynomial </output>
      <output>x^2 - 16 = 0 </output>
      <output>have next solution(s) </output>
      <output>X1 -> 4 </output>
      <output>X2 -> -4</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>format-to-string -> ${string::empty(datetime::format-to-string('0', '%A %c'))}</code>
      <output>format-to-string -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string(01.09.2019 2:03:04) -> ${datetime::to-string('01.09.2019 2:03:04')}</code>
      <output>to-string(01.09.2019 2:03:04) -> 01.09.2019 2:03:04</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse(01.09.2019 2:03:04) -> ${datetime::parse('01.09.2019 2:03:04')}</code>
      <output>parse(01.09.2019 2:03:04) -> 01.09.2019 2:03:04</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-day(1569840495) -> ${datetime::get-day('1569840495')}</code>
      <output>get-day(1569840495) -> 30</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-day-of-week(1569840495) -> ${datetime::get-day-of-week('1569840495')} </code>
      <code>get-day-of-week(1577059200) -> ${datetime::get-day-of-week('1577059200')}</code>
      <output>get-day-of-week(1569840495) -> 1 </output>
      <output>get-day-of-week(1577059200) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-day-of-year(1569840495) -> ${datetime::get-day-of-year('1569840495')}</code>
      <output>get-day-of-year(1569840495) -> 273</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-days-in-month(2016, 2) -> ${datetime::get-days-in-month('2016', '2')}, </code>
      <code>get-days-in-month(2019, 2) -> ${datetime::get-days-in-month('2019', '2')}</code>
      <output>get-days-in-month(2016, 2) -> 29, </output>
      <output>get-days-in-month(2019, 2) -> 28</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-hour(1569840495) -> ${datetime::get-hour('1569840495')}</code>
      <output>get-hour(1569840495) -> 10</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-minute(1569840495) -> ${datetime::get-minute('1569840495')}</code>
      <output>get-minute(1569840495) -> 48</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-month(1569840495) -> ${datetime::get-month('1569840495')}</code>
      <output>get-month(1569840495) -> 9</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-second(1569840495) -> ${datetime::get-second('1569840495')}</code>
      <output>get-second(1569840495) -> 15</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-year(1569840495) -> ${datetime::get-year('1569840495')}</code>
      <output>get-year(1569840495) -> 2019</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>is-leap-year(2016) -> ${datetime::is-leap-year('2016')}, </code>
      <code>is-leap-year(2019) -> ${datetime::is-leap-year('2019')}</code>
      <output>is-leap-year(2016) -> True, </output>
      <output>is-leap-year(2019) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(ticks()) -> ${string::empty(datetime::ticks())}</code>
      <output>empty(ticks()) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(now-utc()) -> ${string::empty(datetime::now-utc())}</code>
      <output>empty(now-utc()) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(now()) -> ${string::empty(datetime::now())}</code>
      <output>empty(now()) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-input(30.09.2019 10:48:15) -> ${datetime::from-input('30.09.2019 10:48:15')}</code>
      <output>from-input(30.09.2019 10:48:15) -> 1569840495</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-days(1) -> ${timespan::from-days('1')}</code>
      <output>from-days(1) -> 86400</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-hours(1) -> ${timespan::from-hours('1')}</code>
      <output>from-hours(1) -> 3600</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-milliseconds(10000) -> ${timespan::from-milliseconds('10000')}</code>
      <output>from-milliseconds(10000) -> 10</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-minutes(1) -> ${timespan::from-minutes('1')}</code>
      <output>from-minutes(1) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-seconds(1) -> ${timespan::from-seconds('1')}</code>
      <output>from-seconds(1) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(from-ticks(100000000)) -> ${string::empty(timespan::from-ticks('100000000'))}</code>
      <output>empty(from-ticks(100000000)) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-days(86400) -> ${timespan::get-days('86400')}</code>
      <output>get-days(86400) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-hours(3600) -> ${timespan::get-hours('3600')}</code>
      <output>get-hours(3600) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-minutes(60) -> ${timespan::get-minutes('60')}</code>
      <output>get-minutes(60) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse(60) -> ${timespan::parse('60')}</code>
      <output>parse(60) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string(60) -> ${timespan::to-string('60')}</code>
      <output>to-string(60) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-seconds(60) -> ${timespan::get-seconds('60')}</code>
      <output>get-seconds(60) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-seconds(60) -> ${timespan::get-total-seconds('60')}</code>
      <output>get-total-seconds(60) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(get-ticks(10)) -> ${string::empty(timespan::get-ticks('10'))}</code>
      <output>empty(get-ticks(10)) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-days(86400) -> ${math::truncate(timespan::get-total-days('86400'))}</code>
      <output>get-total-days(86400) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-hours(3600) -> ${math::truncate(timespan::get-total-hours('3600'))}</code>
      <output>get-total-hours(3600) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-milliseconds(1) -> ${timespan::get-total-milliseconds('1')}</code>
      <output>get-total-milliseconds(1) -> 1000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-minutes(60) -> ${math::truncate(timespan::get-total-minutes('60'))}</code>
      <output>get-total-minutes(60) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${long::to-string('0')} == ${int64::to-string('0')}</code>
      <output>0 == 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${long::to-string('9223372036854775807')} == ${int64::to-string('9223372036854775807')}</code>
      <output>9223372036854775807 == 9223372036854775807</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${long::to-string('-9223372036854775808')} == ${int64::to-string('-9223372036854775808')}</code>
      <output>-9223372036854775808 == -9223372036854775808</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::less('1.0', '2.0')}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::less('2.0', '2.0')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::greater('2.0', '2.0')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::greater('2.0', '1.0')}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>exists('attrib') -> ${task::exists('attrib')} </code>
      <code>exists('call') -> ${task::exists('call')} </code>
      <code>exists('choose') -> ${task::exists('choose')} </code>
      <code>exists('copy') -> ${task::exists('copy')} </code>
      <code>exists('delete') -> ${task::exists('delete')} </code>
      <code>exists('description') -> ${task::exists('description')} </code>
      <code>exists('echo') -> ${task::exists('echo')} </code>
      <code>exists('exec') -> ${task::exists('exec')} </code>
      <code>exists('fail') -> ${task::exists('fail')} </code>
      <code>exists('foreach') -> ${task::exists('foreach')} </code>
      <code>exists('if') -> ${task::exists('if')} </code>
      <code>exists('include') -> ${task::exists('include')} </code>
      <code>exists('loadfile') -> ${task::exists('loadfile')} </code>
      <code>exists('loadtasks') -> ${task::exists('loadtasks')} </code>
      <code>exists('mkdir') -> ${task::exists('mkdir')} </code>
      <code>exists('move') -> ${task::exists('move')} </code>
      <code>exists('program') -> ${task::exists('program')} </code>
      <code>exists('project') -> ${task::exists('project')} </code>
      <code>exists('property') -> ${task::exists('property')} </code>
      <code>exists('setenv') -> ${task::exists('setenv')} </code>
      <code>exists('sleep') -> ${task::exists('sleep')} </code>
      <code>exists('target') -> ${task::exists('target')} </code>
      <code>exists('touch') -> ${task::exists('touch')} </code>
      <code>exists('trycatch') -> ${task::exists('trycatch')} </code>
      <code>exists('tstamp') -> ${task::exists('tstamp')} </code>
      <code>exists('uptodate') -> ${task::exists('uptodate')} </code>
      <output>exists('attrib') -> True </output>
      <output>exists('call') -> True </output>
      <output>exists('choose') -> True </output>
      <output>exists('copy') -> True </output>
      <output>exists('delete') -> True </output>
      <output>exists('description') -> True </output>
      <output>exists('echo') -> True </output>
      <output>exists('exec') -> True </output>
      <output>exists('fail') -> True </output>
      <output>exists('foreach') -> True </output>
      <output>exists('if') -> True </output>
      <output>exists('include') -> False </output>
      <output>exists('loadfile') -> True </output>
      <output>exists('loadtasks') -> True </output>
      <output>exists('mkdir') -> True </output>
      <output>exists('move') -> True </output>
      <output>exists('program') -> True </output>
      <output>exists('project') -> True </output>
      <output>exists('property') -> True </output>
      <output>exists('setenv') -> False </output>
      <output>exists('sleep') -> True </output>
      <output>exists('target') -> True </output>
      <output>exists('touch') -> True </output>
      <output>exists('trycatch') -> True </output>
      <output>exists('tstamp') -> False </output>
      <output>exists('uptodate') -> False </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>exists('build') -> ${target::exists('build')}</code>
      <output>exists('build') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>exists() -> ${target::exists()}</code>
      <output>exists() -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-current-target() -> ${target::get-current-target()}</code>
      <output>get-current-target() -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>has-executed('build') -> ${target::has-executed('build')}</code>
      <output>has-executed('build') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>has-executed() -> ${target::has-executed()}</code>
      <output>has-executed() -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-160('') -> ${hash::bytes-to-string(hash::blake2b('', '160'))}</code>
      <output>blake2b-160('') -> 3345524abf6bbe1809449224b5972c41790b6cf2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-256('') -> ${hash::bytes-to-string(hash::blake2b('', '256'))}</code>
      <output>blake2b-256('') -> 0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-256('') -> ${hash::bytes-to-string(hash::blake2b(''))}</code>
      <output>blake2b-256('') -> 0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-384('') -> ${hash::bytes-to-string(hash::blake2b('', '384'))}</code>
      <output>blake2b-384('') -> b32811423377f52d7862286ee1a72ee540524380fda1724a6f25d7978c6fd3244a6caf0498812673c5e05ef583825100</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-512('') -> ${hash::bytes-to-string(hash::blake2b('', '512'))}</code>
      <output>blake2b-512('') -> 786a02f742015903c6c6fd852552d272912f4740e15847618a86e217f71f5419d25e1031afee585313896444934eb04b903a685b1448b755d56f701afe9be2ce</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake3('') -> ${hash::bytes-to-string(hash::blake3('', '256'))}</code>
      <output>blake3('') -> af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake3('') -> ${hash::bytes-to-string(hash::blake3(''))}</code>
      <output>blake3('') -> af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>bytes-to-string('') -> ${hash::bytes-to-string('')}</code>
      <output>bytes-to-string('') -> </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>bytes-to-string('&#x9;&#xa;&#xd;') -> ${hash::bytes-to-string('&#x9;&#xa;&#xd;')}</code>
      <output>bytes-to-string('&#x9;&#xa;&#xd;') -> 090a0d</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('') -> ${hash::bytes-to-string(hash::crc32(''))}</code>
      <output>crc32('') -> 00000000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('', 'decreasing') -> ${hash::bytes-to-string(hash::crc32('', 'decreasing'))}</code>
      <output>crc32('', 'decreasing') -> 00000000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('', 'increasing') -> ${hash::bytes-to-string(hash::crc32('', 'increasing'))}</code>
      <output>crc32('', 'increasing') -> 00000000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('The quick brown fox jumps over the lazy dog') -> ${hash::bytes-to-string(hash::crc32('The quick brown fox jumps over the lazy dog'))}</code>
      <output>crc32('The quick brown fox jumps over the lazy dog') -> 39a34f41</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('The quick brown fox jumps over the lazy dog', 'decreasing') -> ${hash::bytes-to-string(hash::crc32('The quick brown fox jumps over the lazy dog', 'decreasing'))}</code>
      <output>crc32('The quick brown fox jumps over the lazy dog', 'decreasing') -> 414fa339</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('The quick brown fox jumps over the lazy dog', 'increasing') -> ${hash::bytes-to-string(hash::crc32('The quick brown fox jumps over the lazy dog', 'increasing'))}</code>
      <output>crc32('The quick brown fox jumps over the lazy dog', 'increasing') -> 39a34f41</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak('', '224') -> ${hash::bytes-to-string(hash::keccak('', '224'))}</code>
      <output>hash::keccak('', '224') -> f71837502ba8e10837bdd8d365adb85591895602fc552b48b7390abd</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak('', '256') -> ${hash::bytes-to-string(hash::keccak('', '256'))}</code>
      <output>hash::keccak('', '256') -> c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak('', '256') -> ${hash::bytes-to-string(hash::keccak(''))}</code>
      <output>hash::keccak('', '256') -> c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak('', '384') -> ${hash::bytes-to-string(hash::keccak('', '384'))}</code>
      <output>hash::keccak('', '384') -> 2c23146a63a29acf99e73b88f8c24eaa7dc60aa771780ccc006afbfa8fe2479b2dd2b21362337441ac12b515911957ff</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak('', '512') -> ${hash::bytes-to-string(hash::keccak('', '512'))}</code>
      <output>hash::keccak('', '512') -> 0eab42de4c3ceb9235fc91acffe746b29c29a8c366b7c60e4e67c466f36a4304c00fa9caf9d87976ba469bcbe06713b435f091ef2769fb160cdab33d3670680e</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3('', '224') -> ${hash::bytes-to-string(hash::sha3('', '224'))}</code>
      <output>hash::sha3('', '224') -> 6b4e03423667dbb73b6e15454f0eb1abd4597f9a1b078e3f5b5a6bc7</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3('', '256') -> ${hash::bytes-to-string(hash::sha3('', '256'))}</code>
      <output>hash::sha3('', '256') -> a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3('', '256') -> ${hash::bytes-to-string(hash::sha3(''))}</code>
      <output>hash::sha3('', '256') -> a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3('', '384') -> ${hash::bytes-to-string(hash::sha3('', '384'))}</code>
      <output>hash::sha3('', '384') -> 0c63a75b845e4f7d01107d852e4c2485c51a50aaaa94fc61995e71bbee983a2ac3713831264adb47fb6bd1e058d5f004</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3('', '512') -> ${hash::bytes-to-string(hash::sha3('', '512'))}</code>
      <output>hash::sha3('', '512') -> a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::xxh32('') -> ${hash::bytes-to-string(hash::xxh32(''))}</code>
      <output>hash::xxh32('') -> 055dcc02</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::xxh32('', '0') -> ${hash::bytes-to-string(hash::xxh32('', '0'))}</code>
      <output>hash::xxh32('', '0') -> 055dcc02</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::xxh32('', '2654435761') -> ${hash::bytes-to-string(hash::xxh32('', '2654435761'))}</code>
      <output>hash::xxh32('', '2654435761') -> e78ab736</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::xxh64('') -> ${hash::bytes-to-string(hash::xxh64(''))}</code>
      <output>hash::xxh64('') -> 99e9d85137db46ef</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::xxh64('', '0') -> ${hash::bytes-to-string(hash::xxh64('', '0'))}</code>
      <output>hash::xxh64('', '0') -> 99e9d85137db46ef</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::xxh64('', '2654435761') -> ${hash::bytes-to-string(hash::xxh64('', '2654435761'))}</code>
      <output>hash::xxh64('', '2654435761') -> ef179b92a2fd75ac</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>

      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'directory')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'file')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'all')</code>

      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'directory', 'false')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'file', 'false')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'all', 'false')</code>

      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>exists(get-temp-path()) -> ${directory::exists(path::get-temp-path())}</code>
      <output>exists(get-temp-path()) -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-creation-time(path::get-temp-path())</code>
      <code>directory::get-creation-time-utc(path::get-temp-path())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-last-access-time(path::get-temp-path())</code>
      <code>directory::get-last-access-time-utc(path::get-temp-path())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-last-write-time(path::get-temp-path())</code>
      <code>directory::get-last-write-time-utc(path::get-temp-path())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-directory-root(path::get-temp-path())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-parent-directory(environment::get-folder-path('Personal'))</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-current-directory()</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-logical-drives())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::contains('my ${file} is here', '${file}')}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::contains('my ${current file} is here', '${file}')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::replace(string::quote('{math::truncate(math::addition(a, b))}'), '{', '${')}</code>
      <output>"${math::truncate(math::addition(a, b))}"</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${operating-system::get-platform('Microsoft Windows NT 5.0.0.0')}</code>
      <output>win32</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${operating-system::get-version('Linux 4')}</code>
      <output>4.0.0.0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${operating-system::to-string('OpenBSD 6.5')}</code>
      <output>OpenBSD 6.5</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${operating-system::is-windows-server('')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>string::empty(platform::get-name()) => ${string::empty(platform::get-name())}</code>
      <output>string::empty(platform::get-name()) => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>string::empty(platform::is-unix()) => ${string::empty(platform::is-unix())}</code>
      <output>string::empty(platform::is-unix()) => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>string::empty(platform::is-windows()) => ${string::empty(platform::is-windows())}</code>
      <output>string::empty(platform::is-windows()) => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>string::empty(platform::is-windows-server()) => ${string::empty(platform::is-windows-server())}</code>
      <output>string::empty(platform::is-windows-server()) => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${path::glob('1.txt', '*.txt')}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${path::glob('1.txt', '*.bat')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_task>
      <code><![CDATA[<echo />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
    <interpreter_evaluate_task>
      <code><![CDATA[<echo message="Hello! Do you know that last-index-of('ABAB', 'B') is ${string::last-index-of('ABAB', 'B')}?" verbose="true" />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
    <interpreter_evaluate_task>
      <code><![CDATA[<echo>
Hello! Do you know that last-index-of('ABAB', 'B') is ${string::last-index-of('ABAB', 'B')}?
      </echo> />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
    <interpreter_evaluate_task project="true">
      <code><![CDATA[<property name="debug" value="true" />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
    <interpreter_evaluate_task project="true">
      <code><![CDATA[<property name="PI" value="{math::PI()}" dynamic="true" />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
  </TestInterpreter>
  <TestLoadTasks>
    <project_load_from_build_file if="${platform::is-windows()}">
      <path_to_module>modules\dns\ant4c.dns.dll</path_to_module>
      <build_file>modules\dns\dns.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-windows()}">
      <path_to_module>modules\dns\libant4c.dns.dll</path_to_module>
      <build_file>modules\dns\dns.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-unix()}">
      <path_to_module>modules/dns/libant4c.dns.so</path_to_module>
      <build_file>modules/dns/dns.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-unix()}">
      <path_to_module>modules/dns/libant4c.dns.dylib</path_to_module>
      <build_file>modules/dns/dns.xml</build_file>
    </project_load_from_build_file>
    <!--project_load_from_build_file if="${platform::is-windows()}">
      <path_to_module>modules\ant4c.net.framework\ant4c.net.framework.module.dll</path_to_module>
      <build_file>modules\ant4c.net.framework\ant4c.net.framework.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-windows()}">
      <path_to_module>libant4c.net.framework.module.dll</path_to_module>
    </project_load_from_build_file-->
    <project_load_from_build_file if="${platform::is-windows()}">
      <path_to_module>modules\net\ant4c.net.module.dll</path_to_module>
      <build_file>modules\net\net.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-windows()}">
      <path_to_module>modules\net\libant4c.net.module.dll</path_to_module>
      <build_file>modules\net\net.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-unix()}">
      <path_to_module>modules/net/libant4c.net.module.so</path_to_module>
      <build_file>modules/net/net.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-unix()}">
      <path_to_module>modules/net/libant4c.net.module.dylib</path_to_module>
      <build_file>modules/net/net.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-windows()}">
      <path_to_module>modules\regex\ant4c.regex.dll</path_to_module>
      <build_file>modules\regex\regex.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-windows()}">
      <path_to_module>modules\regex\libant4c.regex.dll</path_to_module>
      <build_file>modules\regex\regex.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-unix()}">
      <path_to_module>modules/regex/libant4c.regex.so</path_to_module>
      <build_file>modules/regex/regex.xml</build_file>
    </project_load_from_build_file>
    <project_load_from_build_file if="${platform::is-unix()}">
      <path_to_module>modules/regex/libant4c.regex.dylib</path_to_module>
      <build_file>modules/regex/regex.xml</build_file>
    </project_load_from_build_file>
  </TestLoadTasks>
  <TestMathUnit>
    <math_abs>
      <input>-1.5</input>
      <output>1.5</output>
    </math_abs>
    <math_abs>
      <input>-1</input>
      <output>1</output>
    </math_abs>
    <math_abs>
      <input>-0.5</input>
      <output>0.5</output>
    </math_abs>
    <math_abs>
      <input>0</input>
      <output>0</output>
    </math_abs>
    <math_abs>
      <input>0.5</input>
      <output>0.5</output>
    </math_abs>
    <math_abs>
      <input>1</input>
      <output>1</output>
    </math_abs>
    <math_abs>
      <input>1.5</input>
      <output>1.5</output>
    </math_abs>
    <math_ceiling>
      <input>-1.75</input>
      <output>-1</output>
    </math_ceiling>
    <math_ceiling>
      <input>-1.5</input>
      <output>-1</output>
    </math_ceiling>
    <math_ceiling>
      <input>-1.25</input>
      <output>-1</output>
    </math_ceiling>
    <math_ceiling>
      <input>-1</input>
      <output>-1</output>
    </math_ceiling>
    <math_ceiling>
      <input>-0.75</input>
      <output>0</output>
    </math_ceiling>
    <math_ceiling>
      <input>-0.5</input>
      <output>0</output>
    </math_ceiling>
    <math_ceiling>
      <input>-0.25</input>
      <output>0</output>
    </math_ceiling>
    <math_ceiling>
      <input>0</input>
      <output>0</output>
    </math_ceiling>
    <math_ceiling>
      <input>0.25</input>
      <output>1</output>
    </math_ceiling>
    <math_ceiling>
      <input>0.5</input>
      <output>1</output>
    </math_ceiling>
    <math_ceiling>
      <input>0.75</input>
      <output>1</output>
    </math_ceiling>
    <math_ceiling>
      <input>1</input>
      <output>1</output>
    </math_ceiling>
    <math_ceiling>
      <input>1.25</input>
      <output>2</output>
    </math_ceiling>
    <math_ceiling>
      <input>1.5</input>
      <output>2</output>
    </math_ceiling>
    <math_ceiling>
      <input>1.75</input>
      <output>2</output>
    </math_ceiling>
    <math_floor>
      <input>-1.75</input>
      <output>-2</output>
    </math_floor>
    <math_floor>
      <input>-1.5</input>
      <output>-2</output>
    </math_floor>
    <math_floor>
      <input>-1.25</input>
      <output>-2</output>
    </math_floor>
    <math_floor>
      <input>-1</input>
      <output>-1</output>
    </math_floor>
    <math_floor>
      <input>-0.75</input>
      <output>-1</output>
    </math_floor>
    <math_floor>
      <input>-0.5</input>
      <output>-1</output>
    </math_floor>
    <math_floor>
      <input>-0.25</input>
      <output>-1</output>
    </math_floor>
    <math_floor>
      <input>0</input>
      <output>0</output>
    </math_floor>
    <math_floor>
      <input>0.25</input>
      <output>0</output>
    </math_floor>
    <math_floor>
      <input>0.5</input>
      <output>0</output>
    </math_floor>
    <math_floor>
      <input>0.75</input>
      <output>0</output>
    </math_floor>
    <math_floor>
      <input>1</input>
      <output>1</output>
    </math_floor>
    <math_floor>
      <input>1.25</input>
      <output>1</output>
    </math_floor>
    <math_floor>
      <input>1.5</input>
      <output>1</output>
    </math_floor>
    <math_floor>
      <input>1.75</input>
      <output>1</output>
    </math_floor>
    <math_round>
      <input>-1.75</input>
      <output>-2</output>
    </math_round>
    <math_round>
      <input>-1.5</input>
      <output>-2</output>
    </math_round>
    <math_round>
      <input>-1.25</input>
      <output>-1</output>
    </math_round>
    <math_round>
      <input>-1</input>
      <output>-1</output>
    </math_round>
    <math_round>
      <input>-0.75</input>
      <output>-1</output>
    </math_round>
    <math_round>
      <input>-0.5</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>-0.25</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>0</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>0.25</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>0.5</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>0.75</input>
      <output>1</output>
    </math_round>
    <math_round>
      <input>1</input>
      <output>1</output>
    </math_round>
    <math_round>
      <input>1.25</input>
      <output>1</output>
    </math_round>
    <math_round>
      <input>1.5</input>
      <output>2</output>
    </math_round>
    <math_round>
      <input>1.75</input>
      <output>2</output>
    </math_round>
  </TestMathUnit>
  <TestNetModule>
    <functions>
      <code>${hostinterface::initialize('123456')}</code>
      <code>${hostinterface::set-additional-dependency-serialized('a/b/c')}</code>
      <code>${hostinterface::set-application-path('C:\dotnet.exe')}</code>
      <code>${hostinterface::set-config-keys('a', 'b', 'c', 'd', 'e')}</code>
      <code>${hostinterface::set-config-values('123', '4567', '89', '0', '5')}</code>
      <code>${hostinterface::set-dependency-file('C:\1\2\3\4\5\6\7\8\9\0')}</code>
      <code>${hostinterface::set-dotnet-root('C:\program')}</code>
      <code>${hostinterface::set-file-bundle-header-offset('1')}</code>
      <code>${hostinterface::set-framework-dependent('1')}</code>
      <code>${hostinterface::set-framework-directories('C:\', 'D:\', 'E:\')}</code>
      <code>${hostinterface::set-framework-directory('C:\a\b\c')}</code>
      <code>${hostinterface::set-framework-found-versions('', '3.1.0')}</code>
      <code>${hostinterface::set-framework-name('Microsoft.NETCore.App')}</code>
      <code>${hostinterface::set-framework-names('', 'Microsoft.NETCore.App')}</code>
      <code>${hostinterface::set-framework-requested-versions('', '3.1.0')}</code>
      <code>${hostinterface::set-framework-version('3.1.0')}</code>
      <code>${hostinterface::set-host-command('--?')}</code>
      <code>${hostinterface::set-host-mode('10')}</code>
      <code>${hostinterface::set-host-mode('libhost')}</code>
      <code>${hostinterface::set-host-path('C:\program\dotnet.exe')}</code>
      <code>${hostinterface::set-patch-roll-forward('1')}</code>
      <code>${hostinterface::set-paths-for-probing(
                path::combine(environment::get-folder-path('UserProfile'), '.nuget\packages'),
                path::combine(environment::get-folder-path('UserProfile'), '.dotnet\NuGetFallbackFolder'),
                path::combine(environment::get-folder-path('ProgramFiles'), 'dotnet\sdk\NuGetFallbackFolder'))}</code>
      <code>${hostinterface::set-prerelease-roll-forward('0')}</code>
      <code>${hostinterface::set-target-framework-moniker('netcoreapp3.1')}</code>
    </functions>
  </TestNetModule>
  <TestNetModuleEx>
    <project_load_from_build_file unless="${environment::variable-exists('test_hostfxr_')}" />
    <project_load_from_build_file unless="${environment::variable-exists('test_hostfxr_')}">
      <target>net_result-to-string</target>
    </project_load_from_build_file>
    <project_load_from_build_file unless="${environment::variable-exists('test_hostfxr_')}">
      <target>hostfxr_functions</target>
    </project_load_from_build_file>
    <project_load_from_build_file unless="${environment::variable-exists('test_hostfxr_')}">
      <target>hostfxr_is-function-exists</target>
    </project_load_from_build_file>
    <project_load_from_build_file unless="${environment::variable-exists('test_hostfxr_')}">
      <target>hostfxr_main</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('hostfxr_resolve_sdk')}">
      <target>hostfxr_resolve-sdk</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('hostfxr_get_available_sdks')}">
      <target>hostfxr_get-available-sdks</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('hostfxr_get_native_search_directories')}">
      <target>hostfxr_get-native-search-directories</target>
    </project_load_from_build_file>
    <project_load_from_build_file unless="${environment::variable-exists('test_hostfxr_')}">
      <target>hostfxr_main-startupinfo</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('hostfxr_resolve_sdk2')}">
      <target>hostfxr_resolve-sdk2</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_initialize_for_dotnet_command_line')}">
      <target>test_hostfxr_initialize-for-dotnet-command-line</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_initialize_for_runtime_config')}">
      <target>test_hostfxr_initialize-for-runtime-config</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_run_app')}">
      <target>hostfxr_run-app</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_get_runtime_properties')}">
      <target>test_hostfxr_get-runtime-properties</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_get_runtime_property_value')}">
      <target>test_hostfxr_get-runtime-property-value</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_set_runtime_property_value')}">
      <target>test_hostfxr_set-runtime-property-value</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_get_runtime_delegate')}">
      <target>test_hostfxr_get-runtime-delegate</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_set_error_writer')}">
      <target>test_hostfxr_set-error-writer</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_hostfxr_main_bundle_startupinfo')}">
      <target>hostfxr_main-bundle-startupinfo</target>
    </project_load_from_build_file>
    <project_load_from_build_file unless="${environment::variable-exists('test_hostfxr_')}">
      <target>nethost_get-hostfxr-path</target>
    </project_load_from_build_file>
    <project_load_from_build_file if="${environment::variable-exists('test_file_is_assembly')}">
      <target>test_file_is-assembly</target>
    </project_load_from_build_file>
  </TestNetModuleEx>
  <TestPath>
    <path_change_extension>
      <input></input>
      <ext></ext>
      <output></output>
      <return></return>
    </path_change_extension>
    <path_change_extension>
      <input>C:\1.txt</input>
      <ext>.txt</ext>
      <output>C:\1.txt</output>
      <return>1</return>
    </path_change_extension>
    <path_change_extension>
      <input>C:\1.txt</input>
      <ext>.exe</ext>
      <output>C:\1.exe</output>
      <return>1</return>
    </path_change_extension>
    <path_combine>
      <path1></path1>
      <path2></path2>
      <output></output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:\</path1>
      <path2>\Windows</path2>
      <output>C:\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1></path1>
      <path2>\Windows</path2>
      <output>\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:\</path1>
      <path2></path2>
      <output>C:\</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:/</path1>
      <path2>/Windows</path2>
      <output>C:\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1></path1>
      <path2>/Windows</path2>
      <output>\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:/</path1>
      <path2></path2>
      <output>C:\</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:/</path1>
      <path2>\Windows</path2>
      <output>C:\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:\</path1>
      <path2>/Windows</path2>
      <output>C:\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>/tmp/</path1>
      <path2>/file</path2>
      <output>/tmp/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1></path1>
      <path2>/file</path2>
      <output>/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>/tmp/</path1>
      <path2></path2>
      <output>/tmp/</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>/tmp/</path1>
      <path2>\file</path2>
      <output>/tmp/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1></path1>
      <path2>\file</path2>
      <output>/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>\tmp/</path1>
      <path2></path2>
      <output>/tmp/</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>\tmp\</path1>
      <path2>/file</path2>
      <output>/tmp/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>/..</path1>
      <output>/..</output>
      <return>1</return>
    </path_combine>
    <path_get_directory_name>
      <path></path>
      <return></return>
      <directory></directory>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-windows()}">
      <path>C:\Windows\System32\cmd.exe</path>
      <directory>C:\Windows\System32</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-unix()}">
      <path>/tmp/file</path>
      <directory>/tmp</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-windows()}">
      <path>C:\Temp</path>
      <directory>C:</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-windows()}">
      <path>C:\Temp\</path>
      <directory>C:\Temp</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-unix()}">
      <path>/tmp</path>
      <directory>/</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-unix()}">
      <path>/tmp/</path>
      <directory>/tmp</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_extension>
      <path></path>
      <ext></ext>
      <return></return>
    </path_get_extension>
    <path_get_extension>
      <path>1.txt</path>
      <ext>.txt</ext>
      <return>1</return>
    </path_get_extension>
    <path_get_extension>
      <path>1.</path>
      <ext></ext>
      <return></return>
    </path_get_extension>
    <path_get_file_name>
      <path></path>
      <file_name></file_name>
      <return></return>
    </path_get_file_name>
    <path_get_file_name if="${platform::is-windows()}">
      <path>C:\Windows\System32\cmd.exe</path>
      <file_name>cmd.exe</file_name>
      <return>1</return>
    </path_get_file_name>
    <path_get_file_name if="${platform::is-unix()}">
      <path>/tmp/file</path>
      <file_name>file</file_name>
      <return>1</return>
    </path_get_file_name>
    <path_get_file_name_without_extension>
      <path></path>
      <file_name></file_name>
      <return></return>
    </path_get_file_name_without_extension>
    <path_get_file_name_without_extension>
      <path>1.txt</path>
      <file_name>1</file_name>
      <return>1</return>
    </path_get_file_name_without_extension>
    <path_get_file_name_without_extension>
      <path>abc.txt</path>
      <file_name>abc</file_name>
      <return>1</return>
    </path_get_file_name_without_extension>
    <path_get_full_path>
      <root_path></root_path>
      <path></path>
      <full_path></full_path>
      <return></return>
    </path_get_full_path>
    <path_get_full_path>
      <root_path>C:\</root_path>
      <path>C:\Windows\System32</path>
      <full_path if="${platform::is-unix()}">C:/C:/Windows/System32</full_path>
      <full_path if="${platform::is-windows()}">C:\Windows\System32</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path>
      <root_path>C:\Windows\System32</root_path>
      <path>..\..\</path>
      <full_path if="${platform::is-unix()}">C:/</full_path>
      <full_path if="${platform::is-windows()}">C:\</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-windows()}">
      <root_path>C:\</root_path>
      <path>..\..\</path>
      <full_path></full_path>
      <return>0</return>
    </path_get_full_path>
    <path_get_full_path>
      <root_path>/tmp</root_path>
      <path>../</path>
      <full_path if="${platform::is-unix()}">/</full_path>
      <full_path if="${platform::is-windows()}">\</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-unix()}">
      <root_path>/tmp</root_path>
      <path>/..</path>
      <full_path />
      <return>0</return>
    </path_get_full_path>
    <path_get_full_path>
      <root_path>C:\</root_path>
      <path>sample.build</path>
      <full_path if="${platform::is-unix()}">C:/sample.build</full_path>
      <full_path if="${platform::is-windows()}">C:\sample.build</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path>
      <root_path>C:\</root_path>
      <path>C:\Users\MyUser~1\AppData</path>
      <full_path if="${platform::is-unix()}">C:/C:/Users/MyUser~1/AppData</full_path>
      <full_path if="${platform::is-windows()}">C:\Users\MyUser~1\AppData</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path>
      <root_path>C:\a..a</root_path>
      <full_path />
    </path_get_full_path>
    <path_get_full_path if="${platform::is-windows()}">
      <path>C:\a..a</path>
      <full_path>C:\a..a</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-windows()}">
      <path>C:\..a</path>
      <full_path>C:\..a</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-unix()}">
      <root_path>C:\</root_path>
      <path>C:\a..a</path>
      <full_path>C:/C:/a..a</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-unix()}">
      <root_path>C:\</root_path>
      <path>C:\..a</path>
      <full_path>C:/C:/..a</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-unix()}">
      <path>/a..a</path>
      <full_path>/a..a</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-unix()}">
      <path>/..a</path>
      <full_path>/..a</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path>
      <root_path>..</root_path>
      <full_path />
    </path_get_full_path>
    <path_glob input="" wild_card="" result="" />
    <path_glob input="Law" wild_card="Law*" result="true" />
    <path_glob input="Laws" wild_card="Law*" result="true" />
    <path_glob input="Lawyer" wild_card="Law*" result="true" />
    <path_glob input="GrokLaw" wild_card="Law*" result="false" />
    <path_glob input="La" wild_card="Law*" result="false" />
    <path_glob input="aw" wild_card="Law*" result="false" />
    <path_glob input="Law" wild_card="*Law*" result="true" />
    <path_glob input="GrokLaw" wild_card="*Law*" result="true" />
    <path_glob input="Lawyer" wild_card="*Law*" result="true" />
    <path_glob input="La" wild_card="*Law*" result="false" />
    <path_glob input="aw" wild_card="*Law*" result="false" />
    <cygpath_get_dos_path>
      <input>C:\Program Files\Internet Explorer</input>
      <output>C:\PROGRA~1\INTERN~1</output>
    </cygpath_get_dos_path>
    <cygpath_get_dos_path>
      <input>C:\Program Files\Windows Defender Advanced Threat Protection</input>
      <output>C:\PROGRA~1\WIF4A9~1</output>
    </cygpath_get_dos_path>
  </TestPath>
  <TestProject>
    <project_property_set_value>
      <code><![CDATA[]]></code>
      <property>
        <return></return>
      </property>
    </project_property_set_value>
    <project_property_set_value>
      <code><![CDATA[]]></code>
      <property name="a" value="" overwrite="false" readonly="true">
        <return>1</return>
      </property>
    </project_property_set_value>
    <project_load_from_content>
      <content><![CDATA[]]></content>
      <return></return>
      <target_return>1</target_return>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name = "Example project." default="Say hello.">
        <description>This is a sample project for a test case.</description>
        <target name="Say hello." if="${string::contains('Abc', 'A')}">
          <echo message="Hello! Do you know that last-index-of('ABAB', 'B') is ${string::last-index-of('ABAB', 'B')}?" />
        </target>
      </project>
      ]]></content>
      <return>1</return>
      <name>Example project.</name>
      <default>Say hello.</default>
      <target>Say hello.</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="property_test">
        <echo message="Message one - '${property.one}'." if="${property::exists('property.one')}"/>
        <echo message="Second message. Only this message will be displayed if no property set." level="None"/>
      </project>
      ]]></content>
      <return>1</return>
      <name>property_test</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="discriminant">
        <description>Calculate 'real' solution(s) of quadratic polynomial.</description>
        <property name="D"
          value="${math::subtraction(math::pow(b, '2'), math::multiplication('4', math::multiplication(a, c)))}"
          dynamic="true" readonly="true" />

        <property name="X1"
          value="${math::division(math::addition(math::multiplication('-1', b), math::sqrt(D)), math::multiplication('2', a))}"
          dynamic="true" readonly="true" />

        <property name="X2"
          value="${math::division(math::subtraction(math::multiplication('-1', b), math::sqrt(D)), math::multiplication('2', a))}"
          dynamic="true" readonly="true" />

        <property name="n" value="${environment::newline()}" />
        <property name="n"
                  value="${string::substring(n, math::subtraction(string::get-length(n), '1')), '1')}" />

        <property name="input" />

        <property name="input" value="${input}2,0,-64${n}" />
        <property name="input" value="${input}1,0,-16${n}" />
        <property name="input" value="${input}9,0,49${n}" />
        <property name="input" value="${input}-2,0,-4${n}" />
        <property name="input" value="${input}4,0,81${n}" />
        <property name="input" value="${input}-1,0,-9${n}" />
        <property name="input" value="${input}3,0,-36${n}" />
        <property name="input" value="${input}6,0,144${n}" />
        <property name="input" value="${input}1,0,-16${n}" />

        <property name="input" value="${input}6,11,-35${n}" />
        <property name="input" value="${input}2,-4,-2${n}" />
        <property name="input" value="${input}-4,-7,12${n}" />
        <property name="input" value="${input}20,-15,-10${n}" />
        <property name="input" value="${input}1,-1,-3${n}" />
        <property name="input" value="${input}5,-2,-9${n}" />
        <property name="input" value="${input}3,4,2${n}" />
        <property name="input" value="${input}-1,6,18${n}" />

        <property name="input" value="${input}1,-7,0${n}" />
        <property name="input" value="${input}2,8,0${n}" />
        <property name="input" value="${input}-1,-9,0${n}" />
        <property name="input" value="${input}1,2,0${n}" />
        <property name="input" value="${input}-6,-3,0${n}" />
        <property name="input" value="${input}-5,1,0${n}" />
        <property name="input" value="${input}-12,13,0${n}" />
        <property name="input" value="${input}11,-27,0${n}" />

        <foreach item="String" in="${input}" delim="${n}" property="line">
          <property name="a" value="${string::substring(line, '0', string::index-of(line, ','))}" />
          <property name="b" value="${string::substring(line, string::index-of(line, ','))}" />

          <property name="b" value="${string::substring(b, '1')}" />
          <property name="b" value="${string::substring(b, '0', string::index-of(b, ','))}" />

          <property name="c" value="${string::substring(line, string::last-index-of(line, ','))}" />
          <property name="c" value="${string::substring(c, '1')}" />

          <property name="line" />
          <property name="line" value="The quadratic polynomial ${a}x^2 + ${b}x + ${c} = 0" />
          <property name="line" value="${string::replace(line, '+ -', '- ')}" />

          <property name="line" value="${line} have next solution(s):${n}X1 -> '${X1}' and X2 -> '${X2}'."
                    if="${math::greater(D, '0')}" />
          <property name="line"
            value="${line} have discriminant:${n}'${D}' that less than zero, so no solution(s) for non complex numbers are available."
                    unless="${string::contains(line, 'solution(s)')}" />

          <echo>${line}</echo>
        </foreach>
      </project>
      ]]></content>
      <return>1</return>
      <name>discriminant</name>
      <description>Calculate 'real' solution(s) of quadratic polynomial.</description>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="tasks_to_skip">
        <description if="false" />
        <foo if="false" />
      </project>
      ]]></content>
      <return>1</return>
      <name>tasks_to_skip</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="discriminant">
        <property name="a" value="1" overwrite="false" readonly="true" />
        <property name="b" value="0" overwrite="false" readonly="true" />
        <property name="c" value="-16" overwrite="false" readonly="true" />

        <property name="D" value="${math::subtraction(math::pow(b, '2'), math::multiplication('4', math::multiplication(a, c)))}" dynamic="true" overwrite="true" readonly="true" />
        <property name="X1" value="${math::division(math::addition(math::multiplication('-1', b), math::sqrt(D)), math::multiplication('2', a))}" dynamic="true" overwrite="true" readonly="true" />
        <property name="X2" value="${math::division(math::subtraction(math::multiplication('-1', b), math::sqrt(D)), math::multiplication('2', a))}" dynamic="true" overwrite="true" readonly="true" />

        <echo message="The quadratic polynomial ${a}x^2 + ${b}x + ${c} = 0 have next solution(s) X1 -> ${math::truncate(X1)} X2 -> ${math::truncate(X2)}" level="None" />
      </project>
      ]]></content>
      <return>1</return>
      <name>discriminant</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="project-properties" default="some_target">
        <echo message="Default target - ${project::get-default-target()}." level="None" />
        <echo message="Project name - ${project::get-name()}." level="None" />
        <target name="some_target" />
      </project>
      ]]></content>
      <return>1</return>
      <name>project-properties</name>
      <default>some_target</default>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="loadfile sample">
        <property name="file" value="${path::get-temp-file-name()}" overwrite="true" readonly="true" />
        <echo message="${property::get-value('file')}" file="${property::get-value('file')}" />
        <loadfile file="${property::get-value('file')}" property="content" />
        <delete file="${property::get-value('file')}" />
        <echo message="${property::get-value('content')}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>loadfile sample</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="touch sample">
        <touch />
        <property name="file" value="${path::get-temp-file-name()}" overwrite="true" readonly="true" />
        <echo message="${property::get-value('file')}" file="${property::get-value('file')}" />
        <touch file="${property::get-value('file')}" />
        <touch file="${property::get-value('file')}" datetime="15.09.2019 12:35:46" />
        <touch file="${property::get-value('file')}" millis="1569840495" />
        <touch file="${property::get-value('file')}" datetime="15.09.2019 12:35:46" millis="1569840495" />
      </project>
      ]]></content>
      <return>1</return>
      <name>touch sample</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="fail sample 1">
        <fail message="${project::get-name()} - failed to continue interpreting script." />
      </project>
      ]]></content>
      <return>0</return>
      <target_return>1</target_return>
      <name>fail sample 1</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="fail sample 2">
        <fail>${project::get-name()} - failed to continue interpreting script.</fail>
      </project>
      ]]></content>
      <return>0</return>
      <target_return>1</target_return>
      <name>fail sample 2</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="sleep sample">
        <sleep />
        <sleep hours="0" />
        <sleep milliseconds="0" />
        <sleep minutes="0" />
        <sleep seconds="0" />

        <sleep hours="0" milliseconds="0" />
        <sleep hours="0" minutes="0" />
        <sleep hours="0" seconds="0" />

        <sleep milliseconds="0" minutes="0" />
        <sleep milliseconds="0" seconds="0" />

        <sleep minutes="0" seconds="0" />

        <sleep hours="0" milliseconds="10" minutes="0" seconds="0" />
      </project>
      ]]></content>
      <return>1</return>
      <name>sleep sample</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="attrib sample">
        <echo level="Warning" unless="${platform::is-windows()}">
          Attribute task will be ignored on non Windows platforms.
        </echo>

        <property name="file" value="${path::get-temp-file-name()}" />

        <attrib file="${property::get-value('file')}" />

        <attrib file="${property::get-value('file')}" archive="false" />
        <attrib file="${property::get-value('file')}" hidden="false" />
        <attrib file="${property::get-value('file')}" normal="false" />
        <attrib file="${property::get-value('file')}" readonly="false" />
        <attrib file="${property::get-value('file')}" system="false" />

        <attrib file="${property::get-value('file')}" archive="true" />
        <attrib file="${property::get-value('file')}" hidden="true" />
        <attrib file="${property::get-value('file')}" normal="true" />
        <attrib file="${property::get-value('file')}" readonly="true" />
        <attrib file="${property::get-value('file')}" system="true" />

        <attrib file="${property::get-value('file')}" normal="true" readonly="false" />

        <delete file="${property::get-value('file')}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>attrib sample</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="property sample">
        <property name="property" value="A" />
        <property name="property" value="${property::get-value('property')} B C" />
      </project>
      ]]></content>
      <return>1</return>
      <name>property sample</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <?xml version="1.0"?>
      <project name="Hello descriptions!" default="foo">
        <description>The Hello World sample of project and target descriptions.</description>
        <property name="debug" value="false" overwrite="false" />
        <target name="clean" description="clean build folder">
          <foo_tag />
        </target>
        <target name="build" description="build project">
          <foo_tag />
        </target>
        <target name="publish" depends="build">
          <description>Publish the output of project</description>
          <foo_tag />
        </target>
        <target name="foo" />
        <foo_tag />
      </project>
      ]]></content>
      <project_help>1</project_help>
      <return>1</return>
      <name>Hello descriptions!</name>
      <default>foo</default>
      <target>foo</target>
      <target>clean</target>
      <target>build</target>
      <target>publish</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="File functions">
        <property name="file" value="${path::get-temp-file-name()}" />

        <property name="file_exists" value="${file::exists(property::get-value('file'))}" />
        <fail unless="${file_exists}" message="file_exists - ${file} not exists" />

        <property name="checksum" value="${file::get-checksum(file, 'crc32')}" />
        <fail unless="${string::equal('00000000', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'blake2b', '160')}" />
        <fail unless="${string::equal('3345524abf6bbe1809449224b5972c41790b6cf2', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'blake2b', '256')}" />
        <fail unless="${string::equal('0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'blake2b')}" />
        <fail unless="${string::equal('0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'blake3', '256')}" />
        <fail unless="${string::equal('af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'blake3')}" />
        <fail unless="${string::equal('af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'blake2b', '384')}" />
        <fail unless="${string::equal('b32811423377f52d7862286ee1a72ee540524380fda1724a6f25d7978c6fd3244a6caf0498812673c5e05ef583825100', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'blake2b', '512')}" />
        <fail unless="${string::equal('786a02f742015903c6c6fd852552d272912f4740e15847618a86e217f71f5419d25e1031afee585313896444934eb04b903a685b1448b755d56f701afe9be2ce', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'sha3', '256')}" />
        <fail unless="${string::equal('a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'sha3')}" />
        <fail unless="${string::equal('a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'xxh32')}" />
        <fail unless="${string::equal('055dcc02', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'xxh32', '0')}" />
        <fail unless="${string::equal('055dcc02', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'xxh32', '2654435761')}" />
        <fail unless="${string::equal('e78ab736', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'xxh64')}" />
        <fail unless="${string::equal('99e9d85137db46ef', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'xxh64', '0')}" />
        <fail unless="${string::equal('99e9d85137db46ef', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'xxh64', '2654435761')}" />
        <fail unless="${string::equal('ef179b92a2fd75ac', checksum)}" message="checksum - ${checksum}" />

        <property name="file_get-creation-time" value="${file::get-creation-time(property::get-value('file'))}" />
        <property name="file_get-creation-time-utc" value="${file::get-creation-time-utc(property::get-value('file'))}" />

        <property name="file_get-last-access-time" value="${file::get-last-access-time(property::get-value('file'))}" />
        <property name="file_get-last-access-time-utc" value="${file::get-last-access-time-utc(property::get-value('file'))}" />

        <property name="file_get-last-write-time" value="${file::get-last-write-time(property::get-value('file'))}" />
        <property name="file_get-last-write-time-utc" value="${file::get-last-write-time-utc(property::get-value('file'))}" />

        <property name="file_get-length" value="${file::get-length(property::get-value('file'))}" />
        <fail unless="${string::equal('0', file_get-length)}" message="file_get-length - ${file_get-length}" />

        <echo file="${file}" message="The quick brown fox jumps over the lazy dog" />

        <property name="checksum" value="${file::get-checksum(file, 'crc32')}" />
        <fail unless="${string::equal('39a34f41', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'crc32', 'decreasing')}" />
        <fail unless="${string::equal('414fa339', checksum)}" message="checksum - ${checksum}" />

        <property name="checksum" value="${file::get-checksum(file, 'crc32', 'increasing')}" />
        <fail unless="${string::equal('39a34f41', checksum)}" message="checksum - ${checksum}" />

        <property name="new_file" value="${path::get-temp-file-name()}" />
        <property name="file_up-to-date" value="${file::up-to-date(property::get-value('file'), property::get-value('new_file'))}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>File functions</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="If task sample">
        <property name="i" value="0" />
        <if test="true">
          <property name="i" value="${math::addition('1', property::get-value('i'))}" />
          <if test="false" />
          <if test="true" />
          <if test="false"/>
          <if test="true"/>
          <if test="true">
            <property name="i" value="${math::addition('2', property::get-value('i'))}" />
          </if>
        </if>
        <fail unless="${string::equal('3', math::truncate(property::get-value('i')))}" message="${project::get-name()} - property value of i (${property::get-value('i')}) is not equal to the 3." />
      </project>
      ]]></content>
      <return>1</return>
      <name>If task sample</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Choose task sample">
        <property name="i" value="0" />

        <choose>
          <when test="true">
            <property name="i" value="${math::addition('1', property::get-value('i'))}" />
          </when>
          <when test="true">
            <property name="i" value="${math::addition('2', property::get-value('i'))}" />
          </when>
          <otherwise>
            <property name="i" value="${math::addition('3', property::get-value('i'))}" />
          </otherwise>
        </choose>
        <fail unless="${string::equal('1', math::truncate(property::get-value('i')))}" message="${project::get-name()} - property value of i (${property::get-value('i')}) is not equal to the 1." />

        <choose>
          <when test="false">
            <property name="i" value="${math::addition('4', property::get-value('i'))}" />
          </when>
          <when test="false">
            <property name="i" value="${math::addition('5', property::get-value('i'))}" />
          </when>
          <otherwise>
            <property name="i" value="${math::addition('6', property::get-value('i'))}" />
          </otherwise>
        </choose>
        <fail unless="${string::equal('7', math::truncate(property::get-value('i')))}" message="${project::get-name()} - property value of i (${property::get-value('i')}) is not equal to the 7." />

        <choose>
          <when test="false">
            <property name="i" value="${math::addition('7', property::get-value('i'))}" />
          </when>
          <when test="true">
            <property name="i" value="${math::addition('8', property::get-value('i'))}" />
          </when>
          <otherwise>
            <property name="i" value="${math::addition('9', property::get-value('i'))}" />
          </otherwise>
        </choose>
        <fail unless="${string::equal('15', math::truncate(property::get-value('i')))}" message="${project::get-name()} - property value of i (${property::get-value('i')}) is not equal to the 15." />

        <choose>
          <when test="false">
            <property name="i" value="${math::addition('10', property::get-value('i'))}" />
          </when>
          <when test="false">
            <property name="i" value="${math::addition('11', property::get-value('i'))}" />
          </when>
        </choose>
        <fail unless="${string::equal('15', math::truncate(property::get-value('i')))}" message="${project::get-name()} - property value of i (${property::get-value('i')}) is not equal to the 15." />

        <choose>
          <otherwise>
            <property name="i" value="${math::addition('12', property::get-value('i'))}" />
          </otherwise>
          <otherwise>
            <property name="i" value="${math::addition('13', property::get-value('i'))}" />
          </otherwise>
        </choose>
        <fail unless="${string::equal('27', math::truncate(property::get-value('i')))}" message="${project::get-name()} - property value of i (${property::get-value('i')}) is not equal to the 27." />

        <choose></choose>
        <choose />
      </project>
      ]]></content>
      <return>1</return>
      <name>Choose task sample</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Property in the expression.">
        <property name="a" value="test" />
        <property name="b" value="${a}" />
        <fail unless="${string::equal('test', b)}" message="${project::get-name()} - property value of b (${b}) is not equal to the 'test'." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Property in the expression.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Target task sample 1">
        <target name="A">
        </target>
        <target name="A" />
      </project>
      ]]></content>
      <return>0</return>
      <target_return>1</target_return>
      <name>Target task sample 1</name>
      <target>A</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Target task sample 2">
        <target name="A">
        </target>
        <target name="B" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Target task sample 2</name>
      <target>A</target>
      <target>B</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Target task sample 3">
        <target name="A" />
        <target name="B" depends="A" />
        <target name="C" depends="B" />
        <target name="D" depends="C,B,A" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Target task sample 3</name>
      <target>A</target>
      <target>B</target>
      <target>C</target>
      <target>D</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Target task sample 4" default="D">
        <property name="i" value="0" />
        <property name="stack" value="" />
        <target name="A">
          <property name="i" value="${math::addition('1', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="B" depends="A">
          <property name="i" value="${math::addition('20', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="C" depends="B">
          <property name="i" value="${math::addition('300', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="D" depends="C,B,A">
          <property name="i" value="${math::addition('4000', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
          <fail unless="${string::equal('4321', math::truncate(i))}" message="${project::get-name()} - property value of i (${i}) is not equal to the 4321." />
          <fail unless="${string::equal('ABCD', stack)}" message="${project::get-name()} - property value of stack (${stack}) is not equal to the ABCD." />
        </target>
        <fail unless="${string::equal('0', math::truncate(i))}" message="${project::get-name()} - property value of i (${i}) is not equal to the 0." />
        <fail unless="${string::equal('', stack)}" message="${project::get-name()} - property value of stack (${stack}) is not equal to the ''." />
        <fail unless="${string::empty(stack)}" message="${project::get-name()} - property value of stack (${stack}) is not empty." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Target task sample 4</name>
      <default>D</default>
      <target>A</target>
      <target>B</target>
      <target>C</target>
      <target>D</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Target task sample 5" default="D">
        <property name="i" value="0" />
        <property name="stack" value="" />
        <target name="A">
          <property name="i" value="${math::addition('1', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="B" depends="A">
          <property name="i" value="${math::addition('20', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="C" depends="B">
          <property name="i" value="${math::addition('300', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="D" depends="C, B, A">
          <property name="i" value="${math::addition('4000', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
          <fail unless="${string::equal('4321', math::truncate(i))}" message="${project::get-name()} - property value of i (${i}) is not equal to the 4321." />
          <fail unless="${string::equal('ABCD', stack)}" message="${project::get-name()} - property value of stack (${stack}) is not equal to the ABCD." />
        </target>
        <fail unless="${string::equal('0', math::truncate(i))}" message="${project::get-name()} - property value of i (${i}) is not equal to the 0." />
        <fail unless="${string::equal('', stack)}" message="${project::get-name()} - property value of stack (${stack}) is not equal to the ''." />
        <fail unless="${string::empty(stack)}" message="${project::get-name()} - property value of stack (${stack}) is not empty." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Target task sample 5</name>
      <default>D</default>
      <target>A</target>
      <target>B</target>
      <target>C</target>
      <target>D</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Target task sample 6" default="D">
        <property name="i" value="0" />
        <property name="stack" value="" />
        <target name="A">
          <property name="i" value="${math::addition('1', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="B" depends="A">
          <property name="i" value="${math::addition('20', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="C" depends="B">
          <property name="i" value="${math::addition('300', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="D" depends="C , B , A">
          <property name="i" value="${math::addition('4000', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
          <fail unless="${string::equal('4321', math::truncate(i))}" message="${project::get-name()} - property value of i (${i}) is not equal to the 4321." />
          <fail unless="${string::equal('ABCD', stack)}" message="${project::get-name()} - property value of stack (${stack}) is not equal to the ABCD." />
        </target>
        <fail unless="${string::equal('0', math::truncate(i))}" message="${project::get-name()} - property value of i (${i}) is not equal to the 0." />
        <fail unless="${string::equal('', stack)}" message="${project::get-name()} - property value of stack (${stack}) is not equal to the ''." />
        <fail unless="${string::empty(stack)}" message="${project::get-name()} - property value of stack (${stack}) is not empty." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Target task sample 6</name>
      <default>D</default>
      <target>A</target>
      <target>B</target>
      <target>C</target>
      <target>D</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Target task sample 7" default="D">
        <property name="i" value="0" />
        <property name="stack" value="" />
        <target name="A">
          <property name="i" value="${math::addition('1', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="B" depends="A">
          <property name="i" value="${math::addition('20', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="C" depends="B">
          <property name="i" value="${math::addition('300', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
        </target>
        <target name="D" depends=" C , B , A ">
          <property name="i" value="${math::addition('4000', i)}" />
          <property name="stack" value="${stack}${target::get-current-target()}" />
          <fail unless="${string::equal('4321', math::truncate(i))}" message="${project::get-name()} - property value of i (${i}) is not equal to the 4321." />
          <fail unless="${string::equal('ABCD', stack)}" message="${project::get-name()} - property value of stack (${stack}) is not equal to the ABCD." />
        </target>
        <fail unless="${string::equal('0', math::truncate(i))}" message="${project::get-name()} - property value of i (${i}) is not equal to the 0." />
        <fail unless="${string::equal('', stack)}" message="${project::get-name()} - property value of stack (${stack}) is not equal to the ''." />
        <fail unless="${string::empty(stack)}" message="${project::get-name()} - property value of stack (${stack}) is not empty." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Target task sample 7</name>
      <default>D</default>
      <target>A</target>
      <target>B</target>
      <target>C</target>
      <target>D</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Target task sample 8" default="A" >
        <target name="A" depends="B">
        </target>
        <target name="B" depends="A" />
      </project>
      ]]></content>
      <return>1</return>
      <target_return>0</target_return>
      <name>Target task sample 8</name>
      <default>A</default>
      <target>A</target>
      <target>B</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Call task sample" default="B">
        <target name="A">
          <property name="i" value="${math::addition('1', property::get-value('i'))}" />
        </target>
        <target name="B">
          <call target="A" />
          <property name="i" value="${math::addition('2', property::get-value('i'))}" />
          <fail unless="${string::equal('3', math::truncate(property::get-value('i')))}" message="${project::get-name()} - property value of i (${property::get-value('i')}) is not equal to the 3." />
        </target>
        <property name="i" value="0" />
        <fail unless="${string::equal('0', math::truncate(property::get-value('i')))}" message="${project::get-name()} - property value of i (${property::get-value('i')}) is not equal to the 0." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Call task sample</name>
      <default>B</default>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Call example" default="Run">
        <property name="property" value="" />

        <target name="A" unless="${target::has-executed(target::get-current-target())}">
          <property name="property" value="${property::get-value('property')} ${target::get-current-target()}" />
        </target>

        <target name="B" depends="A">
          <property name="property" value="${property::get-value('property')} ${target::get-current-target()}" />
        </target>

        <target name="C" depends="A,B">
          <property name="property" value="${property::get-value('property')} ${target::get-current-target()}" />
        </target>

        <target name="Run" depends="A,B,C">
          <call target="B" />
          <call target="B" />
          <fail unless="${string::equal(property, ' A B C B B')}" message="Value of property '${property}' not equal to the ' A B C B B'." />
        </target>
      </project>
      ]]></content>
      <return>1</return>
      <name>Call example</name>
      <default>Run</default>
      <target>A</target>
      <target>B</target>
      <target>C</target>
      <target>Run</target>
      <property name="property" value=" A B C B B" dynamic="false" readonly="false" />
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="For each sample 1.">
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" />

        <mkdir dir="${folder}" unless="${directory::exists(folder)}" />
        <touch file="${path::combine(folder, 'A')}" />
        <touch file="${path::combine(folder, 'B')}" />
        <touch file="${path::combine(folder, 'C')}" />

        <property name="result" value="" />

        <foreach item="File" in="${folder}" property="file_name">
          <property name="result" value="${result}${path::get-file-name(file_name)}" />
        </foreach>

        <fail unless="${string::equal('3', string::get-length(result))}" message="${project::get-name()} - length of property value 'result' (${result}) should be equal to the 3." />
        <fail unless="${string::contains(result, 'A')}" message="${project::get-name()} - property value of result (${result}) should contains 'A'." />
        <fail unless="${string::contains(result, 'B')}" message="${project::get-name()} - property value of result (${result}) should contains 'B'." />
        <fail unless="${string::contains(result, 'C')}" message="${project::get-name()} - property value of result (${result}) should contains 'C'." />

        <fail unless="${string::empty(file_name)}" message="${project::get-name()} - property value of file_name (${file_name}) is not empty." />

        <delete dir="${folder}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>For each sample 1.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="For each sample 2.">
        <property name="file" value="${path::get-temp-file-name()}" />
        <echo file="${file}">
          A,a,1          
          B,b,2          
          C,c,3          
        </echo>

        <property name="result" value="" />
        <foreach item="Line" in="${file}" property="line">
          <property name="result" value="${result}${hash::bytes-to-string(hash::crc32(line, 'decreasing'))}" />
        </foreach>
        <fail unless="${string::equal('000000005a9387236fc6e795ca253a38a3114325', result)}" message="${project::get-name()} - property value of result (${result}) is not equal to the 000000005a9387236fc6e795ca253a38a3114325." />

        <property name="result" value="" />
        <foreach item="Line" in="${file}" trim="Both" property="line">
          <property name="result" value="${result}${hash::bytes-to-string(hash::crc32(line, 'decreasing'))}" />
        </foreach>
        <fail unless="${string::equal('0000000068af5ce1b440c9d2ffe5bac300000000', result)}" message="${project::get-name()} - property value of result (${result}) is not equal to the 0000000068af5ce1b440c9d2ffe5bac300000000." />

        <property name="result" value="" />
        <foreach item="Line" in="${file}" trim="End" property="line">
          <property name="result" value="${result}${hash::bytes-to-string(hash::crc32(line, 'decreasing'))}" />
        </foreach>
        <fail unless="${string::equal('00000000ede72e083108bb3b7aadc82a00000000', result)}" message="${project::get-name()} - property value of result (${result}) is not equal to the 00000000ede72e083108bb3b7aadc82a00000000." />

        <property name="result" value="" />
        <foreach item="Line" in="${file}" trim="None" property="line">
          <property name="result" value="${result}${hash::bytes-to-string(hash::crc32(line, 'decreasing'))}" />
        </foreach>
        <fail unless="${string::equal('000000005a9387236fc6e795ca253a38a3114325', result)}" message="${project::get-name()} - property value of result (${result}) is not equal to the 000000005a9387236fc6e795ca253a38a3114325." />

        <property name="result" value="" />
        <foreach item="Line" in="${file}" trim="Start" property="line">
          <property name="result" value="${result}${hash::bytes-to-string(hash::crc32(line, 'decreasing'))}" />
        </foreach>
        <fail unless="${string::equal('000000006f6756c65a323670ffd1ebdd00000000', result)}" message="${project::get-name()} - property value of result (${result}) is not equal to the 000000006f6756c65a323670ffd1ebdd00000000." />
      </project>
      ]]></content>
      <return>1</return>
      <name>For each sample 2.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="For each sample 3.">
        <property name="result" value="" />
        <foreach item="String" in="${directory::get-logical-drives()}" property="element">
          <property name="result" value="${result}${element}" />
        </foreach>
        <fail if="${string::empty(result)}" message="${project::get-name()} - property value of result (${result}) should not be empty." />
      </project>
      ]]></content>
      <return>1</return>
      <name>For each sample 3.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="For each sample 4.">
        <property name="result" value="" />
        <foreach item="String" in="a b;c" delim=" ;" property="element">
          <property name="result" value="${result}${element}" />
        </foreach>
        <fail unless="${string::equal('abc', result)}" message="${project::get-name()} - property value of result (${result}) should be equal to the 'abc'." />
      </project>
      ]]></content>
      <return>1</return>
      <name>For each sample 4.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="For each sample 5.">
        <property name="result" value="" />
        <property name="C" value="${math::addition(a, b)}" dynamic="true" />
        <foreach item="String" in="4,5" delim="," property="a">
          <foreach item="String" in="8,9" delim="," property="b">
            <property name="result" value="${result}${math::truncate(C)} " />
          </foreach>
        </foreach>
        <fail unless="${string::equal('12 13 13 14', string::trim(result))}" message="${project::get-name()} - property value of result (${result}) is not equal to the '12 13 13 14'." />
      </project>
      ]]></content>
      <return>1</return>
      <name>For each sample 5.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="For each sample 6.">
        <property name="result" value="" />
        <property name="C" value="${math::addition(a, b)}" dynamic="true" />
        <foreach item="String" in="4,5" delim="," property="a">
          <foreach item="String" in="8,9" delim="," property="b">
            <do>
              <property name="result" value="${result}${math::truncate(C)} " />
            </do>
            <do unless="true">
              <property name="result" value="1" />
            </do>
            <do if="false">
              <property name="result" value="2" />
            </do>
          </foreach>
        </foreach>
        <fail unless="${string::equal('12 13 13 14', string::trim(result))}" message="${project::get-name()} - property value of result (${result}) is not equal to the '12 13 13 14'." />
      </project>
      ]]></content>
      <return>1</return>
      <name>For each sample 6.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="For each sample 7.">
        <property name="expected_result" value="&#xa77e;&#xa77f;&#xa780;&#xa781;&#xa782;&#xa783;&#xa784;&#xa785;&#xa786;&#xa787;" readonly="true" />
        <property name="result" value="" />
        <foreach item="String" in="&#xa77e; &#xa77f; &#xa780; &#xa781; &#xa782; &#xa783; &#xa784; &#xa785; &#xa786; &#xa787;" delim=" " property="element">
          <property name="result" value="${result}${element}" />
        </foreach>
        <fail unless="${string::equal(expected_result, result)}" message="${project::get-name()} - property value of result (${result}) should be equal to the '${expected_result}'." />
      </project>
      ]]>
      </content>
      <return>1</return>
      <name>For each sample 7.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project>
        <foreach item="String" in="1" delim="," property="a">
          <foreach item="String" in="3" delim="," property="b">
            <foreach item="String" in="5" delim="," property="c">
              <foreach item="String" in="7" delim="," property="d">
                <foreach item="String" in="9" delim="," property="e">
                  <foreach item="String" in="11" delim="," property="f">
                    <foreach item="String" in="13" delim="," property="g">
                      <foreach item="String" in="15" delim="," property="h">
                        <foreach item="String" in="17" delim="," property="i">
                          <foreach item="String" in="19" delim="," property="j">
                            <foreach item="String" in="21" delim="," property="k">
                              <foreach item="String" in="23" delim="," property="l">
                                <foreach item="String" in="25" delim="," property="m">
                                  <foreach item="String" in="27" delim="," property="n">
                                    <foreach item="String" in="29" delim="," property="o">
                                      <foreach item="String" in="31" delim="," property="p">
                                        <foreach item="String" in="33" delim="," property="q">
                                          <foreach item="String" in="35" delim="," property="r">
                                            <foreach item="String" in="37" delim="," property="s">
                                              <foreach item="String" in="39" delim="," property="t">
                                                <foreach item="String" in="41" delim="," property="u">
                                                  <foreach item="String" in="43" delim="," property="v">
                                                    <foreach item="String" in="45" delim="," property="w">
                                                      <foreach item="String" in="47" delim="," property="x">
                                                        <foreach item="String" in="49" delim="," property="y">
                                                          <foreach item="String" in="51" delim="," property="z">
                                                            <property name="result" value="${a} ${b} ${c} ${d} ${e} ${f} ${g} ${h} ${i} ${j} ${k} ${l} ${m} ${n} ${o} ${p} ${q} ${r} ${s} ${t} ${u} ${v} ${w} ${x} ${y} ${z}" />
                                                          </foreach>
                                                        </foreach>
                                                      </foreach>
                                                    </foreach>
                                                  </foreach>
                                                </foreach>
                                              </foreach>
                                            </foreach>
                                          </foreach>
                                        </foreach>
                                      </foreach>
                                    </foreach>
                                  </foreach>
                                </foreach>
                              </foreach>
                            </foreach>
                          </foreach>
                        </foreach>
                      </foreach>
                    </foreach>
                  </foreach>
                </foreach>
              </foreach>
            </foreach>
          </foreach>
        </foreach>
        <fail unless="${string::equal('1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51', string::trim(result))}" message="For each sample - value of result property (${result}) should be equal to the '1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51'." />
        <fail unless="${string::empty(a)}" message="For each sample - value of 'a' property (${a}) should be empty." />
        <fail unless="${string::empty(b)}" message="For each sample - value of 'b' property (${b}) should be empty." />
        <fail unless="${string::empty(c)}" message="For each sample - value of 'c' property (${c}) should be empty." />
        <fail unless="${string::empty(d)}" message="For each sample - value of 'd' property (${d}) should be empty." />
        <fail unless="${string::empty(e)}" message="For each sample - value of 'e' property (${e}) should be empty." />
        <fail unless="${string::empty(f)}" message="For each sample - value of 'f' property (${f}) should be empty." />
        <fail unless="${string::empty(g)}" message="For each sample - value of 'g' property (${g}) should be empty." />
        <fail unless="${string::empty(h)}" message="For each sample - value of 'h' property (${h}) should be empty." />
        <fail unless="${string::empty(i)}" message="For each sample - value of 'i' property (${i}) should be empty." />
        <fail unless="${string::empty(j)}" message="For each sample - value of 'j' property (${j}) should be empty." />
        <fail unless="${string::empty(k)}" message="For each sample - value of 'k' property (${k}) should be empty." />
        <fail unless="${string::empty(l)}" message="For each sample - value of 'l' property (${l}) should be empty." />
        <fail unless="${string::empty(m)}" message="For each sample - value of 'm' property (${m}) should be empty." />
        <fail unless="${string::empty(n)}" message="For each sample - value of 'n' property (${n}) should be empty." />
        <fail unless="${string::empty(o)}" message="For each sample - value of 'o' property (${o}) should be empty." />
        <fail unless="${string::empty(p)}" message="For each sample - value of 'p' property (${p}) should be empty." />
        <fail unless="${string::empty(q)}" message="For each sample - value of 'q' property (${q}) should be empty." />
        <fail unless="${string::empty(r)}" message="For each sample - value of 'r' property (${r}) should be empty." />
        <fail unless="${string::empty(s)}" message="For each sample - value of 's' property (${s}) should be empty." />
        <fail unless="${string::empty(t)}" message="For each sample - value of 't' property (${t}) should be empty." />
        <fail unless="${string::empty(u)}" message="For each sample - value of 'u' property (${u}) should be empty." />
        <fail unless="${string::empty(v)}" message="For each sample - value of 'v' property (${v}) should be empty." />
        <fail unless="${string::empty(w)}" message="For each sample - value of 'w' property (${w}) should be empty." />
        <fail unless="${string::empty(x)}" message="For each sample - value of 'x' property (${x}) should be empty." />
        <fail unless="${string::empty(y)}" message="For each sample - value of 'y' property (${y}) should be empty." />
        <fail unless="${string::empty(z)}" message="For each sample - value of 'z' property (${z}) should be empty." />
      </project>
      ]]></content>
      <return>1</return>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Program sample 1.">
        <property name="file" value="${path::get-temp-file-name()}" />
        <echo file="${file}">
          <project><echo>${file}</echo></project>
        </echo>
        <program buildfile="${file}" />
        <loadfile file="${file}" property="content" />
        <fail if="${string::contains(content, '${file}')}" message="${project::get-name()} sub project should not contains property expression." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Program sample 1.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Program sample 2.">
        <property name="file" value="${path::get-temp-file-name()}" />
        <echo file="${file}">
          <project><echo>${file}</echo></project>
        </echo>
        <program buildfile="${file}">
          <properties>
            <property name="property_name" value="property value" />
          </properties>
        </program>
        <loadfile file="${file}" property="content" />
        <fail if="${string::contains(content, '${file}')}" message="${project::get-name()} sub project should not contains property expression." />
        <fail if="${property::exists('property_name')}" message="${project::get-name()} this property ('property_name') should be able only for inner project." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Program sample 2.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project>
        <property name="content" value="&lt;project&gt;&#10;" />
        <property name="content" value="${content}  &lt;echo file=" />
        <property name="content" value="${content}${string::replace(string::quote('{file}'), '{', '${')}" />
        <property name="content" value="${content} append=" />
        <property name="content" value="${content}${string::replace(string::quote('{append}'), '{', '${')}" />
        <property name="content" value="${content} message=" />
        <property name="content" value="${content}${string::replace(string::quote('{math::truncate(math::addition(a, b))} '), '{', '${')}" />
        <property name="content" value="${content} /&gt;&#10;" />
        <property name="content" value="${content}&lt;/project&gt;&#10;" />

        <property name="content_crc32" value="${hash::bytes-to-string(hash::crc32(content))}" readonly="true" />

        <property name="build-file" value="${path::get-temp-file-name()}" readonly="true" />
        <echo message="${content}" file="${build-file}" />
        <property name="file" value="${path::get-temp-file-name()}" readonly="true" />

        <foreach item="String" in="4,5" delim="," property="a">
          <foreach item="String" in="8,9" delim="," property="b">
            <program buildfile="${build-file}">
              <properties>
                <property name="append" value="true" />
              </properties>
            </program>
          </foreach>
        </foreach>

        <property name="file_content_crc32" value="${file::get-checksum(build-file, 'crc32')}" readonly="true" />

        <loadfile file="${file}" property="content" />
        <fail unless="${string::equal('12 13 13 14', string::trim(content))}" message="Program sample - property value of content (${content}) is not equal to the '12 13 13 14'." />
        <fail unless="${string::equal(content_crc32, file_content_crc32)}" message="Program sample - crc32 of build file content (${file_content_crc32}) is not equal to the ${content_crc32}." />
      </project>
      ]]></content>
      <return>1</return>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="'Try catch' sample 1.">
        <property name="expected"
                  value="Entered 'try' section. Catch at the 'catch' section. Finally at the 'finally' section."
                  readonly="true" />
        <trycatch>
          <try>
            <property name="result" value="Entered 'try' section." />
            <fail message="Fail!" />
            <property name="result" />
          </try>
          <catch>
            <property name="result" value="${result} Catch at the 'catch' section." />
          </catch>
          <finally>
            <property name="result" value="${result} Finally at the 'finally' section." />
          </finally>
        </trycatch>
        <fail unless="${string::equal(expected, result)}"
              message="${project::get-name()} - value of result property(${result}) should be equal to the '${expected}'." />
      </project>
      ]]></content>
      <return>1</return>
      <name>'Try catch' sample 1.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="'Try catch' sample 2.">
        <trycatch>
          <try>
            <property name="result" value="Entered to the 'try' section." />
            <fail message="Error happen at the try section." />
            <property name="result" />
          </try>
          <catch property="the_problem_is">
            <property name="result" value="${result} Here we are at the 'catch' section with next problem: ${the_problem_is}" />
            <fail message="Here we go again in to the problem." />
            <property name="the_problem_is" />
          </catch>
          <finally>
            <property name="result" value="${result} And we entered into finally section." />
            <property name="result" value="${result}&#10;- Is problem property exists?" />
            <property name="result" value="${result}&#10;- Yes." if="${property::exists('the_problem_is')}" />
            <property name="result" value="${result}&#10;- No." unless="${property::exists('the_problem_is')}" />
          </finally>
        </trycatch>
      </project>
      ]]></content>
      <name>'Try catch' sample 2.</name>
      <return>0</return>
      <target_return>1</target_return>
      <property name="result" value="Entered to the 'try' section. Here we are at the 'catch' section with next problem: Error happen at the try section.&#10; And we entered into finally section.&#10;- Is problem property exists?&#10;- Yes." />
      <property name="the_problem_is" value="Error happen at the try section.&#10;" />
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="File replace sample.">
        <property name="content" value="0101010101010101010101010101010101010101010101010101010101010101" readonly="true" />
        <property name="expected_content" value="1010101010101010101010101010101010101010101010101010101010101010" readonly="true" />

        <property name="file" value="${path::get-temp-file-name()}" readonly="true" />
        <echo file="${file}" message="${content}" />

        <fail unless="${file::replace(file, '01', '10')}"
              message="${project::get-name()} - file replace function was failed." />

        <loadfile file="${file}" property="new_content" />
        <fail unless="${string::equal(expected_content, new_content)}"
              message="${project::get-name()} - value of new_content property(${new_content}) should be equal to the '${content}'." />
      </project>
      ]]></content>
      <name>File replace sample.</name>
      <return>1</return>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Wild target sample 1." default="in_the_middle_of_nowhere">
        <target name="*" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Wild target sample 1.</name>
      <default>in_the_middle_of_nowhere</default>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Wild target sample 2.">
        <target name="*" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Wild target sample 2.</name>
      <target_to_run>in_the_middle_of_nowhere</target_to_run>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move file sample 1.">
        <property name="expected_content" value="The file number one." />

        <property name="file_1" value="${path::get-temp-file-name()}" readonly="true" />
        <echo file="${file_1}" message="${expected_content}" />

        <property name="file_2" value="${path::get-temp-file-name()}" readonly="true" />

        <delete file="${file_2}" />
        <fail if="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' is exists." />

        <copy file="${file_1}" tofile="${file_2}" />
        <fail unless="${file::exists(property::get-value('file_1'))}" message="${project::get-name()} - file '${file_1}' is not exists." />
        <fail unless="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' is not exists." />

        <loadfile file="${file_2}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <delete file="${file_1}" />
        <fail if="${file::exists(property::get-value('file_1'))}" message="${project::get-name()} - file '${file_1}' is exists." />

        <move file="${file_2}" tofile="${file_1}" />
        <fail unless="${file::exists(property::get-value('file_1'))}" message="${project::get-name()} - file '${file_1}' is not exists." />
        <fail if="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' exists." />

        <loadfile file="${file_1}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move file sample 1.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move file sample 2.">
        <property name="file_1" value="${path::get-temp-file-name()}" readonly="true" />
        <property name="file_name" value="${path::get-file-name(file_1)}" readonly="true" />
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" readonly="true" />
        <property name="file_2" value="${path::combine(folder, file_name)}" readonly="true" />

        <property name="expected_content" value="The file number one." readonly="true" />
        <echo file="${file_1}" message="${expected_content}" />

        <fail if="${file::exists(file_2)}" message="${project::get-name()} - file '${file_name}' already exists at the target folder '${folder}'." />
        <copy file="${file_1}" todir="${folder}" />
        <fail unless="${file::exists(file_2)}" message="${project::get-name()} - file '${file_name}' not exists at the target folder '${folder}'." />

        <loadfile file="${file_2}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <delete file="${file_1}" />
        <fail if="${file::exists(property::get-value('file_1'))}" message="${project::get-name()} - file '${file_1}' is exists." />

        <move file="${file_2}" todir="${path::get-temp-path()}" />
        <fail unless="${file::exists(property::get-value('file_1'))}" message="${project::get-name()} - file '${file_1}' is not exists." />
        <fail if="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' exists." />

        <loadfile file="${file_1}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <delete dir="${folder}" />
        <fail if="${directory::exists(folder)}" message="${project::get-name()} - folder '${content}' is exists." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move file sample 2.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move file sample 3." basedir="${path::get-temp-path()}">
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" readonly="true" />
        <mkdir dir="${folder}" unless="${directory::exists(folder)}" />

        <property name="file_name" value="${hash::bytes-to-string(hash::crc32(folder))}" readonly="true" />
        <property name="file_1" value="${path::combine(folder, file_name)}" readonly="true" />
        <property name="file_2" value="${path::combine(project::get-base-directory(), file_name)}" readonly="true" />

        <property name="expected_content" value="The file number one." readonly="true" />
        <echo file="${file_1}" message="${expected_content}" />
        <copy file="${file_1}" />

        <fail unless="${file::exists(file_1)}" message="${project::get-name()} - file '${file_1}' not exists." />
        <fail unless="${file::exists(file_2)}" message="${project::get-name()} - file '${file_2}' not exists." />

        <loadfile file="${file_2}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <delete file="${file_2}" />
        <fail if="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' is exists." />

        <move file="${file_1}" />
        <fail unless="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' is not exists." />
        <fail if="${file::exists(property::get-value('file_1'))}" message="${project::get-name()} - file '${file_1}' exists." />

        <loadfile file="${file_2}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <delete file="${file_2}" dir="${folder}" />
        <fail if="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' is exists." />
        <fail if="${file::exists(property::get-value('folder'))}" message="${project::get-name()} - folder '${folder}' is exists." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move file sample 3.</name>
      <base_directory>${path::get-temp-path()}</base_directory>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move file sample 4.">
        <property name="file_1" value="${path::get-temp-file-name()}" readonly="true" />

        <property name="expected_content" value="The file number one." />
        <echo file="${file_1}" message="${expected_content}" />

        <property name="file_2" value="${path::get-temp-file-name()}" readonly="true" />
        <property name="result" value="${file::get-length(file_2)}" />

        <copy file="${file_1}" tofile="${file_2}" />
        <property name="result" value="${result} ${file::get-length(file_2)}" />

        <copy file="${file_1}" tofile="${file_2}" overwrite="false" />
        <property name="result" value="${result} ${file::get-length(file_2)}" />

        <copy file="${file_1}" tofile="${file_2}" overwrite="${string::equal('0 0 0', result)}" />

        <loadfile file="${file_2}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <property name="expected_content" value="The file number two." />
        <echo file="${file_2}" message="${expected_content}" />

        <echo file="${file_1}" />
        <property name="result" value="${file::get-length(file_1)}" />

        <move file="${file_2}" tofile="${file_1}" />
        <property name="result" value="${result} ${file::get-length(file_1)}" />

        <move file="${file_2}" tofile="${file_1}" overwrite="false" />
        <property name="result" value="${result} ${file::get-length(file_1)}" />

        <move file="${file_2}" tofile="${file_1}" overwrite="${string::equal('0 0 0', result)}" />

        <loadfile file="${file_1}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <delete file="${file_1}" />
        <delete file="${file_2}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move file sample 4.</name>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move file sample 5." basedir="${path::get-temp-path()}">
        <property name="file" value="${path::get-temp-file-name()}" readonly="true" />
        <copy file="${file}" />
        <property name="folder" value="${path::get-temp-path()}" readonly="true" />
        <copy file="${file}" todir="${folder}" />
        <copy file="${file}" tofile="${file}" />
        <copy file="${file}" todir="${folder}" tofile="${file}" />

        <move file="${file}" />
        <move file="${file}" todir="${folder}" />
        <move file="${file}" tofile="${file}" />
        <move file="${file}" todir="${folder}" tofile="${file}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move file sample 5.</name>
      <base_directory>${path::get-temp-path()}</base_directory>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move file sample 6." basedir="${path::get-temp-path()}">
        <property name="folder" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" readonly="true" />
        <mkdir dir="${folder}" unless="${directory::exists(folder)}" />

        <property name="file_name" value="${hash::bytes-to-string(hash::crc32(folder))}" readonly="true" />
        <property name="file_1" value="${path::combine(folder, file_name)}" readonly="true" />
        <property name="file_2" value="${path::combine(project::get-base-directory(), file_name)}" readonly="true" />

        <property name="expected_content" value="The file number one." readonly="true" />
        <echo file="${file_1}" message="${expected_content}" />
        <copy file="${file_1}" todir="${project::get-base-directory()}" tofile="${file_2}" />

        <fail unless="${file::exists(file_1)}" message="${project::get-name()} - file '${file_1}' not exists." />
        <fail unless="${file::exists(file_2)}" message="${project::get-name()} - file '${file_2}' not exists." />

        <loadfile file="${file_2}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <delete file="${file_2}" />
        <fail if="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' is exists." />

        <move file="${file_1}" todir="${project::get-base-directory()}" tofile="${file_2}" />

        <fail if="${file::exists(property::get-value('file_1'))}" message="${project::get-name()} - file '${file_1}' is exists." />
        <fail unless="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' is not exists." />

        <loadfile file="${file_2}" property="content" />
        <fail unless="${string::equal(expected_content, content)}" message="${project::get-name()} - the value of content property '${content}' is not equal to the '${expected_content}'." />

        <delete file="${file_2}" dir="${folder}" />
        <fail if="${file::exists(property::get-value('file_2'))}" message="${project::get-name()} - file '${file_2}' is exists." />
        <fail if="${file::exists(property::get-value('folder'))}" message="${project::get-name()} - folder '${folder}' is exists." />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move file sample 6.</name>
      <base_directory>${path::get-temp-path()}</base_directory>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move folder sample 1." basedir="${path::get-temp-path()}">
        <property name="folder_1" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" readonly="true" />

        <foreach item="String" in="1 2 3" delim=" " property="line">
          <property name="line" value="${path::combine(folder_1, line)}" />
          <property name="line" value="${path::combine(folder_1, hash::bytes-to-string(hash::crc32(line)))}" />
          <move file="${path::get-temp-file-name()}" todir="${line}" />
        </foreach>

        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_1, 'directory', 'false'))}"
              message="${project::get-name()} no directories at the folder number one '${folder_1}'" />
        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_1, 'file', 'true'))}"
              message="${project::get-name()} no files at the folder number one '${folder_1}'" />

        <property name="folder_2" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(folder_1)))}" readonly="true" />
        <copy dir="${folder_1}" todir="${folder_2}" flatten="true" />

        <fail unless="${string::empty(directory::enumerate-file-system-entries(folder_2, 'directory', 'false'))}"
              message="${project::get-name()} there are directories at the folder number two '${folder_2}'" />
        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_2, 'file', 'false'))}"
              message="${project::get-name()} no files at the folder number two '${folder_2}'" />

        <property name="folder_3" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(folder_2)))}" readonly="true" />
        <move dir="${folder_1}" todir="${folder_3}" flatten="true" />

        <fail unless="${string::empty(directory::enumerate-file-system-entries(folder_3, 'directory', 'false'))}"
              message="${project::get-name()} there are directories at the folder number three '${folder_3}'" />
        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_3, 'file', 'false'))}"
              message="${project::get-name()} no files at the folder number three '${folder_3}'" />

        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_1, 'directory', 'false'))}"
              message="${project::get-name()} no directories at the folder number one '${folder_1}'" />
        <fail unless="${string::empty(directory::enumerate-file-system-entries(folder_1, 'file', 'true'))}"
              message="${project::get-name()} there are files at the folder number one '${folder_1}'" />

        <delete dir="${folder_1}" />
        <delete dir="${folder_2}" />
        <delete dir="${folder_3}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move folder sample 1.</name>
      <base_directory>${path::get-temp-path()}</base_directory>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move folder sample 2." basedir="${path::get-temp-path()}">
        <copy dir="${project::get-base-directory()}" todir="${project::get-base-directory()}" />
        <move dir="${project::get-base-directory()}" todir="${project::get-base-directory()}" />

        <copy dir="${project::get-base-directory()}" />
        <move dir="${project::get-base-directory()}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move folder sample 2.</name>
      <base_directory>${path::get-temp-path()}</base_directory>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move folder sample 3." basedir="${path::get-temp-path()}">
        <property name="folder_1" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" readonly="true" />
        <property name="folder_2" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(folder_1)))}" readonly="true" />
        <property name="folder_3" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(folder_2)))}" readonly="true" />

        <foreach item="String" in="1 2 3" delim=" " property="line">
          <move file="${path::get-temp-file-name()}" todir="${folder_1}" />
        </foreach>

        <copy dir="${folder_1}" todir="${folder_2}" />

        <property name="folder_1_path_of_entries_length" value="${string::get-length(directory::enumerate-file-system-entries(folder_1, 'all', 'true'))}" readonly="true" />
        <property name="folder_2_path_of_entries_length" value="${string::get-length(directory::enumerate-file-system-entries(folder_2, 'all', 'true'))}" readonly="true" />
        <fail unless="${string::equal(folder_1_path_of_entries_length, folder_2_path_of_entries_length)}" message="Content of folder one '${folder_1}' not equal to the folder two '${folder_2}'." />

        <move dir="${folder_2}" todir="${folder_3}" />

        <property name="folder_2_path_of_entries_length_new" value="${string::get-length(directory::enumerate-file-system-entries(folder_2, 'all', 'true'))}" readonly="true" />
        <property name="folder_3_path_of_entries_length" value="${string::get-length(directory::enumerate-file-system-entries(folder_3, 'all', 'true'))}" readonly="true" />

        <fail unless="${string::equal('0', folder_2_path_of_entries_length_new)}" message="Content of folder two '${folder_2}' is not empty." />
        <fail unless="${string::equal(folder_1_path_of_entries_length, folder_3_path_of_entries_length)}" message="Content of folder one '${folder_1}' not equal to the folder three '${folder_3}'." />

        <delete dir="${folder_1}" />
        <delete dir="${folder_2}" />
        <delete dir="${folder_3}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move folder sample 3.</name>
      <base_directory>${path::get-temp-path()}</base_directory>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="Copy/move folder sample 4." basedir="${path::get-temp-path()}">
        <property name="folder_1" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" readonly="true" />

        <foreach item="String" in="1 2 3" delim=" " property="line">
          <move file="${path::get-temp-file-name()}" todir="${folder_1}" />
          <property name="line" value="${path::combine(folder_1, line)}" />
          <property name="line" value="${path::combine(folder_1, hash::bytes-to-string(hash::crc32(line)))}" />
          <mkdir dir="${line}" unless="${directory::exists(line)}" />
        </foreach>

        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_1, 'directory', 'false'))}"
              message="${project::get-name()} no directories at the folder number one '${folder_1}'" />
        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_1, 'file', 'true'))}"
              message="${project::get-name()} no files at the folder number one '${folder_1}'" />

        <property name="folder_2" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(folder_1)))}" readonly="true" />
        <copy dir="${folder_1}" todir="${folder_2}" />

        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_2, 'directory', 'false'))}"
              message="${project::get-name()} no directories at the folder number one '${folder_2}'" />
        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_2, 'file', 'true'))}"
              message="${project::get-name()} no files at the folder number one '${folder_2}'" />

        <property name="folder_3" value="${path::combine(project::get-base-directory(), hash::bytes-to-string(hash::crc32(folder_2)))}" readonly="true" />
        <move dir="${folder_2}" todir="${folder_3}" includeemptydirs="false" />

        <fail unless="${string::empty(directory::enumerate-file-system-entries(folder_3, 'directory', 'false'))}"
              message="${project::get-name()} there are directories at the folder number two '${folder_3}'" />
        <fail if="${string::empty(directory::enumerate-file-system-entries(folder_3, 'file', 'false'))}"
              message="${project::get-name()} no files at the folder number two '${folder_3}'" />

        <delete dir="${folder_1}" />
        <delete dir="${folder_2}" />
        <delete dir="${folder_3}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>Copy/move folder sample 4.</name>
      <base_directory>${path::get-temp-path()}</base_directory>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="project-properties" default="some_target">
        <echo message="Base directory - '${project::get-base-directory()}'." level="Info" />
        <echo message="Build file - '${project::get-buildfile-path()}'." level="Info" />
        <echo message="Build file uri - '${project::get-buildfile-uri()}'." level="Info" />
        <echo message="Default target - '${project::get-default-target()}'." level="Info" />
        <echo message="Project name - '${project::get-name()}'." level="Info" />
        <echo message="Program version - '${program::version()}'." level="Info" failonerror="false" />
        <echo message="Current directory - '${program::current-directory()}'." level="Info" />
        <target name="some_target">
          <echo message="Hello from target '${target::get-current-target()}'." level="Info" />
        </target>
      </project>
      ]]></content>
      <return>1</return>
      <name>project-properties</name>
      <default>some_target</default>
      <target>some_target</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project default="target_with_call_sample">

        <target name="target_with_call_sample">
          <property name="input_parameter" value="Abc" />
          <call target="target_that_was_called"/>

          <property name="input_parameter" value="deF" />
          <call target="target_that_was_called" />
        </target>

        <target name="target_that_was_called">
          <echo message="Input parameter is next - '${input_parameter}'." />
        </target>

      </project>
      ]]></content>
      <return>1</return>
      <default>target_with_call_sample</default>
      <target>target_with_call_sample</target>
      <target>target_that_was_called</target>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project>
        <property
          name="path"
          value="${environment::get-folder-path('UserProfile')}"
          readonly="true" />
        <property
          name="normalized_path"
          value="${path::combine(path, '')}"
          readonly="true" />
        <property
          name="unix_like_path"
          value="${cygpath::get-unix-path(path)}"
          readonly="true" />
        <property
          name="windows_like_path"
          value="${cygpath::get-windows-path(path)}"
          readonly="true" />
        <choose>
          <when test="${platform::is-unix()}">
            <fail unless="${string::equal(unix_like_path, normalized_path)}" />
          </when>
          <when test="${platform::is-windows()}">
            <fail unless="${string::equal(windows_like_path, normalized_path)}" />
          </when>
          <otherwise>
            <fail />
          </otherwise>
        </choose>
      </project>
      ]]></content>
      <return>1</return>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project>
        <property
          name="this_target"
          value="${target::get-current-target()}"
          dynamic="true"
          readonly="true" />

        <target name="A">
          <property
            name="output"
            value="${this_target}"
            readonly="true" />
        </target>
        <target name="B" depends="A" if="false">
          <property name="output" value="" />
        </target>
        <target name="C" depends="A,B" if="false">
          <property name="output" value="" />
        </target>

        <call target="C" />

        <fail unless="${property::exists('output')}" message="Property 'output' not defined." />
        <fail unless="${string::equal('A', output)}" message="Value of 'output' property '${output}'' not equal to the 'A'." />
      </project>
      ]]></content>
      <return>1</return>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project>
        <choose>
          <when test="${platform::is-unix()}">
            <loadtasks module="libexample_of_the_module.so" failonerror="false" />
            <loadtasks module="libexample_of_the_module.dylib" unless="${task::exists('task_without_attributes')}" failonerror="false" />
          </when>
          <when test="${platform::is-windows()}">
            <loadtasks module="example_of_the_module.dll" failonerror="false" />
            <loadtasks module="libexample_of_the_module.dll" unless="${task::exists('task_without_attributes')}" failonerror="false" />
          </when>
        </choose>

        <fail if="${property::exists('content_of_the_task_from_script')}"
              message="Property 'content_of_the_task_from_script' should not exists at this point." />

        <task_without_attributes/>
        <fail unless="${property::exists('content_of_the_task_from_script')}" />
        <fail unless="${string::equal(hash::bytes-to-string(hash::crc32(content_of_the_task_from_script)), 'b02d3480')}"
              message="content_of_the_task_from_script -> '${hash::bytes-to-string(hash::crc32(content_of_the_task_from_script))}'." />

        <task_without_attributes />
        <fail unless="${string::equal(hash::bytes-to-string(hash::crc32(content_of_the_task_from_script)), 'b02d3480')}"
              message="content_of_the_task_from_script -> '${hash::bytes-to-string(hash::crc32(content_of_the_task_from_script))}'." />

        <task_without_attributes>
          <a /><b /><c />
        </task_without_attributes>
        <fail unless="${string::equal(hash::bytes-to-string(hash::crc32(content_of_the_task_from_script)), 'a76ec09e')}"
              message="content_of_the_task_from_script -> '${hash::bytes-to-string(hash::crc32(content_of_the_task_from_script))}'." />

        <fail if="${property::exists('property_from_the_task_number_two')}" />

        <this_task_with_attributes task_first_attribute="" task_second_attribute="" />
        <fail unless="${property::exists('property_from_the_task_number_two')}" />
        <fail unless="${string::equal(property_from_the_task_number_two, '')}"
              message="property_from_the_task_number_two -> '${property_from_the_task_number_two}'." />

        <this_task_with_attributes task_first_attribute="Copy" task_second_attribute="cat." />
        <fail unless="${property::exists('property_from_the_task_number_two')}" />
        <fail unless="${string::equal(property_from_the_task_number_two, 'Copycat.')}"
              message="property_from_the_task_number_two -> '${property_from_the_task_number_two}'." />

        <fail if="${property::exists('output_of_function')}" />

        <property name="output_of_function" value="${name_space_number_one::function()}" />
        <fail unless="${string::equal(output_of_function, 'You call function with out arguments.')}"
              message="output_of_function -> '${output_of_function}'." />

        <property name="output_of_function" value="${name_space_number_two::this_is_the_function_number_one()}" />
        <fail unless="${string::equal(output_of_function, 'You call function with variable count of the arguments. ')}"
              message="output_of_function -> '${output_of_function}'." />

        <property name="output_of_function" value="${name_space_number_two::this_is_the_function_number_one('a')}" />
        <fail unless="${string::equal(output_of_function, 'You call function with variable count of the arguments. a')}"
              message="output_of_function -> '${output_of_function}'." />

        <property name="output_of_function" value="${name_space_number_two::this_is_the_function_number_one('a', 'b')}" />
        <fail unless="${string::equal(output_of_function, 'You call function with variable count of the arguments. ab')}"
              message="output_of_function -> '${output_of_function}'." />

        <property name="output_of_function" value="${name_space_number_two::this_is_the_function_number_one('a', 'b', 'c')}" />
        <fail unless="${string::equal(output_of_function, 'You call function with variable count of the arguments. abc')}"
              message="output_of_function -> '${output_of_function}'." />

        <property name="output_of_function" value="${name_space_number_two::and_this_is_the_function_number_two('d', 'e')}" />
        <fail unless="${string::equal(output_of_function, 'You call function with two arguments. de')}"
              message="output_of_function -> '${output_of_function}'." />
        </project>
        ]]></content>
      <return>1</return>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project>
        <property name="input"
                  value="1 2.0 3.0.1" />
        <property name="version" />

        <foreach item="String" in="${input}" delim=" " property="current_version">
          <property name="version"
                    if="${version::less(version, current_version)}"
                    value="${current_version}" />
        </foreach>

        <fail unless="${string::equal(version, '3.0.1')}"
              message="version -> '${version}'." />
      </project>
      ]]></content>
      <return>1</return>
    </project_load_from_content>
    <project_load_from_content>
      <content>
        <![CDATA[
      <project>
        <property name="a" value="A:\" />
        <property name="c" value="${path::combine(a, b)}" />
      </project>
      ]]>
      </content>
      <return>0</return>
      <target_return>1</target_return>
    </project_load_from_content>
    <project_load_from_build_file>
      <file path="Chapter2/HelloWorld.build" crc32="50ba1555" />
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/CommandOptions.build" crc32="385b7756" />
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/CommandOptions.build" crc32="385b7756" />
      <return>1</return>
      <project_help>1</project_help>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/NAntSchema.build" crc32="6204ac6c" />
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/CircularChaos.build" crc32="511ecd8c" />
      <return>1</return>
      <target_return>0</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/IfElse.build" crc32="bbc2b7d8" />
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/IfElse.build" crc32="bbc2b7d8" />
      <return>1</return>
      <property name="ifelse" value="false" />
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/DynamicProperty.build" crc32="2f5d2af3" />
      <return>0</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/DynamicProperty.build" crc32="2f5d2af3" />
      <return>1</return>
      <property name="dynamic" value="false" />
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/DynamicProperty.build" crc32="2f5d2af3" />
      <return>1</return>
      <property name="dynamic" value="true" />
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/ReadOnlyProperty.build" crc32="2d3468cd" />
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/IfUnlessProperty.build" crc32="ca9b5ba8" />
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/IfUnlessProperty.build" crc32="ca9b5ba8" />
      <return>1</return>
      <property name="raining" value="false" />
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/IfUnlessProperty.build" crc32="ca9b5ba8" />
      <return>1</return>
      <property name="windy" value="false" />
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/IfUnlessProperty.build" crc32="ca9b5ba8" />
      <return>1</return>
      <property name="raining" value="false" />
      <property name="windy" value="false" />
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/FailureTest1.build" crc32="4f4e0880" />
      <content line="4"><![CDATA[<property name="project.onfailure" value="fail"/>]]></content>
      <return>1</return>
      <target_return>0</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/FailureTest2.build" crc32="f7778dae" />
      <content line="4"><![CDATA[<property name="project.onfailure" value="fail"/>]]></content>
      <return>1</return>
      <target_return>0</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/BuildSkeleton.build" crc32="0e08a623" />
      <NOTE><content line="5"><![CDATA[<property name="project.onfailure" value="fail" />]]></content></NOTE>
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/BuildSkeleton.build" crc32="0e08a623" />
      <return>1</return>
      <project_help>1</project_help>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/DeploySkeleton.build" crc32="1cde1839" />
      <NOTE><content line="5"><![CDATA[<property name="project.onfailure" value="fail" />]]></content></NOTE>
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter2/DeploySkeleton.build" crc32="1cde1839" />
      <return>1</return>
      <project_help>1</project_help>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter3/Folderchecker.build" crc32="4636345f" />
      <content line="3"><![CDATA[<property name="foldername" value="${tests_base_directory}" />]]></content>
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter3/Loadtasks.build" crc32="1330a0b5" />
      <return>0</return>
      <target_return>1</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter3/IfNot.build" crc32="9a8ed6a3" />
      <content line="3"><![CDATA[<if test="${string::equal('False', property::exists('project.name'))}">]]></content>
      <content line="5"><![CDATA[</if>]]></content>
      <return>0</return>
      <target_return>1</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter3/CopyFilterchain.build" blake2b="7b0795fcd477843597971b600532119ec49909dd" algorithm_parameter="160" crc32_1="0x64baba1" crc32_2="0xa1ab4b06" />
      <content line="3"><![CDATA[	<property name="input_file" value="${path::combine(tests_base_directory, 'Chapter3/template.txt')}" />]]></content>
      <content line="4"><![CDATA[	<fail unless="${string::equal('c28c22979f9913623e5b73cd815e3c288953d19d', file::get-checksum(input_file, 'blake2b', '160'))}"]]></content>
      <content line="5"><![CDATA[		message="Hash sum of file '${input_file}' not equal to the 'c28c22979f9913623e5b73cd815e3c288953d19d'." />]]></content>
      <content line="6"><![CDATA[	<property name="reference_file" value="${path::combine(tests_base_directory, 'Chapter3/specific.txt')}" />]]></content>
      <content line="7"><![CDATA[	<property name="output_file" value="${path::get-temp-file-name()}" />]]></content>
      <content line="8"><![CDATA[	<copy file="${input_file}" tofile="${output_file}" overwrite="true" />]]></content>
      <content line="9"><![CDATA[	<fail unless="${file::replace(output_file, '@DRIVELETTER@', 'D')}" message="Failed while call replace function." />]]></content>
      <content line="10"><![CDATA[	<fail unless="${string::equal(file::get-checksum(reference_file, 'blake2b', '160'), file::get-checksum(output_file, 'blake2b', '160'))}"]]></content>
      <content line="11"><![CDATA[		message="File '${reference_file}' not equal to the '${output_file}'." />]]></content>
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file><TODO />
      <file path="Chapter3/Asminfo.build" crc32="08adbdc5" />
      <return>0</return>
      <target_return>1</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter3/XmlPoke.build" crc32="f82f70da" />
      <return>0</return><TODO />
      <target_return>1</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter3/ScriptFunction.build" crc32="5770fd2d" />
      <return>0</return><TODO />
      <target_return>1</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter3/ScriptTarget.build" crc32="20aeb0d6" />
      <return>0</return><TODO />
      <target_return>1</target_return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter4/Transformer.Build.xml" crc32="c18db98a" />
      <return>1</return>
      <target_return>1</target_return>
      <content line="5"><![CDATA[ <property name="project.onfailure" value="fail"/>]]></content>
      <content line="7" />
      <content line="8" />
      <content line="9" />
      <TODO>Targets</TODO>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter4/ErrorHandlingExample.xml" crc32="79bbe18a" />
      <return>1</return>
      <target_return>0</target_return>
      <content line="5"><![CDATA[<property name="project.onfailure" value="GiveUp" />]]></content>
      <content line="17"><![CDATA[<property name="project.onfailure" value="CleanUp2" />]]></content>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter4/Transformer.Build.Refactored.xml" crc32="3afe9291" />
      <return>1</return>
      <target_return>1</target_return>
      <content line="5"><![CDATA[	<property name="project.onfailure" value="fail"/>]]></content>

      <content line="6"><![CDATA[	<property name="core.directory" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" />]]></content>
      <content line="7"><![CDATA[	<!--mkdir dir="${core.directory}" unless="${directory::exists(core.directory)}" /-->]]></content>

      <content line="15"><![CDATA[	<property name="vss.dbpath" value="${path::combine(path::get-temp-path(), 'srcsafe.ini')}"/>]]></content>

      <content line="18" />
      <content line="19" />
      <content line="20" />
    </project_load_from_build_file>
    <project_load_from_build_file>
      <file path="Chapter4/Transformer.Deploy.xml" crc32="b5e28ef4" />
      <return>1</return>
      <target_return>1</target_return>
      <content line="5"><![CDATA[	<property name="project.onfailure" value="fail"/>]]></content>

      <content line="6"><![CDATA[	<property name="core.directory" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" />]]></content>
      <content line="7"><![CDATA[	<!--mkdir dir="${core.directory}" unless="${directory::exists(core.directory)}" /-->]]></content>

      <content line="9"><![CDATA[	<property name="core.deploy" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::blake2b(datetime::now-utc())))}" />]]></content>
      <content line="10"><![CDATA[	<!--mkdir dir="${core.deploy}" unless="${directory::exists(core.deploy)}" /-->]]></content>

      <content line="11"><![CDATA[	<property name="core.environment" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::blake3(datetime::now-utc())))}" />]]></content>
      <content line="12"><![CDATA[	<!--mkdir dir="${core.environment}" unless="${directory::exists(core.environment)}" /-->]]></content>
    </project_load_from_build_file>
  </TestProject>
  <TestProgram>
    <program_get_properties>
      <input><![CDATA[
      <properties>
        <property name="property_name_1" value="property value" dynamic="true" overwrite="true" readonly="true" failonerror="true" verbose="true" />
        <property name="property_name_2" value="property value" dynamic="true" overwrite="true" readonly="true" failonerror="true" verbose="false" />
        <property name="property_name_3" value="property value" dynamic="true" overwrite="true" readonly="true" failonerror="false" verbose="true" />
        <property name="property_name_4" value="property value" dynamic="true" overwrite="true" readonly="true" failonerror="false" verbose="false" />
        <property name="property_name_5" value="property value" dynamic="true" overwrite="true" readonly="false" failonerror="true" verbose="true" />
        <property name="property_name_6" value="property value" dynamic="true" overwrite="true" readonly="false" failonerror="true" verbose="false" />
        <property name="property_name_7" value="property value" dynamic="true" overwrite="true" readonly="false" failonerror="false" verbose="true" />
        <property name="property_name_8" value="property value" dynamic="true" overwrite="true" readonly="false" failonerror="false" verbose="false" />
        <property name="property_name_9" value="property value" dynamic="true" overwrite="false" readonly="true" failonerror="true" verbose="true" />
        <property name="property_name_10" value="property value" dynamic="true" overwrite="false" readonly="true" failonerror="true" verbose="false" />
        <property name="property_name_11" value="property value" dynamic="true" overwrite="false" readonly="true" failonerror="false" verbose="true" />
        <property name="property_name_12" value="property value" dynamic="true" overwrite="false" readonly="true" failonerror="false" verbose="false" />
        <property name="property_name_13" value="property value" dynamic="true" overwrite="false" readonly="false" failonerror="true" verbose="true" />
        <property name="property_name_14" value="property value" dynamic="true" overwrite="false" readonly="false" failonerror="true" verbose="false" />
        <property name="property_name_15" value="property value" dynamic="true" overwrite="false" readonly="false" failonerror="false" verbose="true" />
        <property name="property_name_16" value="property value" dynamic="true" overwrite="false" readonly="false" failonerror="false" verbose="false" />
        <property name="property_name_17" value="property value" dynamic="false" overwrite="true" readonly="true" failonerror="true" verbose="true" />
        <property name="property_name_18" value="property value" dynamic="false" overwrite="true" readonly="true" failonerror="true" verbose="false" />
        <property name="property_name_19" value="property value" dynamic="false" overwrite="true" readonly="true" failonerror="false" verbose="true" />
        <property name="property_name_20" value="property value" dynamic="false" overwrite="true" readonly="true" failonerror="false" verbose="false" />
        <property name="property_name_21" value="property value" dynamic="false" overwrite="true" readonly="false" failonerror="true" verbose="true" />
        <property name="property_name_22" value="property value" dynamic="false" overwrite="true" readonly="false" failonerror="true" verbose="false" />
        <property name="property_name_23" value="property value" dynamic="false" overwrite="true" readonly="false" failonerror="false" verbose="true" />
        <property name="property_name_24" value="property value" dynamic="false" overwrite="true" readonly="false" failonerror="false" verbose="false" />
        <property name="property_name_25" value="property value" dynamic="false" overwrite="false" readonly="true" failonerror="true" verbose="true" />
        <property name="property_name_26" value="property value" dynamic="false" overwrite="false" readonly="true" failonerror="true" verbose="false" />
        <property name="property_name_27" value="property value" dynamic="false" overwrite="false" readonly="true" failonerror="false" verbose="true" />
        <property name="property_name_28" value="property value" dynamic="false" overwrite="false" readonly="true" failonerror="false" verbose="false" />
        <property name="property_name_29" value="property value" dynamic="false" overwrite="false" readonly="false" failonerror="true" verbose="true" />
        <property name="property_name_30" value="property value" dynamic="false" overwrite="false" readonly="false" failonerror="true" verbose="false" />
        <property name="property_name_31" value="property value" dynamic="false" overwrite="false" readonly="false" failonerror="false" verbose="true" />
        <property name="property_name_32" value="property value" dynamic="false" overwrite="false" readonly="false" failonerror="false" verbose="false" />
      </properties>
      ]]></input>
      <properties>
        <property name="property_name_1" value="property value" dynamic="true" readonly="true" />
        <property name="property_name_2" value="property value" dynamic="true" readonly="true" />
        <property name="property_name_3" value="property value" dynamic="true" readonly="true" />
        <property name="property_name_4" value="property value" dynamic="true" readonly="true" />
        <property name="property_name_5" value="property value" dynamic="true" readonly="false" />
        <property name="property_name_6" value="property value" dynamic="true" readonly="false" />
        <property name="property_name_7" value="property value" dynamic="true" readonly="false" />
        <property name="property_name_8" value="property value" dynamic="true" readonly="false" />
        <property name="property_name_9" value="property value" dynamic="true" readonly="true" />
        <property name="property_name_10" value="property value" dynamic="true" readonly="true" />
        <property name="property_name_11" value="property value" dynamic="true" readonly="true" />
        <property name="property_name_12" value="property value" dynamic="true" readonly="true" />
        <property name="property_name_13" value="property value" dynamic="true" readonly="false" />
        <property name="property_name_14" value="property value" dynamic="true" readonly="false" />
        <property name="property_name_15" value="property value" dynamic="true" readonly="false" />
        <property name="property_name_16" value="property value" dynamic="true" readonly="false" />
        <property name="property_name_17" value="property value" dynamic="false" readonly="true" />
        <property name="property_name_18" value="property value" dynamic="false" readonly="true" />
        <property name="property_name_19" value="property value" dynamic="false" readonly="true" />
        <property name="property_name_20" value="property value" dynamic="false" readonly="true" />
        <property name="property_name_21" value="property value" dynamic="false" readonly="false" />
        <property name="property_name_22" value="property value" dynamic="false" readonly="false" />
        <property name="property_name_23" value="property value" dynamic="false" readonly="false" />
        <property name="property_name_24" value="property value" dynamic="false" readonly="false" />
        <property name="property_name_25" value="property value" dynamic="false" readonly="true" />
        <property name="property_name_26" value="property value" dynamic="false" readonly="true" />
        <property name="property_name_27" value="property value" dynamic="false" readonly="true" />
        <property name="property_name_28" value="property value" dynamic="false" readonly="true" />
        <property name="property_name_29" value="property value" dynamic="false" readonly="false" />
        <property name="property_name_30" value="property value" dynamic="false" readonly="false" />
        <property name="property_name_31" value="property value" dynamic="false" readonly="false" />
        <property name="property_name_32" value="property value" dynamic="false" readonly="false" />
      </properties>
    </program_get_properties>
  </TestProgram>
  <TestProperty>
    <property_task>
      <record><![CDATA[name="0"]]></record>
      <record><![CDATA[name="1"]]></record>
      <record><![CDATA[name="2"]]></record>
      <record><![CDATA[name="3"]]></record>
      <record><![CDATA[name="4"]]></record>
      <record><![CDATA[name="5"]]></record>
      <record><![CDATA[name="6"]]></record>
      <record><![CDATA[name="7"]]></record>
      <record><![CDATA[name="8"]]></record>
      <record><![CDATA[name="9"]]></record>
      <record><![CDATA[name="A"]]></record>
      <record><![CDATA[name="B"]]></record>
      <record><![CDATA[name="C"]]></record>
      <record><![CDATA[name="D"]]></record>
      <record><![CDATA[name="E"]]></record>
      <record><![CDATA[name="F"]]></record>
      <record><![CDATA[name="G"]]></record>
      <record><![CDATA[name="H"]]></record>
      <record><![CDATA[name="I"]]></record>
      <record><![CDATA[name="J"]]></record>
      <record><![CDATA[name="K"]]></record>
      <record><![CDATA[name="L"]]></record>
      <record><![CDATA[name="M"]]></record>
      <record><![CDATA[name="N"]]></record>
      <record><![CDATA[name="O"]]></record>
      <record><![CDATA[name="P"]]></record>
      <record><![CDATA[name="Q"]]></record>
      <record><![CDATA[name="R"]]></record>
      <record><![CDATA[name="S"]]></record>
      <record><![CDATA[name="T"]]></record>
      <record><![CDATA[name="U"]]></record>
      <record><![CDATA[name="V"]]></record>
      <record><![CDATA[name="W"]]></record>
      <record><![CDATA[name="X"]]></record>
      <record><![CDATA[name="Y"]]></record>
      <record><![CDATA[name="Z"]]></record>
      <record><![CDATA[name="_"]]></record>
      <record><![CDATA[name="a"]]></record>
      <record><![CDATA[name="b"]]></record>
      <record><![CDATA[name="c"]]></record>
      <record><![CDATA[name="d"]]></record>
      <record><![CDATA[name="e"]]></record>
      <record><![CDATA[name="f"]]></record>
      <record><![CDATA[name="g"]]></record>
      <record><![CDATA[name="h"]]></record>
      <record><![CDATA[name="i"]]></record>
      <record><![CDATA[name="j"]]></record>
      <record><![CDATA[name="k"]]></record>
      <record><![CDATA[name="l"]]></record>
      <record><![CDATA[name="m"]]></record>
      <record><![CDATA[name="n"]]></record>
      <record><![CDATA[name="o"]]></record>
      <record><![CDATA[name="p"]]></record>
      <record><![CDATA[name="q"]]></record>
      <record><![CDATA[name="r"]]></record>
      <record><![CDATA[name="s"]]></record>
      <record><![CDATA[name="t"]]></record>
      <record><![CDATA[name="u"]]></record>
      <record><![CDATA[name="v"]]></record>
      <record><![CDATA[name="w"]]></record>
      <record><![CDATA[name="x"]]></record>
      <record><![CDATA[name="y"]]></record>
      <record><![CDATA[name="z"]]></record>
      <record><![CDATA[name="a--b"]]></record>
      <record><![CDATA[name="c-.d"]]></record>
      <record><![CDATA[name="e.-f"]]></record>
      <record><![CDATA[name="g..h"]]></record>
      <record><![CDATA[name="&#x100;&#x100;"]]></record>
      <record><![CDATA[name="&#x100;.&#x100;"]]></record>
      <return>1</return>
      <output_properties>
        <property name="0" />
        <property name="1" />
        <property name="2" />
        <property name="3" />
        <property name="4" />
        <property name="5" />
        <property name="6" />
        <property name="7" />
        <property name="8" />
        <property name="9" />
        <property name="A" />
        <property name="B" />
        <property name="C" />
        <property name="D" />
        <property name="E" />
        <property name="F" />
        <property name="G" />
        <property name="H" />
        <property name="I" />
        <property name="J" />
        <property name="K" />
        <property name="L" />
        <property name="M" />
        <property name="N" />
        <property name="O" />
        <property name="P" />
        <property name="Q" />
        <property name="R" />
        <property name="S" />
        <property name="T" />
        <property name="U" />
        <property name="V" />
        <property name="W" />
        <property name="X" />
        <property name="Y" />
        <property name="Z" />
        <property name="_" />
        <property name="a" />
        <property name="b" />
        <property name="c" />
        <property name="d" />
        <property name="e" />
        <property name="f" />
        <property name="g" />
        <property name="h" />
        <property name="i" />
        <property name="j" />
        <property name="k" />
        <property name="l" />
        <property name="m" />
        <property name="n" />
        <property name="o" />
        <property name="p" />
        <property name="q" />
        <property name="r" />
        <property name="s" />
        <property name="t" />
        <property name="u" />
        <property name="v" />
        <property name="w" />
        <property name="x" />
        <property name="y" />
        <property name="z" />
        <property name="a--b" />
        <property name="c-.d" />
        <property name="e.-f" />
        <property name="g..h" />
        <property name="&#x100;&#x100;" />
        <property name="&#x100;.&#x100;" />
      </output_properties>
    </property_task>
    <property_task>
      <record><![CDATA[name=""]]></record>
      <record><![CDATA[name="&#x0;"]]></record>
      <record><![CDATA[name="&#x1;"]]></record>
      <record><![CDATA[name="&#x2;"]]></record>
      <record><![CDATA[name="&#x3;"]]></record>
      <record><![CDATA[name="&#x4;"]]></record>
      <record><![CDATA[name="&#x5;"]]></record>
      <record><![CDATA[name="&#x6;"]]></record>
      <record><![CDATA[name="&#x7;"]]></record>
      <record><![CDATA[name="&#x8;"]]></record>
      <record><![CDATA[name="&#x9;"]]></record>
      <record><![CDATA[name="&#xa;"]]></record>
      <record><![CDATA[name="&#xb;"]]></record>
      <record><![CDATA[name="&#xc;"]]></record>
      <record><![CDATA[name="&#xd;"]]></record>
      <record><![CDATA[name="&#xe;"]]></record>
      <record><![CDATA[name="&#xf;"]]></record>
      <record><![CDATA[name="&#x10;"]]></record>
      <record><![CDATA[name="&#x11;"]]></record>
      <record><![CDATA[name="&#x12;"]]></record>
      <record><![CDATA[name="&#x13;"]]></record>
      <record><![CDATA[name="&#x14;"]]></record>
      <record><![CDATA[name="&#x15;"]]></record>
      <record><![CDATA[name="&#x16;"]]></record>
      <record><![CDATA[name="&#x17;"]]></record>
      <record><![CDATA[name="&#x18;"]]></record>
      <record><![CDATA[name="&#x19;"]]></record>
      <record><![CDATA[name="&#x1a;"]]></record>
      <record><![CDATA[name="&#x1b;"]]></record>
      <record><![CDATA[name="&#x1c;"]]></record>
      <record><![CDATA[name="&#x1d;"]]></record>
      <record><![CDATA[name="&#x1e;"]]></record>
      <record><![CDATA[name="&#x1f;"]]></record>
      <record><![CDATA[name=" "]]></record>
      <record><![CDATA[name="!"]]></record>
      <record><![CDATA[name="#"]]></record>
      <record><![CDATA[name="$"]]></record>
      <record><![CDATA[name="%"]]></record>
      <record><![CDATA[name="'"]]></record>
      <record><![CDATA[name="("]]></record>
      <record><![CDATA[name=")"]]></record>
      <record><![CDATA[name="*"]]></record>
      <record><![CDATA[name="+"]]></record>
      <record><![CDATA[name=","]]></record>
      <record><![CDATA[name="-"]]></record>
      <record><![CDATA[name="."]]></record>
      <record><![CDATA[name="/"]]></record>
      <record><![CDATA[name=":"]]></record>
      <record><![CDATA[name=";"]]></record>
      <record><![CDATA[name="<"]]></record>
      <record><![CDATA[name="&#x63c;"]]></record>
      <record><![CDATA[name="&gt;"]]></record>
      <record><![CDATA[name="="]]></record>
      <record><![CDATA[name=">"]]></record>
      <record><![CDATA[name="&lt;"]]></record>
      <record><![CDATA[name="?"]]></record>
      <record><![CDATA[name="@"]]></record>
      <record><![CDATA[name="["]]></record>
      <record><![CDATA[name="\"]]></record>
      <record><![CDATA[name="]"]]></record>
      <record><![CDATA[name="^"]]></record>
      <record><![CDATA[name="`"]]></record>
      <record><![CDATA[name="{"]]></record>
      <record><![CDATA[name="|"]]></record>
      <record><![CDATA[name="}"]]></record>
      <record><![CDATA[name="~"]]></record>
      <record><![CDATA[name="--"]]></record>
      <record><![CDATA[name="-."]]></record>
      <record><![CDATA[name=".-"]]></record>
      <record><![CDATA[name=".."]]></record>
      <record><![CDATA[name="-a-b"]]></record>
      <record><![CDATA[name="c-d."]]></record>
      <record><![CDATA[name=".e-f"]]></record>
      <record><![CDATA[name="g.h-"]]></record>
      <record><![CDATA[name="&#x100;.&#x100;-"]]></record>
      <record><![CDATA[name="&#x100;.&#x100;."]]></record>
      <record><![CDATA[name="-&#x100;.&#x100;-"]]></record>
      <record><![CDATA[name=".&#x100;.&#x100;."]]></record>
      <record><![CDATA[name="-&#x100;.&#x100;"]]></record>
      <record><![CDATA[name=".&#x100;.&#x100;"]]></record>
      <return>0</return>
    </property_task>
    <property_task>
      <properties>
        <property name="property_name" value="property value" dynamic="false" overwrite="false" readonly="true" failonerror="false" verbose="false" />
      </properties>
      <record><![CDATA[name="debug" value="true"]]></record>
      <return>1</return>
      <output_properties>
        <property name="property_name" value="property value" dynamic="false" overwrite="false" readonly="true" failonerror="false" verbose="false" />
        <property name="debug" value="true" dynamic="false" overwrite="true" readonly="false" failonerror="true" verbose="false" />
      </output_properties>
    </property_task>
  </TestProperty>
  <TestStringUnit>
    <string_get_length>
      <input></input>
      <return></return>
    </string_get_length>
    <string_get_length>
      <input> </input>
      <return>1</return>
    </string_get_length>
    <string_get_length>
      <input>  </input>
      <return>2</return>
    </string_get_length>
    <string_get_length>
      <input>&#x7e;</input>
      <return>1</return>
    </string_get_length>
    <string_get_length>
      <input>&#xa1;</input>
      <return>1</return>
    </string_get_length>
    <string_get_length>
      <input>&#xa1;&#x07ff;</input>
      <return>2</return>
    </string_get_length>
    <string_get_length>
      <input>&#xa1;&#x08a0;</input>
      <return>2</return>
    </string_get_length>
    <string_get_length>
      <input>&#x08a0;</input>
      <return>1</return>
    </string_get_length>
    <string_get_length>
      <input>&#x08a0;&#xffee;</input>
      <return>2</return>
    </string_get_length>
    <string_get_length>
      <input>&#x627;&#x644;&#x639;&#x631;&#x628;&#x64a;&#x629;</input>
      <return>7</return>
    </string_get_length>
    <string_get_length>
      <input>&#xd55c;&#xad6d;&#xc5b4;</input>
      <return>3</return>
    </string_get_length>
    <string_get_length>
      <input>&#xa188;&#xa320;&#xa071;&#xa0b7;&#x20;&#x28;&#xa34f;&#xa278;&#xa3d3;&#xa0b1;&#xa1ed;&#xa27c;&#xa1e9;&#x29;</input>
      <return>14</return>
    </string_get_length>
    <string_index_of_value>
      <input></input>
      <value></value>
      <step>1</step>
      <return>-1</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>""</input>
      <value>""</value>
      <step>1</step>
      <return>0</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>123</input>
      <value>3</value>
      <step>1</step>
      <return>2</return>
    </string_index_of_value>
    <string_index_of_value>
      <input></input>
      <value></value>
      <step>-1</step>
      <return>-1</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>""</input>
      <value>""</value>
      <step>-1</step>
      <return>0</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>123</input>
      <value>3</value>
      <step>-1</step>
      <return>2</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>123</input>
      <value>1</value>
      <step>-1</step>
      <return>0</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>&#x08a0;&#xffee;</input>
      <value>&#xffee;</value>
      <step>1</step>
      <return>1</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>&#x627;&#x644;&#x639;&#x631;&#x628;&#x64a;&#x629;</input>
      <value>&#x628;</value>
      <step>1</step>
      <return>4</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>&#xd55c;&#xad6d;&#xc5b4;</input>
      <value>&#xad6d;</value>
      <step>1</step>
      <return>1</return>
    </string_index_of_value>
    <string_index_of_value>
      <input>&#xa188;&#xa320;&#xa071;&#xa0b7;&#x20;&#x28;&#xa34f;&#xa278;&#xa3d3;&#xa0b1;&#xa1ed;&#xa27c;&#xa1e9;&#x29;</input>
      <value>&#xa1ed;</value>
      <step>1</step>
      <return>10</return>
    </string_index_of_value>
    <string_index_of_any>
      <input>&#x627;&#x644;&#x639;&#x631;&#x628;&#x64a;&#x629;</input>
      <value>&#x629;&#x64a;&#x628;</value>
      <return>4</return>
    </string_index_of_any>
    <string_index_of_any>
      <input>&#xd55c;&#xad6d;&#xc5b4;</input>
      <value>&#xc5b4;&#xad6d;</value>
      <return>1</return>
    </string_index_of_any>
    <string_index_of_any>
      <input>&#xa188;&#xa320;&#xa071;&#xa0b7;&#x20;&#x28;&#xa34f;&#xa278;&#xa3d3;&#xa0b1;&#xa1ed;&#xa27c;&#xa1e9;&#x29;</input>
      <value>&#x29;&#xa1ed;&#xa1e9;</value>
      <return>10</return>
    </string_index_of_any>
    <string_last_index_of_any>
      <input>&#x627;&#x644;&#x639;&#x631;&#x628;&#x64a;&#x629;</input>
      <value>&#x629;&#x64a;&#x628;</value>
      <return>6</return>
    </string_last_index_of_any>
    <string_last_index_of_any>
      <input>&#xd55c;&#xad6d;&#xc5b4;</input>
      <value>&#xc5b4;&#xad6d;</value>
      <return>2</return>
    </string_last_index_of_any>
    <string_last_index_of_any>
      <input>&#xa188;&#xa320;&#xa071;&#xa0b7;&#x20;&#x28;&#xa34f;&#xa278;&#xa3d3;&#xa0b1;&#xa1ed;&#xa27c;&#xa1e9;&#x29;</input>
      <value>&#xa1e9;&#xa1ed;&#x29;</value>
      <return>13</return>
    </string_last_index_of_any>
    <string_pad>
      <input></input>
      <value> </value>
      <length>1</length>
      <return>1</return>
      <output> </output>
      <side>right</side>
    </string_pad>
    <string_replace>
      <input></input>
      <to_be_replaced></to_be_replaced>
      <by_replacement></by_replacement>
      <output></output>
      <return>0</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>b</to_be_replaced>
      <by_replacement>ABC</by_replacement>
      <output>aABCc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>bc1</to_be_replaced>
      <by_replacement></by_replacement>
      <output>a23</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>bc1</to_be_replaced>
      <by_replacement>b01</by_replacement>
      <output>ab0123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>bc1</to_be_replaced>
      <by_replacement>01</by_replacement>
      <output>a0123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement></by_replacement>
      <output>abc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement>4</by_replacement>
      <output>abc4</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement>456</by_replacement>
      <output>abc456</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement>123</by_replacement>
      <output>abc123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement>123456</by_replacement>
      <output>abc123456</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>3</to_be_replaced>
      <by_replacement>1</by_replacement>
      <output>abc121</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>3</to_be_replaced>
      <by_replacement>3</by_replacement>
      <output>abc123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>abc</to_be_replaced>
      <by_replacement>123</by_replacement>
      <output>123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>a</to_be_replaced>
      <by_replacement>1</by_replacement>
      <output>1bc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>a</to_be_replaced>
      <by_replacement></by_replacement>
      <output>bc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>a</to_be_replaced>
      <by_replacement>ABCa</by_replacement>
      <output>ABCabc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>a</to_be_replaced>
      <by_replacement>a</by_replacement>
      <output>abc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input><![CDATA[
Pinging 127.0.0.1 with 32 bytes of data:
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128

Ping statistics for 127.0.0.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms
        ]]>
      </input>
      <to_be_replaced>&#xA;</to_be_replaced>
      <by_replacement>&#xA;[Info]: </by_replacement>
      <output><![CDATA[
[Info]: Pinging 127.0.0.1 with 32 bytes of data:
[Info]: Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
[Info]: Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
[Info]: Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
[Info]: Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
[Info]: 
[Info]: Ping statistics for 127.0.0.1:
[Info]:     Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
[Info]: Approximate round trip times in milli-seconds:
[Info]:     Minimum = 0ms, Maximum = 0ms, Average = 0ms
[Info]:         ]]>
      </output>
      <return>1</return>
    </string_replace>
    <string_starts_with input="" value="" return="false" />
    <string_starts_with input="" value="A" return="false" />
    <string_starts_with input=" " value=" " return="true" />
    <string_starts_with input="AB" value="CD" return="false" />
    <string_starts_with input="ABCD" value="AB" return="true" />
    <string_transform_to_case>
      <input></input>
      <letter_case></letter_case>
      <output></output>
      <return></return>
    </string_transform_to_case>
    <string_transform_to_case>
      <input>Abc</input>
      <letter_case>upper</letter_case>
      <output>ABC</output>
      <return>1</return>
    </string_transform_to_case>
    <string_transform_to_case>
      <input>ABC</input>
      <letter_case>upper</letter_case>
      <output>ABC</output>
      <return>1</return>
    </string_transform_to_case>
    <string_transform_to_case>
      <input>Abc</input>
      <letter_case>lower</letter_case>
      <output>abc</output>
      <return>1</return>
    </string_transform_to_case>
    <string_transform_to_case>
      <input>ABC</input>
      <letter_case>lower</letter_case>
      <output>abc</output>
      <return>1</return>
    </string_transform_to_case>
    <string_trim>
      <input></input>
      <input_length></input_length>
      <mode>all</mode>
      <output></output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> </input>
      <input_length>1</input_length>
      <mode>all</mode>
      <output></output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc </input>
      <input_length>5</input_length>
      <mode>all</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc</input>
      <input_length>4</input_length>
      <mode>all</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc </input>
      <input_length>4</input_length>
      <mode>all</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc</input>
      <input_length>3</input_length>
      <mode>all</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>.txt</input>
      <input_length>4</input_length>
      <mode>end</mode>
      <output>.txt</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc </input>
      <input_length>5</input_length>
      <mode>start</mode>
      <output>abc </output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc</input>
      <input_length>4</input_length>
      <mode>start</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc </input>
      <input_length>4</input_length>
      <mode>start</mode>
      <output>abc </output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc</input>
      <input_length>3</input_length>
      <mode>start</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> </input>
      <input_length>1</input_length>
      <mode>end</mode>
      <output></output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>.txt</input>
      <input_length>4</input_length>
      <mode>end</mode>
      <output>.txt</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc </input>
      <input_length>5</input_length>
      <mode>end</mode>
      <output> abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc</input>
      <input_length>4</input_length>
      <mode>end</mode>
      <output> abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc </input>
      <input_length>4</input_length>
      <mode>end</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc</input>
      <input_length>3</input_length>
      <mode>end</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abcd</input>
      <input_length>3</input_length>
      <mode>end</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc d</input>
      <input_length>4</input_length>
      <mode>end</mode>
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <char_to_case input="" upper="" lower="" />
    <char_to_case input="0" upper="0" lower="0" />
    <char_to_case input="1" upper="1" lower="1" />
    <char_to_case input="2" upper="2" lower="2" />
    <char_to_case input="3" upper="3" lower="3" />
    <char_to_case input="4" upper="4" lower="4" />
    <char_to_case input="5" upper="5" lower="5" />
    <char_to_case input="6" upper="6" lower="6" />
    <char_to_case input="7" upper="7" lower="7" />
    <char_to_case input="8" upper="8" lower="8" />
    <char_to_case input="9" upper="9" lower="9" />
    <char_to_case input="10" upper="10" lower="10" />
    <char_to_case input="11" upper="11" lower="11" />
    <char_to_case input="12" upper="12" lower="12" />
    <char_to_case input="13" upper="13" lower="13" />
    <char_to_case input="14" upper="14" lower="14" />
    <char_to_case input="15" upper="15" lower="15" />
    <char_to_case input="16" upper="16" lower="16" />
    <char_to_case input="17" upper="17" lower="17" />
    <char_to_case input="18" upper="18" lower="18" />
    <char_to_case input="19" upper="19" lower="19" />
    <char_to_case input="20" upper="20" lower="20" />
    <char_to_case input="21" upper="21" lower="21" />
    <char_to_case input="22" upper="22" lower="22" />
    <char_to_case input="23" upper="23" lower="23" />
    <char_to_case input="24" upper="24" lower="24" />
    <char_to_case input="25" upper="25" lower="25" />
    <char_to_case input="26" upper="26" lower="26" />
    <char_to_case input="27" upper="27" lower="27" />
    <char_to_case input="28" upper="28" lower="28" />
    <char_to_case input="29" upper="29" lower="29" />
    <char_to_case input="30" upper="30" lower="30" />
    <char_to_case input="31" upper="31" lower="31" />
    <char_to_case input="32" upper="32" lower="32" />
    <char_to_case input="33" upper="33" lower="33" />
    <char_to_case input="34" upper="34" lower="34" />
    <char_to_case input="35" upper="35" lower="35" />
    <char_to_case input="36" upper="36" lower="36" />
    <char_to_case input="37" upper="37" lower="37" />
    <char_to_case input="38" upper="38" lower="38" />
    <char_to_case input="39" upper="39" lower="39" />
    <char_to_case input="40" upper="40" lower="40" />
    <char_to_case input="41" upper="41" lower="41" />
    <char_to_case input="42" upper="42" lower="42" />
    <char_to_case input="43" upper="43" lower="43" />
    <char_to_case input="44" upper="44" lower="44" />
    <char_to_case input="45" upper="45" lower="45" />
    <char_to_case input="46" upper="46" lower="46" />
    <char_to_case input="47" upper="47" lower="47" />
    <char_to_case input="48" upper="48" lower="48" />
    <char_to_case input="49" upper="49" lower="49" />
    <char_to_case input="50" upper="50" lower="50" />
    <char_to_case input="51" upper="51" lower="51" />
    <char_to_case input="52" upper="52" lower="52" />
    <char_to_case input="53" upper="53" lower="53" />
    <char_to_case input="54" upper="54" lower="54" />
    <char_to_case input="55" upper="55" lower="55" />
    <char_to_case input="56" upper="56" lower="56" />
    <char_to_case input="57" upper="57" lower="57" />
    <char_to_case input="58" upper="58" lower="58" />
    <char_to_case input="59" upper="59" lower="59" />
    <char_to_case input="60" upper="60" lower="60" />
    <char_to_case input="61" upper="61" lower="61" />
    <char_to_case input="62" upper="62" lower="62" />
    <char_to_case input="63" upper="63" lower="63" />
    <char_to_case input="64" upper="64" lower="64" />
    <char_to_case input="65" upper="65" lower="97" />
    <char_to_case input="66" upper="66" lower="98" />
    <char_to_case input="67" upper="67" lower="99" />
    <char_to_case input="68" upper="68" lower="100" />
    <char_to_case input="69" upper="69" lower="101" />
    <char_to_case input="70" upper="70" lower="102" />
    <char_to_case input="71" upper="71" lower="103" />
    <char_to_case input="72" upper="72" lower="104" />
    <char_to_case input="73" upper="73" lower="105" />
    <char_to_case input="74" upper="74" lower="106" />
    <char_to_case input="75" upper="75" lower="107" />
    <char_to_case input="76" upper="76" lower="108" />
    <char_to_case input="77" upper="77" lower="109" />
    <char_to_case input="78" upper="78" lower="110" />
    <char_to_case input="79" upper="79" lower="111" />
    <char_to_case input="80" upper="80" lower="112" />
    <char_to_case input="81" upper="81" lower="113" />
    <char_to_case input="82" upper="82" lower="114" />
    <char_to_case input="83" upper="83" lower="115" />
    <char_to_case input="84" upper="84" lower="116" />
    <char_to_case input="85" upper="85" lower="117" />
    <char_to_case input="86" upper="86" lower="118" />
    <char_to_case input="87" upper="87" lower="119" />
    <char_to_case input="88" upper="88" lower="120" />
    <char_to_case input="89" upper="89" lower="121" />
    <char_to_case input="90" upper="90" lower="122" />
    <char_to_case input="91" upper="91" lower="91" />
    <char_to_case input="92" upper="92" lower="92" />
    <char_to_case input="93" upper="93" lower="93" />
    <char_to_case input="94" upper="94" lower="94" />
    <char_to_case input="95" upper="95" lower="95" />
    <char_to_case input="96" upper="96" lower="96" />
    <char_to_case input="97" upper="65" lower="97" />
    <char_to_case input="98" upper="66" lower="98" />
    <char_to_case input="99" upper="67" lower="99" />
    <char_to_case input="100" upper="68" lower="100" />
    <char_to_case input="101" upper="69" lower="101" />
    <char_to_case input="102" upper="70" lower="102" />
    <char_to_case input="103" upper="71" lower="103" />
    <char_to_case input="104" upper="72" lower="104" />
    <char_to_case input="105" upper="73" lower="105" />
    <char_to_case input="106" upper="74" lower="106" />
    <char_to_case input="107" upper="75" lower="107" />
    <char_to_case input="108" upper="76" lower="108" />
    <char_to_case input="109" upper="77" lower="109" />
    <char_to_case input="110" upper="78" lower="110" />
    <char_to_case input="111" upper="79" lower="111" />
    <char_to_case input="112" upper="80" lower="112" />
    <char_to_case input="113" upper="81" lower="113" />
    <char_to_case input="114" upper="82" lower="114" />
    <char_to_case input="115" upper="83" lower="115" />
    <char_to_case input="116" upper="84" lower="116" />
    <char_to_case input="117" upper="85" lower="117" />
    <char_to_case input="118" upper="86" lower="118" />
    <char_to_case input="119" upper="87" lower="119" />
    <char_to_case input="120" upper="88" lower="120" />
    <char_to_case input="121" upper="89" lower="121" />
    <char_to_case input="122" upper="90" lower="122" />
    <char_to_case input="123" upper="123" lower="123" />
    <char_to_case input="124" upper="124" lower="124" />
    <char_to_case input="125" upper="125" lower="125" />
    <char_to_case input="126" upper="126" lower="126" />
    <char_to_case input="127" upper="127" lower="127" />
    <char_to_case input="128" upper="128" lower="128" />
    <char_to_case input="129" upper="129" lower="129" />
    <char_to_case input="130" upper="130" lower="130" />
    <char_to_case input="131" upper="131" lower="131" />
    <char_to_case input="132" upper="132" lower="132" />
    <char_to_case input="133" upper="133" lower="133" />
    <char_to_case input="134" upper="134" lower="134" />
    <char_to_case input="135" upper="135" lower="135" />
    <char_to_case input="136" upper="136" lower="136" />
    <char_to_case input="137" upper="137" lower="137" />
    <char_to_case input="138" upper="138" lower="138" />
    <char_to_case input="139" upper="139" lower="139" />
    <char_to_case input="140" upper="140" lower="140" />
    <char_to_case input="141" upper="141" lower="141" />
    <char_to_case input="142" upper="142" lower="142" />
    <char_to_case input="143" upper="143" lower="143" />
    <char_to_case input="144" upper="144" lower="144" />
    <char_to_case input="145" upper="145" lower="145" />
    <char_to_case input="146" upper="146" lower="146" />
    <char_to_case input="147" upper="147" lower="147" />
    <char_to_case input="148" upper="148" lower="148" />
    <char_to_case input="149" upper="149" lower="149" />
    <char_to_case input="150" upper="150" lower="150" />
    <char_to_case input="151" upper="151" lower="151" />
    <char_to_case input="152" upper="152" lower="152" />
    <char_to_case input="153" upper="153" lower="153" />
    <char_to_case input="154" upper="154" lower="154" />
    <char_to_case input="155" upper="155" lower="155" />
    <char_to_case input="156" upper="156" lower="156" />
    <char_to_case input="157" upper="157" lower="157" />
    <char_to_case input="158" upper="158" lower="158" />
    <char_to_case input="159" upper="159" lower="159" />
    <char_to_case input="160" upper="160" lower="160" />
    <char_to_case input="161" upper="161" lower="161" />
    <char_to_case input="162" upper="162" lower="162" />
    <char_to_case input="163" upper="163" lower="163" />
    <char_to_case input="164" upper="164" lower="164" />
    <char_to_case input="165" upper="165" lower="165" />
    <char_to_case input="166" upper="166" lower="166" />
    <char_to_case input="167" upper="167" lower="167" />
    <char_to_case input="168" upper="168" lower="168" />
    <char_to_case input="169" upper="169" lower="169" />
    <char_to_case input="170" upper="170" lower="170" />
    <char_to_case input="171" upper="171" lower="171" />
    <char_to_case input="172" upper="172" lower="172" />
    <char_to_case input="173" upper="173" lower="173" />
    <char_to_case input="174" upper="174" lower="174" />
    <char_to_case input="175" upper="175" lower="175" />
    <char_to_case input="176" upper="176" lower="176" />
    <char_to_case input="177" upper="177" lower="177" />
    <char_to_case input="178" upper="178" lower="178" />
    <char_to_case input="179" upper="179" lower="179" />
    <char_to_case input="180" upper="180" lower="180" />
    <char_to_case input="181" upper="924" lower="181" />
    <char_to_case input="182" upper="182" lower="182" />
    <char_to_case input="183" upper="183" lower="183" />
    <char_to_case input="184" upper="184" lower="184" />
    <char_to_case input="185" upper="185" lower="185" />
    <char_to_case input="186" upper="186" lower="186" />
    <char_to_case input="187" upper="187" lower="187" />
    <char_to_case input="188" upper="188" lower="188" />
    <char_to_case input="189" upper="189" lower="189" />
    <char_to_case input="190" upper="190" lower="190" />
    <char_to_case input="191" upper="191" lower="191" />
    <char_to_case input="192" upper="192" lower="224" />
    <char_to_case input="193" upper="193" lower="225" />
    <char_to_case input="194" upper="194" lower="226" />
    <char_to_case input="195" upper="195" lower="227" />
    <char_to_case input="196" upper="196" lower="228" />
    <char_to_case input="197" upper="197" lower="229" />
    <char_to_case input="198" upper="198" lower="230" />
    <char_to_case input="199" upper="199" lower="231" />
    <char_to_case input="200" upper="200" lower="232" />
    <char_to_case input="201" upper="201" lower="233" />
    <char_to_case input="202" upper="202" lower="234" />
    <char_to_case input="203" upper="203" lower="235" />
    <char_to_case input="204" upper="204" lower="236" />
    <char_to_case input="205" upper="205" lower="237" />
    <char_to_case input="206" upper="206" lower="238" />
    <char_to_case input="207" upper="207" lower="239" />
    <char_to_case input="208" upper="208" lower="240" />
    <char_to_case input="209" upper="209" lower="241" />
    <char_to_case input="210" upper="210" lower="242" />
    <char_to_case input="211" upper="211" lower="243" />
    <char_to_case input="212" upper="212" lower="244" />
    <char_to_case input="213" upper="213" lower="245" />
    <char_to_case input="214" upper="214" lower="246" />
    <char_to_case input="215" upper="215" lower="215" />
    <char_to_case input="216" upper="216" lower="248" />
    <char_to_case input="217" upper="217" lower="249" />
    <char_to_case input="218" upper="218" lower="250" />
    <char_to_case input="219" upper="219" lower="251" />
    <char_to_case input="220" upper="220" lower="252" />
    <char_to_case input="221" upper="221" lower="253" />
    <char_to_case input="222" upper="222" lower="254" />
    <char_to_case input="223" upper="223" lower="223" />
    <char_to_case input="224" upper="192" lower="224" />
    <char_to_case input="225" upper="193" lower="225" />
    <char_to_case input="226" upper="194" lower="226" />
    <char_to_case input="227" upper="195" lower="227" />
    <char_to_case input="228" upper="196" lower="228" />
    <char_to_case input="229" upper="197" lower="229" />
    <char_to_case input="230" upper="198" lower="230" />
    <char_to_case input="231" upper="199" lower="231" />
    <char_to_case input="232" upper="200" lower="232" />
    <char_to_case input="233" upper="201" lower="233" />
    <char_to_case input="234" upper="202" lower="234" />
    <char_to_case input="235" upper="203" lower="235" />
    <char_to_case input="236" upper="204" lower="236" />
    <char_to_case input="237" upper="205" lower="237" />
    <char_to_case input="238" upper="206" lower="238" />
    <char_to_case input="239" upper="207" lower="239" />
    <char_to_case input="240" upper="208" lower="240" />
    <char_to_case input="241" upper="209" lower="241" />
    <char_to_case input="242" upper="210" lower="242" />
    <char_to_case input="243" upper="211" lower="243" />
    <char_to_case input="244" upper="212" lower="244" />
    <char_to_case input="245" upper="213" lower="245" />
    <char_to_case input="246" upper="214" lower="246" />
    <char_to_case input="247" upper="247" lower="247" />
    <char_to_case input="248" upper="216" lower="248" />
    <char_to_case input="249" upper="217" lower="249" />
    <char_to_case input="250" upper="218" lower="250" />
    <char_to_case input="251" upper="219" lower="251" />
    <char_to_case input="252" upper="220" lower="252" />
    <char_to_case input="253" upper="221" lower="253" />
    <char_to_case input="254" upper="222" lower="254" />
    <char_to_case input="255" upper="376" lower="255" />
    <char_to_case input="256" upper="256" lower="257" />
    <char_to_case input="257" upper="256" lower="257" />
    <char_to_case input="258" upper="258" lower="259" />
    <char_to_case input="259" upper="258" lower="259" />
    <char_to_case input="260" upper="260" lower="261" />
    <char_to_case input="261" upper="260" lower="261" />
    <char_to_case input="262" upper="262" lower="263" />
    <char_to_case input="263" upper="262" lower="263" />
    <char_to_case input="264" upper="264" lower="265" />
    <char_to_case input="265" upper="264" lower="265" />
    <char_to_case input="266" upper="266" lower="267" />
    <char_to_case input="267" upper="266" lower="267" />
    <char_to_case input="268" upper="268" lower="269" />
    <char_to_case input="269" upper="268" lower="269" />
    <char_to_case input="270" upper="270" lower="271" />
    <char_to_case input="271" upper="270" lower="271" />
    <char_to_case input="272" upper="272" lower="273" />
    <char_to_case input="273" upper="272" lower="273" />
    <char_to_case input="274" upper="274" lower="275" />
    <char_to_case input="275" upper="274" lower="275" />
    <char_to_case input="276" upper="276" lower="277" />
    <char_to_case input="277" upper="276" lower="277" />
    <char_to_case input="278" upper="278" lower="279" />
    <char_to_case input="279" upper="278" lower="279" />
    <char_to_case input="280" upper="280" lower="281" />
    <char_to_case input="281" upper="280" lower="281" />
    <char_to_case input="282" upper="282" lower="283" />
    <char_to_case input="283" upper="282" lower="283" />
    <char_to_case input="284" upper="284" lower="285" />
    <char_to_case input="285" upper="284" lower="285" />
    <char_to_case input="286" upper="286" lower="287" />
    <char_to_case input="287" upper="286" lower="287" />
    <char_to_case input="288" upper="288" lower="289" />
    <char_to_case input="289" upper="288" lower="289" />
    <char_to_case input="290" upper="290" lower="291" />
    <char_to_case input="291" upper="290" lower="291" />
    <char_to_case input="292" upper="292" lower="293" />
    <char_to_case input="293" upper="292" lower="293" />
    <char_to_case input="294" upper="294" lower="295" />
    <char_to_case input="295" upper="294" lower="295" />
    <char_to_case input="296" upper="296" lower="297" />
    <char_to_case input="297" upper="296" lower="297" />
    <char_to_case input="298" upper="298" lower="299" />
    <char_to_case input="299" upper="298" lower="299" />
    <char_to_case input="300" upper="300" lower="301" />
    <char_to_case input="301" upper="300" lower="301" />
    <char_to_case input="302" upper="302" lower="303" />
    <char_to_case input="303" upper="302" lower="303" />
    <char_to_case input="304" upper="304" lower="105" />
    <char_to_case input="305" upper="73" lower="305" />
    <char_to_case input="306" upper="306" lower="307" />
    <char_to_case input="307" upper="306" lower="307" />
    <char_to_case input="308" upper="308" lower="309" />
    <char_to_case input="309" upper="308" lower="309" />
    <char_to_case input="310" upper="310" lower="311" />
    <char_to_case input="311" upper="310" lower="311" />
    <char_to_case input="313" upper="313" lower="314" />
    <char_to_case input="314" upper="313" lower="314" />
    <char_to_case input="315" upper="315" lower="316" />
    <char_to_case input="316" upper="315" lower="316" />
    <char_to_case input="317" upper="317" lower="318" />
    <char_to_case input="318" upper="317" lower="318" />
    <char_to_case input="319" upper="319" lower="320" />
    <char_to_case input="320" upper="319" lower="320" />
    <char_to_case input="321" upper="321" lower="322" />
    <char_to_case input="322" upper="321" lower="322" />
    <char_to_case input="323" upper="323" lower="324" />
    <char_to_case input="324" upper="323" lower="324" />
    <char_to_case input="325" upper="325" lower="326" />
    <char_to_case input="326" upper="325" lower="326" />
    <char_to_case input="327" upper="327" lower="328" />
    <char_to_case input="328" upper="327" lower="328" />
    <char_to_case input="330" upper="330" lower="331" />
    <char_to_case input="331" upper="330" lower="331" />
    <char_to_case input="332" upper="332" lower="333" />
    <char_to_case input="333" upper="332" lower="333" />
    <char_to_case input="334" upper="334" lower="335" />
    <char_to_case input="335" upper="334" lower="335" />
    <char_to_case input="336" upper="336" lower="337" />
    <char_to_case input="337" upper="336" lower="337" />
    <char_to_case input="338" upper="338" lower="339" />
    <char_to_case input="339" upper="338" lower="339" />
    <char_to_case input="340" upper="340" lower="341" />
    <char_to_case input="341" upper="340" lower="341" />
    <char_to_case input="342" upper="342" lower="343" />
    <char_to_case input="343" upper="342" lower="343" />
    <char_to_case input="344" upper="344" lower="345" />
    <char_to_case input="345" upper="344" lower="345" />
    <char_to_case input="346" upper="346" lower="347" />
    <char_to_case input="347" upper="346" lower="347" />
    <char_to_case input="348" upper="348" lower="349" />
    <char_to_case input="349" upper="348" lower="349" />
    <char_to_case input="350" upper="350" lower="351" />
    <char_to_case input="351" upper="350" lower="351" />
    <char_to_case input="352" upper="352" lower="353" />
    <char_to_case input="353" upper="352" lower="353" />
    <char_to_case input="354" upper="354" lower="355" />
    <char_to_case input="355" upper="354" lower="355" />
    <char_to_case input="356" upper="356" lower="357" />
    <char_to_case input="357" upper="356" lower="357" />
    <char_to_case input="358" upper="358" lower="359" />
    <char_to_case input="359" upper="358" lower="359" />
    <char_to_case input="360" upper="360" lower="361" />
    <char_to_case input="361" upper="360" lower="361" />
    <char_to_case input="362" upper="362" lower="363" />
    <char_to_case input="363" upper="362" lower="363" />
    <char_to_case input="364" upper="364" lower="365" />
    <char_to_case input="365" upper="364" lower="365" />
    <char_to_case input="366" upper="366" lower="367" />
    <char_to_case input="367" upper="366" lower="367" />
    <char_to_case input="368" upper="368" lower="369" />
    <char_to_case input="369" upper="368" lower="369" />
    <char_to_case input="370" upper="370" lower="371" />
    <char_to_case input="371" upper="370" lower="371" />
    <char_to_case input="372" upper="372" lower="373" />
    <char_to_case input="373" upper="372" lower="373" />
    <char_to_case input="374" upper="374" lower="375" />
    <char_to_case input="375" upper="374" lower="375" />
    <char_to_case input="376" upper="376" lower="255" />
    <char_to_case input="377" upper="377" lower="378" />
    <char_to_case input="378" upper="377" lower="378" />
    <char_to_case input="379" upper="379" lower="380" />
    <char_to_case input="380" upper="379" lower="380" />
    <char_to_case input="381" upper="381" lower="382" />
    <char_to_case input="382" upper="381" lower="382" />
    <char_to_case input="383" upper="83" lower="383" />
    <char_to_case input="384" upper="579" lower="384" />
    <char_to_case input="385" upper="385" lower="595" />
    <char_to_case input="386" upper="386" lower="387" />
    <char_to_case input="387" upper="386" lower="387" />
    <char_to_case input="388" upper="388" lower="389" />
    <char_to_case input="389" upper="388" lower="389" />
    <char_to_case input="390" upper="390" lower="596" />
    <char_to_case input="391" upper="391" lower="392" />
    <char_to_case input="392" upper="391" lower="392" />
    <char_to_case input="393" upper="393" lower="598" />
    <char_to_case input="394" upper="394" lower="599" />
    <char_to_case input="395" upper="395" lower="396" />
    <char_to_case input="396" upper="395" lower="396" />
    <char_to_case input="398" upper="398" lower="477" />
    <char_to_case input="399" upper="399" lower="601" />
    <char_to_case input="400" upper="400" lower="603" />
    <char_to_case input="401" upper="401" lower="402" />
    <char_to_case input="402" upper="401" lower="402" />
    <char_to_case input="403" upper="403" lower="608" />
    <char_to_case input="404" upper="404" lower="611" />
    <char_to_case input="405" upper="502" lower="405" />
    <char_to_case input="406" upper="406" lower="617" />
    <char_to_case input="407" upper="407" lower="616" />
    <char_to_case input="408" upper="408" lower="409" />
    <char_to_case input="409" upper="408" lower="409" />
    <char_to_case input="410" upper="573" lower="410" />
    <char_to_case input="412" upper="412" lower="623" />
    <char_to_case input="413" upper="413" lower="626" />
    <char_to_case input="414" upper="544" lower="414" />
    <char_to_case input="415" upper="415" lower="629" />
    <char_to_case input="416" upper="416" lower="417" />
    <char_to_case input="417" upper="416" lower="417" />
    <char_to_case input="418" upper="418" lower="419" />
    <char_to_case input="419" upper="418" lower="419" />
    <char_to_case input="420" upper="420" lower="421" />
    <char_to_case input="421" upper="420" lower="421" />
    <char_to_case input="422" upper="422" lower="640" />
    <char_to_case input="423" upper="423" lower="424" />
    <char_to_case input="424" upper="423" lower="424" />
    <char_to_case input="425" upper="425" lower="643" />
    <char_to_case input="428" upper="428" lower="429" />
    <char_to_case input="429" upper="428" lower="429" />
    <char_to_case input="430" upper="430" lower="648" />
    <char_to_case input="431" upper="431" lower="432" />
    <char_to_case input="432" upper="431" lower="432" />
    <char_to_case input="433" upper="433" lower="650" />
    <char_to_case input="434" upper="434" lower="651" />
    <char_to_case input="435" upper="435" lower="436" />
    <char_to_case input="436" upper="435" lower="436" />
    <char_to_case input="437" upper="437" lower="438" />
    <char_to_case input="438" upper="437" lower="438" />
    <char_to_case input="439" upper="439" lower="658" />
    <char_to_case input="440" upper="440" lower="441" />
    <char_to_case input="441" upper="440" lower="441" />
    <char_to_case input="444" upper="444" lower="445" />
    <char_to_case input="445" upper="444" lower="445" />
    <char_to_case input="447" upper="503" lower="447" />
    <char_to_case input="452" upper="452" lower="454" />
    <char_to_case input="453" upper="452" lower="454" />
    <char_to_case input="454" upper="452" lower="454" />
    <char_to_case input="455" upper="455" lower="457" />
    <char_to_case input="456" upper="455" lower="457" />
    <char_to_case input="457" upper="455" lower="457" />
    <char_to_case input="458" upper="458" lower="460" />
    <char_to_case input="459" upper="458" lower="460" />
    <char_to_case input="460" upper="458" lower="460" />
    <char_to_case input="461" upper="461" lower="462" />
    <char_to_case input="462" upper="461" lower="462" />
    <char_to_case input="463" upper="463" lower="464" />
    <char_to_case input="464" upper="463" lower="464" />
    <char_to_case input="465" upper="465" lower="466" />
    <char_to_case input="466" upper="465" lower="466" />
    <char_to_case input="467" upper="467" lower="468" />
    <char_to_case input="468" upper="467" lower="468" />
    <char_to_case input="469" upper="469" lower="470" />
    <char_to_case input="470" upper="469" lower="470" />
    <char_to_case input="471" upper="471" lower="472" />
    <char_to_case input="472" upper="471" lower="472" />
    <char_to_case input="473" upper="473" lower="474" />
    <char_to_case input="474" upper="473" lower="474" />
    <char_to_case input="475" upper="475" lower="476" />
    <char_to_case input="476" upper="475" lower="476" />
    <char_to_case input="477" upper="398" lower="477" />
    <char_to_case input="478" upper="478" lower="479" />
    <char_to_case input="479" upper="478" lower="479" />
    <char_to_case input="480" upper="480" lower="481" />
    <char_to_case input="481" upper="480" lower="481" />
    <char_to_case input="482" upper="482" lower="483" />
    <char_to_case input="483" upper="482" lower="483" />
    <char_to_case input="484" upper="484" lower="485" />
    <char_to_case input="485" upper="484" lower="485" />
    <char_to_case input="486" upper="486" lower="487" />
    <char_to_case input="487" upper="486" lower="487" />
    <char_to_case input="488" upper="488" lower="489" />
    <char_to_case input="489" upper="488" lower="489" />
    <char_to_case input="490" upper="490" lower="491" />
    <char_to_case input="491" upper="490" lower="491" />
    <char_to_case input="492" upper="492" lower="493" />
    <char_to_case input="493" upper="492" lower="493" />
    <char_to_case input="494" upper="494" lower="495" />
    <char_to_case input="495" upper="494" lower="495" />
    <char_to_case input="497" upper="497" lower="499" />
    <char_to_case input="498" upper="497" lower="499" />
    <char_to_case input="499" upper="497" lower="499" />
    <char_to_case input="500" upper="500" lower="501" />
    <char_to_case input="501" upper="500" lower="501" />
    <char_to_case input="502" upper="502" lower="405" />
    <char_to_case input="503" upper="503" lower="447" />
    <char_to_case input="504" upper="504" lower="505" />
    <char_to_case input="505" upper="504" lower="505" />
    <char_to_case input="506" upper="506" lower="507" />
    <char_to_case input="507" upper="506" lower="507" />
    <char_to_case input="508" upper="508" lower="509" />
    <char_to_case input="509" upper="508" lower="509" />
    <char_to_case input="510" upper="510" lower="511" />
    <char_to_case input="511" upper="510" lower="511" />
    <char_to_case input="512" upper="512" lower="513" />
    <char_to_case input="513" upper="512" lower="513" />
    <char_to_case input="514" upper="514" lower="515" />
    <char_to_case input="515" upper="514" lower="515" />
    <char_to_case input="516" upper="516" lower="517" />
    <char_to_case input="517" upper="516" lower="517" />
    <char_to_case input="518" upper="518" lower="519" />
    <char_to_case input="519" upper="518" lower="519" />
    <char_to_case input="520" upper="520" lower="521" />
    <char_to_case input="521" upper="520" lower="521" />
    <char_to_case input="522" upper="522" lower="523" />
    <char_to_case input="523" upper="522" lower="523" />
    <char_to_case input="524" upper="524" lower="525" />
    <char_to_case input="525" upper="524" lower="525" />
    <char_to_case input="526" upper="526" lower="527" />
    <char_to_case input="527" upper="526" lower="527" />
    <char_to_case input="528" upper="528" lower="529" />
    <char_to_case input="529" upper="528" lower="529" />
    <char_to_case input="530" upper="530" lower="531" />
    <char_to_case input="531" upper="530" lower="531" />
    <char_to_case input="532" upper="532" lower="533" />
    <char_to_case input="533" upper="532" lower="533" />
    <char_to_case input="534" upper="534" lower="535" />
    <char_to_case input="535" upper="534" lower="535" />
    <char_to_case input="536" upper="536" lower="537" />
    <char_to_case input="537" upper="536" lower="537" />
    <char_to_case input="538" upper="538" lower="539" />
    <char_to_case input="539" upper="538" lower="539" />
    <char_to_case input="540" upper="540" lower="541" />
    <char_to_case input="541" upper="540" lower="541" />
    <char_to_case input="542" upper="542" lower="543" />
    <char_to_case input="543" upper="542" lower="543" />
    <char_to_case input="544" upper="544" lower="414" />
    <char_to_case input="546" upper="546" lower="547" />
    <char_to_case input="547" upper="546" lower="547" />
    <char_to_case input="548" upper="548" lower="549" />
    <char_to_case input="549" upper="548" lower="549" />
    <char_to_case input="550" upper="550" lower="551" />
    <char_to_case input="551" upper="550" lower="551" />
    <char_to_case input="552" upper="552" lower="553" />
    <char_to_case input="553" upper="552" lower="553" />
    <char_to_case input="554" upper="554" lower="555" />
    <char_to_case input="555" upper="554" lower="555" />
    <char_to_case input="556" upper="556" lower="557" />
    <char_to_case input="557" upper="556" lower="557" />
    <char_to_case input="558" upper="558" lower="559" />
    <char_to_case input="559" upper="558" lower="559" />
    <char_to_case input="560" upper="560" lower="561" />
    <char_to_case input="561" upper="560" lower="561" />
    <char_to_case input="562" upper="562" lower="563" />
    <char_to_case input="563" upper="562" lower="563" />
    <char_to_case input="570" upper="570" lower="11365" />
    <char_to_case input="571" upper="571" lower="572" />
    <char_to_case input="572" upper="571" lower="572" />
    <char_to_case input="573" upper="573" lower="410" />
    <char_to_case input="574" upper="574" lower="11366" />
    <char_to_case input="577" upper="577" lower="578" />
    <char_to_case input="578" upper="577" lower="578" />
    <char_to_case input="579" upper="579" lower="384" />
    <char_to_case input="580" upper="580" lower="649" />
    <char_to_case input="581" upper="581" lower="652" />
    <char_to_case input="582" upper="582" lower="583" />
    <char_to_case input="583" upper="582" lower="583" />
    <char_to_case input="584" upper="584" lower="585" />
    <char_to_case input="585" upper="584" lower="585" />
    <char_to_case input="586" upper="586" lower="587" />
    <char_to_case input="587" upper="586" lower="587" />
    <char_to_case input="588" upper="588" lower="589" />
    <char_to_case input="589" upper="588" lower="589" />
    <char_to_case input="590" upper="590" lower="591" />
    <char_to_case input="591" upper="590" lower="591" />
    <char_to_case input="592" upper="11375" lower="592" />
    <char_to_case input="593" upper="11373" lower="593" />
    <char_to_case input="595" upper="385" lower="595" />
    <char_to_case input="596" upper="390" lower="596" />
    <char_to_case input="598" upper="393" lower="598" />
    <char_to_case input="599" upper="394" lower="599" />
    <char_to_case input="601" upper="399" lower="601" />
    <char_to_case input="603" upper="400" lower="603" />
    <char_to_case input="608" upper="403" lower="608" />
    <char_to_case input="611" upper="404" lower="611" />
    <char_to_case input="616" upper="407" lower="616" />
    <char_to_case input="617" upper="406" lower="617" />
    <char_to_case input="619" upper="11362" lower="619" />
    <char_to_case input="623" upper="412" lower="623" />
    <char_to_case input="625" upper="11374" lower="625" />
    <char_to_case input="626" upper="413" lower="626" />
    <char_to_case input="629" upper="415" lower="629" />
    <char_to_case input="637" upper="11364" lower="637" />
    <char_to_case input="640" upper="422" lower="640" />
    <char_to_case input="643" upper="425" lower="643" />
    <char_to_case input="648" upper="430" lower="648" />
    <char_to_case input="649" upper="580" lower="649" />
    <char_to_case input="650" upper="433" lower="650" />
    <char_to_case input="651" upper="434" lower="651" />
    <char_to_case input="652" upper="581" lower="652" />
    <char_to_case input="658" upper="439" lower="658" />
    <char_to_case input="837" upper="921" lower="837" />
    <char_to_case input="880" upper="880" lower="881" />
    <char_to_case input="881" upper="880" lower="881" />
    <char_to_case input="882" upper="882" lower="883" />
    <char_to_case input="883" upper="882" lower="883" />
    <char_to_case input="886" upper="886" lower="887" />
    <char_to_case input="887" upper="886" lower="887" />
    <char_to_case input="891" upper="1021" lower="891" />
    <char_to_case input="892" upper="1022" lower="892" />
    <char_to_case input="893" upper="1023" lower="893" />
    <char_to_case input="902" upper="902" lower="940" />
    <char_to_case input="904" upper="904" lower="941" />
    <char_to_case input="905" upper="905" lower="942" />
    <char_to_case input="906" upper="906" lower="943" />
    <char_to_case input="908" upper="908" lower="972" />
    <char_to_case input="910" upper="910" lower="973" />
    <char_to_case input="911" upper="911" lower="974" />
    <char_to_case input="913" upper="913" lower="945" />
    <char_to_case input="914" upper="914" lower="946" />
    <char_to_case input="915" upper="915" lower="947" />
    <char_to_case input="916" upper="916" lower="948" />
    <char_to_case input="917" upper="917" lower="949" />
    <char_to_case input="918" upper="918" lower="950" />
    <char_to_case input="919" upper="919" lower="951" />
    <char_to_case input="920" upper="920" lower="952" />
    <char_to_case input="921" upper="921" lower="953" />
    <char_to_case input="922" upper="922" lower="954" />
    <char_to_case input="923" upper="923" lower="955" />
    <char_to_case input="924" upper="924" lower="956" />
    <char_to_case input="925" upper="925" lower="957" />
    <char_to_case input="926" upper="926" lower="958" />
    <char_to_case input="927" upper="927" lower="959" />
    <char_to_case input="928" upper="928" lower="960" />
    <char_to_case input="929" upper="929" lower="961" />
    <char_to_case input="931" upper="931" lower="963" />
    <char_to_case input="932" upper="932" lower="964" />
    <char_to_case input="933" upper="933" lower="965" />
    <char_to_case input="934" upper="934" lower="966" />
    <char_to_case input="935" upper="935" lower="967" />
    <char_to_case input="936" upper="936" lower="968" />
    <char_to_case input="937" upper="937" lower="969" />
    <char_to_case input="938" upper="938" lower="970" />
    <char_to_case input="939" upper="939" lower="971" />
    <char_to_case input="940" upper="902" lower="940" />
    <char_to_case input="941" upper="904" lower="941" />
    <char_to_case input="942" upper="905" lower="942" />
    <char_to_case input="943" upper="906" lower="943" />
    <char_to_case input="945" upper="913" lower="945" />
    <char_to_case input="946" upper="914" lower="946" />
    <char_to_case input="947" upper="915" lower="947" />
    <char_to_case input="948" upper="916" lower="948" />
    <char_to_case input="949" upper="917" lower="949" />
    <char_to_case input="950" upper="918" lower="950" />
    <char_to_case input="951" upper="919" lower="951" />
    <char_to_case input="952" upper="920" lower="952" />
    <char_to_case input="953" upper="921" lower="953" />
    <char_to_case input="954" upper="922" lower="954" />
    <char_to_case input="955" upper="923" lower="955" />
    <char_to_case input="956" upper="924" lower="956" />
    <char_to_case input="957" upper="925" lower="957" />
    <char_to_case input="958" upper="926" lower="958" />
    <char_to_case input="959" upper="927" lower="959" />
    <char_to_case input="960" upper="928" lower="960" />
    <char_to_case input="961" upper="929" lower="961" />
    <char_to_case input="962" upper="931" lower="962" />
    <char_to_case input="963" upper="931" lower="963" />
    <char_to_case input="964" upper="932" lower="964" />
    <char_to_case input="965" upper="933" lower="965" />
    <char_to_case input="966" upper="934" lower="966" />
    <char_to_case input="967" upper="935" lower="967" />
    <char_to_case input="968" upper="936" lower="968" />
    <char_to_case input="969" upper="937" lower="969" />
    <char_to_case input="970" upper="938" lower="970" />
    <char_to_case input="971" upper="939" lower="971" />
    <char_to_case input="972" upper="908" lower="972" />
    <char_to_case input="973" upper="910" lower="973" />
    <char_to_case input="974" upper="911" lower="974" />
    <char_to_case input="975" upper="975" lower="983" />
    <char_to_case input="976" upper="914" lower="976" />
    <char_to_case input="977" upper="920" lower="977" />
    <char_to_case input="978" upper="978" lower="965" />
    <char_to_case input="979" upper="979" lower="973" />
    <char_to_case input="980" upper="980" lower="971" />
    <char_to_case input="981" upper="934" lower="981" />
    <char_to_case input="982" upper="928" lower="982" />
    <char_to_case input="983" upper="975" lower="983" />
    <char_to_case input="984" upper="984" lower="985" />
    <char_to_case input="985" upper="984" lower="985" />
    <char_to_case input="986" upper="986" lower="987" />
    <char_to_case input="987" upper="986" lower="987" />
    <char_to_case input="988" upper="988" lower="989" />
    <char_to_case input="989" upper="988" lower="989" />
    <char_to_case input="990" upper="990" lower="991" />
    <char_to_case input="991" upper="990" lower="991" />
    <char_to_case input="992" upper="992" lower="993" />
    <char_to_case input="993" upper="992" lower="993" />
    <char_to_case input="994" upper="994" lower="995" />
    <char_to_case input="995" upper="994" lower="995" />
    <char_to_case input="996" upper="996" lower="997" />
    <char_to_case input="997" upper="996" lower="997" />
    <char_to_case input="998" upper="998" lower="999" />
    <char_to_case input="999" upper="998" lower="999" />
    <char_to_case input="1000" upper="1000" lower="1001" />
    <char_to_case input="1001" upper="1000" lower="1001" />
    <char_to_case input="1002" upper="1002" lower="1003" />
    <char_to_case input="1003" upper="1002" lower="1003" />
    <char_to_case input="1004" upper="1004" lower="1005" />
    <char_to_case input="1005" upper="1004" lower="1005" />
    <char_to_case input="1006" upper="1006" lower="1007" />
    <char_to_case input="1007" upper="1006" lower="1007" />
    <char_to_case input="1008" upper="922" lower="1008" />
    <char_to_case input="1009" upper="929" lower="1009" />
    <char_to_case input="1010" upper="1017" lower="1010" />
    <char_to_case input="1012" upper="1012" lower="952" />
    <char_to_case input="1013" upper="917" lower="1013" />
    <char_to_case input="1015" upper="1015" lower="1016" />
    <char_to_case input="1016" upper="1015" lower="1016" />
    <char_to_case input="1017" upper="1017" lower="1010" />
    <char_to_case input="1018" upper="1018" lower="1019" />
    <char_to_case input="1019" upper="1018" lower="1019" />
    <char_to_case input="1021" upper="1021" lower="891" />
    <char_to_case input="1022" upper="1022" lower="892" />
    <char_to_case input="1023" upper="1023" lower="893" />
    <char_to_case input="1024" upper="1024" lower="1104" />
    <char_to_case input="1025" upper="1025" lower="1105" />
    <char_to_case input="1026" upper="1026" lower="1106" />
    <char_to_case input="1027" upper="1027" lower="1107" />
    <char_to_case input="1028" upper="1028" lower="1108" />
    <char_to_case input="1029" upper="1029" lower="1109" />
    <char_to_case input="1030" upper="1030" lower="1110" />
    <char_to_case input="1031" upper="1031" lower="1111" />
    <char_to_case input="1032" upper="1032" lower="1112" />
    <char_to_case input="1033" upper="1033" lower="1113" />
    <char_to_case input="1034" upper="1034" lower="1114" />
    <char_to_case input="1035" upper="1035" lower="1115" />
    <char_to_case input="1036" upper="1036" lower="1116" />
    <char_to_case input="1037" upper="1037" lower="1117" />
    <char_to_case input="1038" upper="1038" lower="1118" />
    <char_to_case input="1039" upper="1039" lower="1119" />
    <char_to_case input="1040" upper="1040" lower="1072" />
    <char_to_case input="1041" upper="1041" lower="1073" />
    <char_to_case input="1042" upper="1042" lower="1074" />
    <char_to_case input="1043" upper="1043" lower="1075" />
    <char_to_case input="1044" upper="1044" lower="1076" />
    <char_to_case input="1045" upper="1045" lower="1077" />
    <char_to_case input="1046" upper="1046" lower="1078" />
    <char_to_case input="1047" upper="1047" lower="1079" />
    <char_to_case input="1048" upper="1048" lower="1080" />
    <char_to_case input="1049" upper="1049" lower="1081" />
    <char_to_case input="1050" upper="1050" lower="1082" />
    <char_to_case input="1051" upper="1051" lower="1083" />
    <char_to_case input="1052" upper="1052" lower="1084" />
    <char_to_case input="1053" upper="1053" lower="1085" />
    <char_to_case input="1054" upper="1054" lower="1086" />
    <char_to_case input="1055" upper="1055" lower="1087" />
    <char_to_case input="1056" upper="1056" lower="1088" />
    <char_to_case input="1057" upper="1057" lower="1089" />
    <char_to_case input="1058" upper="1058" lower="1090" />
    <char_to_case input="1059" upper="1059" lower="1091" />
    <char_to_case input="1060" upper="1060" lower="1092" />
    <char_to_case input="1061" upper="1061" lower="1093" />
    <char_to_case input="1062" upper="1062" lower="1094" />
    <char_to_case input="1063" upper="1063" lower="1095" />
    <char_to_case input="1064" upper="1064" lower="1096" />
    <char_to_case input="1065" upper="1065" lower="1097" />
    <char_to_case input="1066" upper="1066" lower="1098" />
    <char_to_case input="1067" upper="1067" lower="1099" />
    <char_to_case input="1068" upper="1068" lower="1100" />
    <char_to_case input="1069" upper="1069" lower="1101" />
    <char_to_case input="1070" upper="1070" lower="1102" />
    <char_to_case input="1071" upper="1071" lower="1103" />
    <char_to_case input="1072" upper="1040" lower="1072" />
    <char_to_case input="1073" upper="1041" lower="1073" />
    <char_to_case input="1074" upper="1042" lower="1074" />
    <char_to_case input="1075" upper="1043" lower="1075" />
    <char_to_case input="1076" upper="1044" lower="1076" />
    <char_to_case input="1077" upper="1045" lower="1077" />
    <char_to_case input="1078" upper="1046" lower="1078" />
    <char_to_case input="1079" upper="1047" lower="1079" />
    <char_to_case input="1080" upper="1048" lower="1080" />
    <char_to_case input="1081" upper="1049" lower="1081" />
    <char_to_case input="1082" upper="1050" lower="1082" />
    <char_to_case input="1083" upper="1051" lower="1083" />
    <char_to_case input="1084" upper="1052" lower="1084" />
    <char_to_case input="1085" upper="1053" lower="1085" />
    <char_to_case input="1086" upper="1054" lower="1086" />
    <char_to_case input="1087" upper="1055" lower="1087" />
    <char_to_case input="1088" upper="1056" lower="1088" />
    <char_to_case input="1089" upper="1057" lower="1089" />
    <char_to_case input="1090" upper="1058" lower="1090" />
    <char_to_case input="1091" upper="1059" lower="1091" />
    <char_to_case input="1092" upper="1060" lower="1092" />
    <char_to_case input="1093" upper="1061" lower="1093" />
    <char_to_case input="1094" upper="1062" lower="1094" />
    <char_to_case input="1095" upper="1063" lower="1095" />
    <char_to_case input="1096" upper="1064" lower="1096" />
    <char_to_case input="1097" upper="1065" lower="1097" />
    <char_to_case input="1098" upper="1066" lower="1098" />
    <char_to_case input="1099" upper="1067" lower="1099" />
    <char_to_case input="1100" upper="1068" lower="1100" />
    <char_to_case input="1101" upper="1069" lower="1101" />
    <char_to_case input="1102" upper="1070" lower="1102" />
    <char_to_case input="1103" upper="1071" lower="1103" />
    <char_to_case input="1104" upper="1024" lower="1104" />
    <char_to_case input="1105" upper="1025" lower="1105" />
    <char_to_case input="1106" upper="1026" lower="1106" />
    <char_to_case input="1107" upper="1027" lower="1107" />
    <char_to_case input="1108" upper="1028" lower="1108" />
    <char_to_case input="1109" upper="1029" lower="1109" />
    <char_to_case input="1110" upper="1030" lower="1110" />
    <char_to_case input="1111" upper="1031" lower="1111" />
    <char_to_case input="1112" upper="1032" lower="1112" />
    <char_to_case input="1113" upper="1033" lower="1113" />
    <char_to_case input="1114" upper="1034" lower="1114" />
    <char_to_case input="1115" upper="1035" lower="1115" />
    <char_to_case input="1116" upper="1036" lower="1116" />
    <char_to_case input="1117" upper="1037" lower="1117" />
    <char_to_case input="1118" upper="1038" lower="1118" />
    <char_to_case input="1119" upper="1039" lower="1119" />
    <char_to_case input="1120" upper="1120" lower="1121" />
    <char_to_case input="1121" upper="1120" lower="1121" />
    <char_to_case input="1122" upper="1122" lower="1123" />
    <char_to_case input="1123" upper="1122" lower="1123" />
    <char_to_case input="1124" upper="1124" lower="1125" />
    <char_to_case input="1125" upper="1124" lower="1125" />
    <char_to_case input="1126" upper="1126" lower="1127" />
    <char_to_case input="1127" upper="1126" lower="1127" />
    <char_to_case input="1128" upper="1128" lower="1129" />
    <char_to_case input="1129" upper="1128" lower="1129" />
    <char_to_case input="1130" upper="1130" lower="1131" />
    <char_to_case input="1131" upper="1130" lower="1131" />
    <char_to_case input="1132" upper="1132" lower="1133" />
    <char_to_case input="1133" upper="1132" lower="1133" />
    <char_to_case input="1134" upper="1134" lower="1135" />
    <char_to_case input="1135" upper="1134" lower="1135" />
    <char_to_case input="1136" upper="1136" lower="1137" />
    <char_to_case input="1137" upper="1136" lower="1137" />
    <char_to_case input="1138" upper="1138" lower="1139" />
    <char_to_case input="1139" upper="1138" lower="1139" />
    <char_to_case input="1140" upper="1140" lower="1141" />
    <char_to_case input="1141" upper="1140" lower="1141" />
    <char_to_case input="1142" upper="1142" lower="1143" />
    <char_to_case input="1143" upper="1142" lower="1143" />
    <char_to_case input="1144" upper="1144" lower="1145" />
    <char_to_case input="1145" upper="1144" lower="1145" />
    <char_to_case input="1146" upper="1146" lower="1147" />
    <char_to_case input="1147" upper="1146" lower="1147" />
    <char_to_case input="1148" upper="1148" lower="1149" />
    <char_to_case input="1149" upper="1148" lower="1149" />
    <char_to_case input="1150" upper="1150" lower="1151" />
    <char_to_case input="1151" upper="1150" lower="1151" />
    <char_to_case input="1152" upper="1152" lower="1153" />
    <char_to_case input="1153" upper="1152" lower="1153" />
    <char_to_case input="1162" upper="1162" lower="1163" />
    <char_to_case input="1163" upper="1162" lower="1163" />
    <char_to_case input="1164" upper="1164" lower="1165" />
    <char_to_case input="1165" upper="1164" lower="1165" />
    <char_to_case input="1166" upper="1166" lower="1167" />
    <char_to_case input="1167" upper="1166" lower="1167" />
    <char_to_case input="1168" upper="1168" lower="1169" />
    <char_to_case input="1169" upper="1168" lower="1169" />
    <char_to_case input="1170" upper="1170" lower="1171" />
    <char_to_case input="1171" upper="1170" lower="1171" />
    <char_to_case input="1172" upper="1172" lower="1173" />
    <char_to_case input="1173" upper="1172" lower="1173" />
    <char_to_case input="1174" upper="1174" lower="1175" />
    <char_to_case input="1175" upper="1174" lower="1175" />
    <char_to_case input="1176" upper="1176" lower="1177" />
    <char_to_case input="1177" upper="1176" lower="1177" />
    <char_to_case input="1178" upper="1178" lower="1179" />
    <char_to_case input="1179" upper="1178" lower="1179" />
    <char_to_case input="1180" upper="1180" lower="1181" />
    <char_to_case input="1181" upper="1180" lower="1181" />
    <char_to_case input="1182" upper="1182" lower="1183" />
    <char_to_case input="1183" upper="1182" lower="1183" />
    <char_to_case input="1184" upper="1184" lower="1185" />
    <char_to_case input="1185" upper="1184" lower="1185" />
    <char_to_case input="1186" upper="1186" lower="1187" />
    <char_to_case input="1187" upper="1186" lower="1187" />
    <char_to_case input="1188" upper="1188" lower="1189" />
    <char_to_case input="1189" upper="1188" lower="1189" />
    <char_to_case input="1190" upper="1190" lower="1191" />
    <char_to_case input="1191" upper="1190" lower="1191" />
    <char_to_case input="1192" upper="1192" lower="1193" />
    <char_to_case input="1193" upper="1192" lower="1193" />
    <char_to_case input="1194" upper="1194" lower="1195" />
    <char_to_case input="1195" upper="1194" lower="1195" />
    <char_to_case input="1196" upper="1196" lower="1197" />
    <char_to_case input="1197" upper="1196" lower="1197" />
    <char_to_case input="1198" upper="1198" lower="1199" />
    <char_to_case input="1199" upper="1198" lower="1199" />
    <char_to_case input="1200" upper="1200" lower="1201" />
    <char_to_case input="1201" upper="1200" lower="1201" />
    <char_to_case input="1202" upper="1202" lower="1203" />
    <char_to_case input="1203" upper="1202" lower="1203" />
    <char_to_case input="1204" upper="1204" lower="1205" />
    <char_to_case input="1205" upper="1204" lower="1205" />
    <char_to_case input="1206" upper="1206" lower="1207" />
    <char_to_case input="1207" upper="1206" lower="1207" />
    <char_to_case input="1208" upper="1208" lower="1209" />
    <char_to_case input="1209" upper="1208" lower="1209" />
    <char_to_case input="1210" upper="1210" lower="1211" />
    <char_to_case input="1211" upper="1210" lower="1211" />
    <char_to_case input="1212" upper="1212" lower="1213" />
    <char_to_case input="1213" upper="1212" lower="1213" />
    <char_to_case input="1214" upper="1214" lower="1215" />
    <char_to_case input="1215" upper="1214" lower="1215" />
    <char_to_case input="1216" upper="1216" lower="1231" />
    <char_to_case input="1217" upper="1217" lower="1218" />
    <char_to_case input="1218" upper="1217" lower="1218" />
    <char_to_case input="1219" upper="1219" lower="1220" />
    <char_to_case input="1220" upper="1219" lower="1220" />
    <char_to_case input="1221" upper="1221" lower="1222" />
    <char_to_case input="1222" upper="1221" lower="1222" />
    <char_to_case input="1223" upper="1223" lower="1224" />
    <char_to_case input="1224" upper="1223" lower="1224" />
    <char_to_case input="1225" upper="1225" lower="1226" />
    <char_to_case input="1226" upper="1225" lower="1226" />
    <char_to_case input="1227" upper="1227" lower="1228" />
    <char_to_case input="1228" upper="1227" lower="1228" />
    <char_to_case input="1229" upper="1229" lower="1230" />
    <char_to_case input="1230" upper="1229" lower="1230" />
    <char_to_case input="1231" upper="1216" lower="1231" />
    <char_to_case input="1232" upper="1232" lower="1233" />
    <char_to_case input="1233" upper="1232" lower="1233" />
    <char_to_case input="1234" upper="1234" lower="1235" />
    <char_to_case input="1235" upper="1234" lower="1235" />
    <char_to_case input="1236" upper="1236" lower="1237" />
    <char_to_case input="1237" upper="1236" lower="1237" />
    <char_to_case input="1238" upper="1238" lower="1239" />
    <char_to_case input="1239" upper="1238" lower="1239" />
    <char_to_case input="1240" upper="1240" lower="1241" />
    <char_to_case input="1241" upper="1240" lower="1241" />
    <char_to_case input="1242" upper="1242" lower="1243" />
    <char_to_case input="1243" upper="1242" lower="1243" />
    <char_to_case input="1244" upper="1244" lower="1245" />
    <char_to_case input="1245" upper="1244" lower="1245" />
    <char_to_case input="1246" upper="1246" lower="1247" />
    <char_to_case input="1247" upper="1246" lower="1247" />
    <char_to_case input="1248" upper="1248" lower="1249" />
    <char_to_case input="1249" upper="1248" lower="1249" />
    <char_to_case input="1250" upper="1250" lower="1251" />
    <char_to_case input="1251" upper="1250" lower="1251" />
    <char_to_case input="1252" upper="1252" lower="1253" />
    <char_to_case input="1253" upper="1252" lower="1253" />
    <char_to_case input="1254" upper="1254" lower="1255" />
    <char_to_case input="1255" upper="1254" lower="1255" />
    <char_to_case input="1256" upper="1256" lower="1257" />
    <char_to_case input="1257" upper="1256" lower="1257" />
    <char_to_case input="1258" upper="1258" lower="1259" />
    <char_to_case input="1259" upper="1258" lower="1259" />
    <char_to_case input="1260" upper="1260" lower="1261" />
    <char_to_case input="1261" upper="1260" lower="1261" />
    <char_to_case input="1262" upper="1262" lower="1263" />
    <char_to_case input="1263" upper="1262" lower="1263" />
    <char_to_case input="1264" upper="1264" lower="1265" />
    <char_to_case input="1265" upper="1264" lower="1265" />
    <char_to_case input="1266" upper="1266" lower="1267" />
    <char_to_case input="1267" upper="1266" lower="1267" />
    <char_to_case input="1268" upper="1268" lower="1269" />
    <char_to_case input="1269" upper="1268" lower="1269" />
    <char_to_case input="1270" upper="1270" lower="1271" />
    <char_to_case input="1271" upper="1270" lower="1271" />
    <char_to_case input="1272" upper="1272" lower="1273" />
    <char_to_case input="1273" upper="1272" lower="1273" />
    <char_to_case input="1274" upper="1274" lower="1275" />
    <char_to_case input="1275" upper="1274" lower="1275" />
    <char_to_case input="1276" upper="1276" lower="1277" />
    <char_to_case input="1277" upper="1276" lower="1277" />
    <char_to_case input="1278" upper="1278" lower="1279" />
    <char_to_case input="1279" upper="1278" lower="1279" />
    <char_to_case input="1280" upper="1280" lower="1281" />
    <char_to_case input="1281" upper="1280" lower="1281" />
    <char_to_case input="1282" upper="1282" lower="1283" />
    <char_to_case input="1283" upper="1282" lower="1283" />
    <char_to_case input="1284" upper="1284" lower="1285" />
    <char_to_case input="1285" upper="1284" lower="1285" />
    <char_to_case input="1286" upper="1286" lower="1287" />
    <char_to_case input="1287" upper="1286" lower="1287" />
    <char_to_case input="1288" upper="1288" lower="1289" />
    <char_to_case input="1289" upper="1288" lower="1289" />
    <char_to_case input="1290" upper="1290" lower="1291" />
    <char_to_case input="1291" upper="1290" lower="1291" />
    <char_to_case input="1292" upper="1292" lower="1293" />
    <char_to_case input="1293" upper="1292" lower="1293" />
    <char_to_case input="1294" upper="1294" lower="1295" />
    <char_to_case input="1295" upper="1294" lower="1295" />
    <char_to_case input="1296" upper="1296" lower="1297" />
    <char_to_case input="1297" upper="1296" lower="1297" />
    <char_to_case input="1298" upper="1298" lower="1299" />
    <char_to_case input="1299" upper="1298" lower="1299" />
    <char_to_case input="1300" upper="1300" lower="1301" />
    <char_to_case input="1301" upper="1300" lower="1301" />
    <char_to_case input="1302" upper="1302" lower="1303" />
    <char_to_case input="1303" upper="1302" lower="1303" />
    <char_to_case input="1304" upper="1304" lower="1305" />
    <char_to_case input="1305" upper="1304" lower="1305" />
    <char_to_case input="1306" upper="1306" lower="1307" />
    <char_to_case input="1307" upper="1306" lower="1307" />
    <char_to_case input="1308" upper="1308" lower="1309" />
    <char_to_case input="1309" upper="1308" lower="1309" />
    <char_to_case input="1310" upper="1310" lower="1311" />
    <char_to_case input="1311" upper="1310" lower="1311" />
    <char_to_case input="1312" upper="1312" lower="1313" />
    <char_to_case input="1313" upper="1312" lower="1313" />
    <char_to_case input="1314" upper="1314" lower="1315" />
    <char_to_case input="1315" upper="1314" lower="1315" />
    <char_to_case input="1329" upper="1329" lower="1377" />
    <char_to_case input="1330" upper="1330" lower="1378" />
    <char_to_case input="1331" upper="1331" lower="1379" />
    <char_to_case input="1332" upper="1332" lower="1380" />
    <char_to_case input="1333" upper="1333" lower="1381" />
    <char_to_case input="1334" upper="1334" lower="1382" />
    <char_to_case input="1335" upper="1335" lower="1383" />
    <char_to_case input="1336" upper="1336" lower="1384" />
    <char_to_case input="1337" upper="1337" lower="1385" />
    <char_to_case input="1338" upper="1338" lower="1386" />
    <char_to_case input="1339" upper="1339" lower="1387" />
    <char_to_case input="1340" upper="1340" lower="1388" />
    <char_to_case input="1341" upper="1341" lower="1389" />
    <char_to_case input="1342" upper="1342" lower="1390" />
    <char_to_case input="1343" upper="1343" lower="1391" />
    <char_to_case input="1344" upper="1344" lower="1392" />
    <char_to_case input="1345" upper="1345" lower="1393" />
    <char_to_case input="1346" upper="1346" lower="1394" />
    <char_to_case input="1347" upper="1347" lower="1395" />
    <char_to_case input="1348" upper="1348" lower="1396" />
    <char_to_case input="1349" upper="1349" lower="1397" />
    <char_to_case input="1350" upper="1350" lower="1398" />
    <char_to_case input="1351" upper="1351" lower="1399" />
    <char_to_case input="1352" upper="1352" lower="1400" />
    <char_to_case input="1353" upper="1353" lower="1401" />
    <char_to_case input="1354" upper="1354" lower="1402" />
    <char_to_case input="1355" upper="1355" lower="1403" />
    <char_to_case input="1356" upper="1356" lower="1404" />
    <char_to_case input="1357" upper="1357" lower="1405" />
    <char_to_case input="1358" upper="1358" lower="1406" />
    <char_to_case input="1359" upper="1359" lower="1407" />
    <char_to_case input="1360" upper="1360" lower="1408" />
    <char_to_case input="1361" upper="1361" lower="1409" />
    <char_to_case input="1362" upper="1362" lower="1410" />
    <char_to_case input="1363" upper="1363" lower="1411" />
    <char_to_case input="1364" upper="1364" lower="1412" />
    <char_to_case input="1365" upper="1365" lower="1413" />
    <char_to_case input="1366" upper="1366" lower="1414" />
    <char_to_case input="1377" upper="1329" lower="1377" />
    <char_to_case input="1378" upper="1330" lower="1378" />
    <char_to_case input="1379" upper="1331" lower="1379" />
    <char_to_case input="1380" upper="1332" lower="1380" />
    <char_to_case input="1381" upper="1333" lower="1381" />
    <char_to_case input="1382" upper="1334" lower="1382" />
    <char_to_case input="1383" upper="1335" lower="1383" />
    <char_to_case input="1384" upper="1336" lower="1384" />
    <char_to_case input="1385" upper="1337" lower="1385" />
    <char_to_case input="1386" upper="1338" lower="1386" />
    <char_to_case input="1387" upper="1339" lower="1387" />
    <char_to_case input="1388" upper="1340" lower="1388" />
    <char_to_case input="1389" upper="1341" lower="1389" />
    <char_to_case input="1390" upper="1342" lower="1390" />
    <char_to_case input="1391" upper="1343" lower="1391" />
    <char_to_case input="1392" upper="1344" lower="1392" />
    <char_to_case input="1393" upper="1345" lower="1393" />
    <char_to_case input="1394" upper="1346" lower="1394" />
    <char_to_case input="1395" upper="1347" lower="1395" />
    <char_to_case input="1396" upper="1348" lower="1396" />
    <char_to_case input="1397" upper="1349" lower="1397" />
    <char_to_case input="1398" upper="1350" lower="1398" />
    <char_to_case input="1399" upper="1351" lower="1399" />
    <char_to_case input="1400" upper="1352" lower="1400" />
    <char_to_case input="1401" upper="1353" lower="1401" />
    <char_to_case input="1402" upper="1354" lower="1402" />
    <char_to_case input="1403" upper="1355" lower="1403" />
    <char_to_case input="1404" upper="1356" lower="1404" />
    <char_to_case input="1405" upper="1357" lower="1405" />
    <char_to_case input="1406" upper="1358" lower="1406" />
    <char_to_case input="1407" upper="1359" lower="1407" />
    <char_to_case input="1408" upper="1360" lower="1408" />
    <char_to_case input="1409" upper="1361" lower="1409" />
    <char_to_case input="1410" upper="1362" lower="1410" />
    <char_to_case input="1411" upper="1363" lower="1411" />
    <char_to_case input="1412" upper="1364" lower="1412" />
    <char_to_case input="1413" upper="1365" lower="1413" />
    <char_to_case input="1414" upper="1366" lower="1414" />
    <char_to_case input="4256" upper="4256" lower="11520" />
    <char_to_case input="4257" upper="4257" lower="11521" />
    <char_to_case input="4258" upper="4258" lower="11522" />
    <char_to_case input="4259" upper="4259" lower="11523" />
    <char_to_case input="4260" upper="4260" lower="11524" />
    <char_to_case input="4261" upper="4261" lower="11525" />
    <char_to_case input="4262" upper="4262" lower="11526" />
    <char_to_case input="4263" upper="4263" lower="11527" />
    <char_to_case input="4264" upper="4264" lower="11528" />
    <char_to_case input="4265" upper="4265" lower="11529" />
    <char_to_case input="4266" upper="4266" lower="11530" />
    <char_to_case input="4267" upper="4267" lower="11531" />
    <char_to_case input="4268" upper="4268" lower="11532" />
    <char_to_case input="4269" upper="4269" lower="11533" />
    <char_to_case input="4270" upper="4270" lower="11534" />
    <char_to_case input="4271" upper="4271" lower="11535" />
    <char_to_case input="4272" upper="4272" lower="11536" />
    <char_to_case input="4273" upper="4273" lower="11537" />
    <char_to_case input="4274" upper="4274" lower="11538" />
    <char_to_case input="4275" upper="4275" lower="11539" />
    <char_to_case input="4276" upper="4276" lower="11540" />
    <char_to_case input="4277" upper="4277" lower="11541" />
    <char_to_case input="4278" upper="4278" lower="11542" />
    <char_to_case input="4279" upper="4279" lower="11543" />
    <char_to_case input="4280" upper="4280" lower="11544" />
    <char_to_case input="4281" upper="4281" lower="11545" />
    <char_to_case input="4282" upper="4282" lower="11546" />
    <char_to_case input="4283" upper="4283" lower="11547" />
    <char_to_case input="4284" upper="4284" lower="11548" />
    <char_to_case input="4285" upper="4285" lower="11549" />
    <char_to_case input="4286" upper="4286" lower="11550" />
    <char_to_case input="4287" upper="4287" lower="11551" />
    <char_to_case input="4288" upper="4288" lower="11552" />
    <char_to_case input="4289" upper="4289" lower="11553" />
    <char_to_case input="4290" upper="4290" lower="11554" />
    <char_to_case input="4291" upper="4291" lower="11555" />
    <char_to_case input="4292" upper="4292" lower="11556" />
    <char_to_case input="4293" upper="4293" lower="11557" />
    <char_to_case input="7545" upper="42877" lower="7545" />
    <char_to_case input="7549" upper="11363" lower="7549" />
    <char_to_case input="7680" upper="7680" lower="7681" />
    <char_to_case input="7681" upper="7680" lower="7681" />
    <char_to_case input="7682" upper="7682" lower="7683" />
    <char_to_case input="7683" upper="7682" lower="7683" />
    <char_to_case input="7684" upper="7684" lower="7685" />
    <char_to_case input="7685" upper="7684" lower="7685" />
    <char_to_case input="7686" upper="7686" lower="7687" />
    <char_to_case input="7687" upper="7686" lower="7687" />
    <char_to_case input="7688" upper="7688" lower="7689" />
    <char_to_case input="7689" upper="7688" lower="7689" />
    <char_to_case input="7690" upper="7690" lower="7691" />
    <char_to_case input="7691" upper="7690" lower="7691" />
    <char_to_case input="7692" upper="7692" lower="7693" />
    <char_to_case input="7693" upper="7692" lower="7693" />
    <char_to_case input="7694" upper="7694" lower="7695" />
    <char_to_case input="7695" upper="7694" lower="7695" />
    <char_to_case input="7696" upper="7696" lower="7697" />
    <char_to_case input="7697" upper="7696" lower="7697" />
    <char_to_case input="7698" upper="7698" lower="7699" />
    <char_to_case input="7699" upper="7698" lower="7699" />
    <char_to_case input="7700" upper="7700" lower="7701" />
    <char_to_case input="7701" upper="7700" lower="7701" />
    <char_to_case input="7702" upper="7702" lower="7703" />
    <char_to_case input="7703" upper="7702" lower="7703" />
    <char_to_case input="7704" upper="7704" lower="7705" />
    <char_to_case input="7705" upper="7704" lower="7705" />
    <char_to_case input="7706" upper="7706" lower="7707" />
    <char_to_case input="7707" upper="7706" lower="7707" />
    <char_to_case input="7708" upper="7708" lower="7709" />
    <char_to_case input="7709" upper="7708" lower="7709" />
    <char_to_case input="7710" upper="7710" lower="7711" />
    <char_to_case input="7711" upper="7710" lower="7711" />
    <char_to_case input="7712" upper="7712" lower="7713" />
    <char_to_case input="7713" upper="7712" lower="7713" />
    <char_to_case input="7714" upper="7714" lower="7715" />
    <char_to_case input="7715" upper="7714" lower="7715" />
    <char_to_case input="7716" upper="7716" lower="7717" />
    <char_to_case input="7717" upper="7716" lower="7717" />
    <char_to_case input="7718" upper="7718" lower="7719" />
    <char_to_case input="7719" upper="7718" lower="7719" />
    <char_to_case input="7720" upper="7720" lower="7721" />
    <char_to_case input="7721" upper="7720" lower="7721" />
    <char_to_case input="7722" upper="7722" lower="7723" />
    <char_to_case input="7723" upper="7722" lower="7723" />
    <char_to_case input="7724" upper="7724" lower="7725" />
    <char_to_case input="7725" upper="7724" lower="7725" />
    <char_to_case input="7726" upper="7726" lower="7727" />
    <char_to_case input="7727" upper="7726" lower="7727" />
    <char_to_case input="7728" upper="7728" lower="7729" />
    <char_to_case input="7729" upper="7728" lower="7729" />
    <char_to_case input="7730" upper="7730" lower="7731" />
    <char_to_case input="7731" upper="7730" lower="7731" />
    <char_to_case input="7732" upper="7732" lower="7733" />
    <char_to_case input="7733" upper="7732" lower="7733" />
    <char_to_case input="7734" upper="7734" lower="7735" />
    <char_to_case input="7735" upper="7734" lower="7735" />
    <char_to_case input="7736" upper="7736" lower="7737" />
    <char_to_case input="7737" upper="7736" lower="7737" />
    <char_to_case input="7738" upper="7738" lower="7739" />
    <char_to_case input="7739" upper="7738" lower="7739" />
    <char_to_case input="7740" upper="7740" lower="7741" />
    <char_to_case input="7741" upper="7740" lower="7741" />
    <char_to_case input="7742" upper="7742" lower="7743" />
    <char_to_case input="7743" upper="7742" lower="7743" />
    <char_to_case input="7744" upper="7744" lower="7745" />
    <char_to_case input="7745" upper="7744" lower="7745" />
    <char_to_case input="7746" upper="7746" lower="7747" />
    <char_to_case input="7747" upper="7746" lower="7747" />
    <char_to_case input="7748" upper="7748" lower="7749" />
    <char_to_case input="7749" upper="7748" lower="7749" />
    <char_to_case input="7750" upper="7750" lower="7751" />
    <char_to_case input="7751" upper="7750" lower="7751" />
    <char_to_case input="7752" upper="7752" lower="7753" />
    <char_to_case input="7753" upper="7752" lower="7753" />
    <char_to_case input="7754" upper="7754" lower="7755" />
    <char_to_case input="7755" upper="7754" lower="7755" />
    <char_to_case input="7756" upper="7756" lower="7757" />
    <char_to_case input="7757" upper="7756" lower="7757" />
    <char_to_case input="7758" upper="7758" lower="7759" />
    <char_to_case input="7759" upper="7758" lower="7759" />
    <char_to_case input="7760" upper="7760" lower="7761" />
    <char_to_case input="7761" upper="7760" lower="7761" />
    <char_to_case input="7762" upper="7762" lower="7763" />
    <char_to_case input="7763" upper="7762" lower="7763" />
    <char_to_case input="7764" upper="7764" lower="7765" />
    <char_to_case input="7765" upper="7764" lower="7765" />
    <char_to_case input="7766" upper="7766" lower="7767" />
    <char_to_case input="7767" upper="7766" lower="7767" />
    <char_to_case input="7768" upper="7768" lower="7769" />
    <char_to_case input="7769" upper="7768" lower="7769" />
    <char_to_case input="7770" upper="7770" lower="7771" />
    <char_to_case input="7771" upper="7770" lower="7771" />
    <char_to_case input="7772" upper="7772" lower="7773" />
    <char_to_case input="7773" upper="7772" lower="7773" />
    <char_to_case input="7774" upper="7774" lower="7775" />
    <char_to_case input="7775" upper="7774" lower="7775" />
    <char_to_case input="7776" upper="7776" lower="7777" />
    <char_to_case input="7777" upper="7776" lower="7777" />
    <char_to_case input="7778" upper="7778" lower="7779" />
    <char_to_case input="7779" upper="7778" lower="7779" />
    <char_to_case input="7780" upper="7780" lower="7781" />
    <char_to_case input="7781" upper="7780" lower="7781" />
    <char_to_case input="7782" upper="7782" lower="7783" />
    <char_to_case input="7783" upper="7782" lower="7783" />
    <char_to_case input="7784" upper="7784" lower="7785" />
    <char_to_case input="7785" upper="7784" lower="7785" />
    <char_to_case input="7786" upper="7786" lower="7787" />
    <char_to_case input="7787" upper="7786" lower="7787" />
    <char_to_case input="7788" upper="7788" lower="7789" />
    <char_to_case input="7789" upper="7788" lower="7789" />
    <char_to_case input="7790" upper="7790" lower="7791" />
    <char_to_case input="7791" upper="7790" lower="7791" />
    <char_to_case input="7792" upper="7792" lower="7793" />
    <char_to_case input="7793" upper="7792" lower="7793" />
    <char_to_case input="7794" upper="7794" lower="7795" />
    <char_to_case input="7795" upper="7794" lower="7795" />
    <char_to_case input="7796" upper="7796" lower="7797" />
    <char_to_case input="7797" upper="7796" lower="7797" />
    <char_to_case input="7798" upper="7798" lower="7799" />
    <char_to_case input="7799" upper="7798" lower="7799" />
    <char_to_case input="7800" upper="7800" lower="7801" />
    <char_to_case input="7801" upper="7800" lower="7801" />
    <char_to_case input="7802" upper="7802" lower="7803" />
    <char_to_case input="7803" upper="7802" lower="7803" />
    <char_to_case input="7804" upper="7804" lower="7805" />
    <char_to_case input="7805" upper="7804" lower="7805" />
    <char_to_case input="7806" upper="7806" lower="7807" />
    <char_to_case input="7807" upper="7806" lower="7807" />
    <char_to_case input="7808" upper="7808" lower="7809" />
    <char_to_case input="7809" upper="7808" lower="7809" />
    <char_to_case input="7810" upper="7810" lower="7811" />
    <char_to_case input="7811" upper="7810" lower="7811" />
    <char_to_case input="7812" upper="7812" lower="7813" />
    <char_to_case input="7813" upper="7812" lower="7813" />
    <char_to_case input="7814" upper="7814" lower="7815" />
    <char_to_case input="7815" upper="7814" lower="7815" />
    <char_to_case input="7816" upper="7816" lower="7817" />
    <char_to_case input="7817" upper="7816" lower="7817" />
    <char_to_case input="7818" upper="7818" lower="7819" />
    <char_to_case input="7819" upper="7818" lower="7819" />
    <char_to_case input="7820" upper="7820" lower="7821" />
    <char_to_case input="7821" upper="7820" lower="7821" />
    <char_to_case input="7822" upper="7822" lower="7823" />
    <char_to_case input="7823" upper="7822" lower="7823" />
    <char_to_case input="7824" upper="7824" lower="7825" />
    <char_to_case input="7825" upper="7824" lower="7825" />
    <char_to_case input="7826" upper="7826" lower="7827" />
    <char_to_case input="7827" upper="7826" lower="7827" />
    <char_to_case input="7828" upper="7828" lower="7829" />
    <char_to_case input="7829" upper="7828" lower="7829" />
    <char_to_case input="7835" upper="7776" lower="7835" />
    <char_to_case input="7838" upper="7838" lower="223" />
    <char_to_case input="7840" upper="7840" lower="7841" />
    <char_to_case input="7841" upper="7840" lower="7841" />
    <char_to_case input="7842" upper="7842" lower="7843" />
    <char_to_case input="7843" upper="7842" lower="7843" />
    <char_to_case input="7844" upper="7844" lower="7845" />
    <char_to_case input="7845" upper="7844" lower="7845" />
    <char_to_case input="7846" upper="7846" lower="7847" />
    <char_to_case input="7847" upper="7846" lower="7847" />
    <char_to_case input="7848" upper="7848" lower="7849" />
    <char_to_case input="7849" upper="7848" lower="7849" />
    <char_to_case input="7850" upper="7850" lower="7851" />
    <char_to_case input="7851" upper="7850" lower="7851" />
    <char_to_case input="7852" upper="7852" lower="7853" />
    <char_to_case input="7853" upper="7852" lower="7853" />
    <char_to_case input="7854" upper="7854" lower="7855" />
    <char_to_case input="7855" upper="7854" lower="7855" />
    <char_to_case input="7856" upper="7856" lower="7857" />
    <char_to_case input="7857" upper="7856" lower="7857" />
    <char_to_case input="7858" upper="7858" lower="7859" />
    <char_to_case input="7859" upper="7858" lower="7859" />
    <char_to_case input="7860" upper="7860" lower="7861" />
    <char_to_case input="7861" upper="7860" lower="7861" />
    <char_to_case input="7862" upper="7862" lower="7863" />
    <char_to_case input="7863" upper="7862" lower="7863" />
    <char_to_case input="7864" upper="7864" lower="7865" />
    <char_to_case input="7865" upper="7864" lower="7865" />
    <char_to_case input="7866" upper="7866" lower="7867" />
    <char_to_case input="7867" upper="7866" lower="7867" />
    <char_to_case input="7868" upper="7868" lower="7869" />
    <char_to_case input="7869" upper="7868" lower="7869" />
    <char_to_case input="7870" upper="7870" lower="7871" />
    <char_to_case input="7871" upper="7870" lower="7871" />
    <char_to_case input="7872" upper="7872" lower="7873" />
    <char_to_case input="7873" upper="7872" lower="7873" />
    <char_to_case input="7874" upper="7874" lower="7875" />
    <char_to_case input="7875" upper="7874" lower="7875" />
    <char_to_case input="7876" upper="7876" lower="7877" />
    <char_to_case input="7877" upper="7876" lower="7877" />
    <char_to_case input="7878" upper="7878" lower="7879" />
    <char_to_case input="7879" upper="7878" lower="7879" />
    <char_to_case input="7880" upper="7880" lower="7881" />
    <char_to_case input="7881" upper="7880" lower="7881" />
    <char_to_case input="7882" upper="7882" lower="7883" />
    <char_to_case input="7883" upper="7882" lower="7883" />
    <char_to_case input="7884" upper="7884" lower="7885" />
    <char_to_case input="7885" upper="7884" lower="7885" />
    <char_to_case input="7886" upper="7886" lower="7887" />
    <char_to_case input="7887" upper="7886" lower="7887" />
    <char_to_case input="7888" upper="7888" lower="7889" />
    <char_to_case input="7889" upper="7888" lower="7889" />
    <char_to_case input="7890" upper="7890" lower="7891" />
    <char_to_case input="7891" upper="7890" lower="7891" />
    <char_to_case input="7892" upper="7892" lower="7893" />
    <char_to_case input="7893" upper="7892" lower="7893" />
    <char_to_case input="7894" upper="7894" lower="7895" />
    <char_to_case input="7895" upper="7894" lower="7895" />
    <char_to_case input="7896" upper="7896" lower="7897" />
    <char_to_case input="7897" upper="7896" lower="7897" />
    <char_to_case input="7898" upper="7898" lower="7899" />
    <char_to_case input="7899" upper="7898" lower="7899" />
    <char_to_case input="7900" upper="7900" lower="7901" />
    <char_to_case input="7901" upper="7900" lower="7901" />
    <char_to_case input="7902" upper="7902" lower="7903" />
    <char_to_case input="7903" upper="7902" lower="7903" />
    <char_to_case input="7904" upper="7904" lower="7905" />
    <char_to_case input="7905" upper="7904" lower="7905" />
    <char_to_case input="7906" upper="7906" lower="7907" />
    <char_to_case input="7907" upper="7906" lower="7907" />
    <char_to_case input="7908" upper="7908" lower="7909" />
    <char_to_case input="7909" upper="7908" lower="7909" />
    <char_to_case input="7910" upper="7910" lower="7911" />
    <char_to_case input="7911" upper="7910" lower="7911" />
    <char_to_case input="7912" upper="7912" lower="7913" />
    <char_to_case input="7913" upper="7912" lower="7913" />
    <char_to_case input="7914" upper="7914" lower="7915" />
    <char_to_case input="7915" upper="7914" lower="7915" />
    <char_to_case input="7916" upper="7916" lower="7917" />
    <char_to_case input="7917" upper="7916" lower="7917" />
    <char_to_case input="7918" upper="7918" lower="7919" />
    <char_to_case input="7919" upper="7918" lower="7919" />
    <char_to_case input="7920" upper="7920" lower="7921" />
    <char_to_case input="7921" upper="7920" lower="7921" />
    <char_to_case input="7922" upper="7922" lower="7923" />
    <char_to_case input="7923" upper="7922" lower="7923" />
    <char_to_case input="7924" upper="7924" lower="7925" />
    <char_to_case input="7925" upper="7924" lower="7925" />
    <char_to_case input="7926" upper="7926" lower="7927" />
    <char_to_case input="7927" upper="7926" lower="7927" />
    <char_to_case input="7928" upper="7928" lower="7929" />
    <char_to_case input="7929" upper="7928" lower="7929" />
    <char_to_case input="7930" upper="7930" lower="7931" />
    <char_to_case input="7931" upper="7930" lower="7931" />
    <char_to_case input="7932" upper="7932" lower="7933" />
    <char_to_case input="7933" upper="7932" lower="7933" />
    <char_to_case input="7934" upper="7934" lower="7935" />
    <char_to_case input="7935" upper="7934" lower="7935" />
    <char_to_case input="7936" upper="7944" lower="7936" />
    <char_to_case input="7937" upper="7945" lower="7937" />
    <char_to_case input="7938" upper="7946" lower="7938" />
    <char_to_case input="7939" upper="7947" lower="7939" />
    <char_to_case input="7940" upper="7948" lower="7940" />
    <char_to_case input="7941" upper="7949" lower="7941" />
    <char_to_case input="7942" upper="7950" lower="7942" />
    <char_to_case input="7943" upper="7951" lower="7943" />
    <char_to_case input="7944" upper="7944" lower="7936" />
    <char_to_case input="7945" upper="7945" lower="7937" />
    <char_to_case input="7946" upper="7946" lower="7938" />
    <char_to_case input="7947" upper="7947" lower="7939" />
    <char_to_case input="7948" upper="7948" lower="7940" />
    <char_to_case input="7949" upper="7949" lower="7941" />
    <char_to_case input="7950" upper="7950" lower="7942" />
    <char_to_case input="7951" upper="7951" lower="7943" />
    <char_to_case input="7952" upper="7960" lower="7952" />
    <char_to_case input="7953" upper="7961" lower="7953" />
    <char_to_case input="7954" upper="7962" lower="7954" />
    <char_to_case input="7955" upper="7963" lower="7955" />
    <char_to_case input="7956" upper="7964" lower="7956" />
    <char_to_case input="7957" upper="7965" lower="7957" />
    <char_to_case input="7960" upper="7960" lower="7952" />
    <char_to_case input="7961" upper="7961" lower="7953" />
    <char_to_case input="7962" upper="7962" lower="7954" />
    <char_to_case input="7963" upper="7963" lower="7955" />
    <char_to_case input="7964" upper="7964" lower="7956" />
    <char_to_case input="7965" upper="7965" lower="7957" />
    <char_to_case input="7968" upper="7976" lower="7968" />
    <char_to_case input="7969" upper="7977" lower="7969" />
    <char_to_case input="7970" upper="7978" lower="7970" />
    <char_to_case input="7971" upper="7979" lower="7971" />
    <char_to_case input="7972" upper="7980" lower="7972" />
    <char_to_case input="7973" upper="7981" lower="7973" />
    <char_to_case input="7974" upper="7982" lower="7974" />
    <char_to_case input="7975" upper="7983" lower="7975" />
    <char_to_case input="7976" upper="7976" lower="7968" />
    <char_to_case input="7977" upper="7977" lower="7969" />
    <char_to_case input="7978" upper="7978" lower="7970" />
    <char_to_case input="7979" upper="7979" lower="7971" />
    <char_to_case input="7980" upper="7980" lower="7972" />
    <char_to_case input="7981" upper="7981" lower="7973" />
    <char_to_case input="7982" upper="7982" lower="7974" />
    <char_to_case input="7983" upper="7983" lower="7975" />
    <char_to_case input="7984" upper="7992" lower="7984" />
    <char_to_case input="7985" upper="7993" lower="7985" />
    <char_to_case input="7986" upper="7994" lower="7986" />
    <char_to_case input="7987" upper="7995" lower="7987" />
    <char_to_case input="7988" upper="7996" lower="7988" />
    <char_to_case input="7989" upper="7997" lower="7989" />
    <char_to_case input="7990" upper="7998" lower="7990" />
    <char_to_case input="7991" upper="7999" lower="7991" />
    <char_to_case input="7992" upper="7992" lower="7984" />
    <char_to_case input="7993" upper="7993" lower="7985" />
    <char_to_case input="7994" upper="7994" lower="7986" />
    <char_to_case input="7995" upper="7995" lower="7987" />
    <char_to_case input="7996" upper="7996" lower="7988" />
    <char_to_case input="7997" upper="7997" lower="7989" />
    <char_to_case input="7998" upper="7998" lower="7990" />
    <char_to_case input="7999" upper="7999" lower="7991" />
    <char_to_case input="8000" upper="8008" lower="8000" />
    <char_to_case input="8001" upper="8009" lower="8001" />
    <char_to_case input="8002" upper="8010" lower="8002" />
    <char_to_case input="8003" upper="8011" lower="8003" />
    <char_to_case input="8004" upper="8012" lower="8004" />
    <char_to_case input="8005" upper="8013" lower="8005" />
    <char_to_case input="8008" upper="8008" lower="8000" />
    <char_to_case input="8009" upper="8009" lower="8001" />
    <char_to_case input="8010" upper="8010" lower="8002" />
    <char_to_case input="8011" upper="8011" lower="8003" />
    <char_to_case input="8012" upper="8012" lower="8004" />
    <char_to_case input="8013" upper="8013" lower="8005" />
    <char_to_case input="8017" upper="8025" lower="8017" />
    <char_to_case input="8019" upper="8027" lower="8019" />
    <char_to_case input="8021" upper="8029" lower="8021" />
    <char_to_case input="8023" upper="8031" lower="8023" />
    <char_to_case input="8025" upper="8025" lower="8017" />
    <char_to_case input="8027" upper="8027" lower="8019" />
    <char_to_case input="8029" upper="8029" lower="8021" />
    <char_to_case input="8031" upper="8031" lower="8023" />
    <char_to_case input="8032" upper="8040" lower="8032" />
    <char_to_case input="8033" upper="8041" lower="8033" />
    <char_to_case input="8034" upper="8042" lower="8034" />
    <char_to_case input="8035" upper="8043" lower="8035" />
    <char_to_case input="8036" upper="8044" lower="8036" />
    <char_to_case input="8037" upper="8045" lower="8037" />
    <char_to_case input="8038" upper="8046" lower="8038" />
    <char_to_case input="8039" upper="8047" lower="8039" />
    <char_to_case input="8040" upper="8040" lower="8032" />
    <char_to_case input="8041" upper="8041" lower="8033" />
    <char_to_case input="8042" upper="8042" lower="8034" />
    <char_to_case input="8043" upper="8043" lower="8035" />
    <char_to_case input="8044" upper="8044" lower="8036" />
    <char_to_case input="8045" upper="8045" lower="8037" />
    <char_to_case input="8046" upper="8046" lower="8038" />
    <char_to_case input="8047" upper="8047" lower="8039" />
    <char_to_case input="8048" upper="8122" lower="8048" />
    <char_to_case input="8049" upper="8123" lower="8049" />
    <char_to_case input="8050" upper="8136" lower="8050" />
    <char_to_case input="8051" upper="8137" lower="8051" />
    <char_to_case input="8052" upper="8138" lower="8052" />
    <char_to_case input="8053" upper="8139" lower="8053" />
    <char_to_case input="8054" upper="8154" lower="8054" />
    <char_to_case input="8055" upper="8155" lower="8055" />
    <char_to_case input="8056" upper="8184" lower="8056" />
    <char_to_case input="8057" upper="8185" lower="8057" />
    <char_to_case input="8058" upper="8170" lower="8058" />
    <char_to_case input="8059" upper="8171" lower="8059" />
    <char_to_case input="8060" upper="8186" lower="8060" />
    <char_to_case input="8061" upper="8187" lower="8061" />
    <char_to_case input="8064" upper="8072" lower="8064" />
    <char_to_case input="8065" upper="8073" lower="8065" />
    <char_to_case input="8066" upper="8074" lower="8066" />
    <char_to_case input="8067" upper="8075" lower="8067" />
    <char_to_case input="8068" upper="8076" lower="8068" />
    <char_to_case input="8069" upper="8077" lower="8069" />
    <char_to_case input="8070" upper="8078" lower="8070" />
    <char_to_case input="8071" upper="8079" lower="8071" />
    <char_to_case input="8072" upper="8072" lower="8064" />
    <char_to_case input="8073" upper="8073" lower="8065" />
    <char_to_case input="8074" upper="8074" lower="8066" />
    <char_to_case input="8075" upper="8075" lower="8067" />
    <char_to_case input="8076" upper="8076" lower="8068" />
    <char_to_case input="8077" upper="8077" lower="8069" />
    <char_to_case input="8078" upper="8078" lower="8070" />
    <char_to_case input="8079" upper="8079" lower="8071" />
    <char_to_case input="8080" upper="8088" lower="8080" />
    <char_to_case input="8081" upper="8089" lower="8081" />
    <char_to_case input="8082" upper="8090" lower="8082" />
    <char_to_case input="8083" upper="8091" lower="8083" />
    <char_to_case input="8084" upper="8092" lower="8084" />
    <char_to_case input="8085" upper="8093" lower="8085" />
    <char_to_case input="8086" upper="8094" lower="8086" />
    <char_to_case input="8087" upper="8095" lower="8087" />
    <char_to_case input="8088" upper="8088" lower="8080" />
    <char_to_case input="8089" upper="8089" lower="8081" />
    <char_to_case input="8090" upper="8090" lower="8082" />
    <char_to_case input="8091" upper="8091" lower="8083" />
    <char_to_case input="8092" upper="8092" lower="8084" />
    <char_to_case input="8093" upper="8093" lower="8085" />
    <char_to_case input="8094" upper="8094" lower="8086" />
    <char_to_case input="8095" upper="8095" lower="8087" />
    <char_to_case input="8096" upper="8104" lower="8096" />
    <char_to_case input="8097" upper="8105" lower="8097" />
    <char_to_case input="8098" upper="8106" lower="8098" />
    <char_to_case input="8099" upper="8107" lower="8099" />
    <char_to_case input="8100" upper="8108" lower="8100" />
    <char_to_case input="8101" upper="8109" lower="8101" />
    <char_to_case input="8102" upper="8110" lower="8102" />
    <char_to_case input="8103" upper="8111" lower="8103" />
    <char_to_case input="8104" upper="8104" lower="8096" />
    <char_to_case input="8105" upper="8105" lower="8097" />
    <char_to_case input="8106" upper="8106" lower="8098" />
    <char_to_case input="8107" upper="8107" lower="8099" />
    <char_to_case input="8108" upper="8108" lower="8100" />
    <char_to_case input="8109" upper="8109" lower="8101" />
    <char_to_case input="8110" upper="8110" lower="8102" />
    <char_to_case input="8111" upper="8111" lower="8103" />
    <char_to_case input="8112" upper="8120" lower="8112" />
    <char_to_case input="8113" upper="8121" lower="8113" />
    <char_to_case input="8115" upper="8124" lower="8115" />
    <char_to_case input="8120" upper="8120" lower="8112" />
    <char_to_case input="8121" upper="8121" lower="8113" />
    <char_to_case input="8122" upper="8122" lower="8048" />
    <char_to_case input="8123" upper="8123" lower="8049" />
    <char_to_case input="8124" upper="8124" lower="8115" />
    <char_to_case input="8126" upper="921" lower="8126" />
    <char_to_case input="8131" upper="8140" lower="8131" />
    <char_to_case input="8136" upper="8136" lower="8050" />
    <char_to_case input="8137" upper="8137" lower="8051" />
    <char_to_case input="8138" upper="8138" lower="8052" />
    <char_to_case input="8139" upper="8139" lower="8053" />
    <char_to_case input="8140" upper="8140" lower="8131" />
    <char_to_case input="8144" upper="8152" lower="8144" />
    <char_to_case input="8145" upper="8153" lower="8145" />
    <char_to_case input="8152" upper="8152" lower="8144" />
    <char_to_case input="8153" upper="8153" lower="8145" />
    <char_to_case input="8154" upper="8154" lower="8054" />
    <char_to_case input="8155" upper="8155" lower="8055" />
    <char_to_case input="8160" upper="8168" lower="8160" />
    <char_to_case input="8161" upper="8169" lower="8161" />
    <char_to_case input="8165" upper="8172" lower="8165" />
    <char_to_case input="8168" upper="8168" lower="8160" />
    <char_to_case input="8169" upper="8169" lower="8161" />
    <char_to_case input="8170" upper="8170" lower="8058" />
    <char_to_case input="8171" upper="8171" lower="8059" />
    <char_to_case input="8172" upper="8172" lower="8165" />
    <char_to_case input="8179" upper="8188" lower="8179" />
    <char_to_case input="8184" upper="8184" lower="8056" />
    <char_to_case input="8185" upper="8185" lower="8057" />
    <char_to_case input="8186" upper="8186" lower="8060" />
    <char_to_case input="8187" upper="8187" lower="8061" />
    <char_to_case input="8188" upper="8188" lower="8179" />
    <char_to_case input="8486" upper="8486" lower="969" />
    <char_to_case input="8490" upper="8490" lower="107" />
    <char_to_case input="8491" upper="8491" lower="229" />
    <char_to_case input="8498" upper="8498" lower="8526" />
    <char_to_case input="8526" upper="8498" lower="8526" />
    <char_to_case input="8544" upper="8544" lower="8560" />
    <char_to_case input="8545" upper="8545" lower="8561" />
    <char_to_case input="8546" upper="8546" lower="8562" />
    <char_to_case input="8547" upper="8547" lower="8563" />
    <char_to_case input="8548" upper="8548" lower="8564" />
    <char_to_case input="8549" upper="8549" lower="8565" />
    <char_to_case input="8550" upper="8550" lower="8566" />
    <char_to_case input="8551" upper="8551" lower="8567" />
    <char_to_case input="8552" upper="8552" lower="8568" />
    <char_to_case input="8553" upper="8553" lower="8569" />
    <char_to_case input="8554" upper="8554" lower="8570" />
    <char_to_case input="8555" upper="8555" lower="8571" />
    <char_to_case input="8556" upper="8556" lower="8572" />
    <char_to_case input="8557" upper="8557" lower="8573" />
    <char_to_case input="8558" upper="8558" lower="8574" />
    <char_to_case input="8559" upper="8559" lower="8575" />
    <char_to_case input="8560" upper="8544" lower="8560" />
    <char_to_case input="8561" upper="8545" lower="8561" />
    <char_to_case input="8562" upper="8546" lower="8562" />
    <char_to_case input="8563" upper="8547" lower="8563" />
    <char_to_case input="8564" upper="8548" lower="8564" />
    <char_to_case input="8565" upper="8549" lower="8565" />
    <char_to_case input="8566" upper="8550" lower="8566" />
    <char_to_case input="8567" upper="8551" lower="8567" />
    <char_to_case input="8568" upper="8552" lower="8568" />
    <char_to_case input="8569" upper="8553" lower="8569" />
    <char_to_case input="8570" upper="8554" lower="8570" />
    <char_to_case input="8571" upper="8555" lower="8571" />
    <char_to_case input="8572" upper="8556" lower="8572" />
    <char_to_case input="8573" upper="8557" lower="8573" />
    <char_to_case input="8574" upper="8558" lower="8574" />
    <char_to_case input="8575" upper="8559" lower="8575" />
    <char_to_case input="8579" upper="8579" lower="8580" />
    <char_to_case input="8580" upper="8579" lower="8580" />
    <char_to_case input="9398" upper="9398" lower="9424" />
    <char_to_case input="9399" upper="9399" lower="9425" />
    <char_to_case input="9400" upper="9400" lower="9426" />
    <char_to_case input="9401" upper="9401" lower="9427" />
    <char_to_case input="9402" upper="9402" lower="9428" />
    <char_to_case input="9403" upper="9403" lower="9429" />
    <char_to_case input="9404" upper="9404" lower="9430" />
    <char_to_case input="9405" upper="9405" lower="9431" />
    <char_to_case input="9406" upper="9406" lower="9432" />
    <char_to_case input="9407" upper="9407" lower="9433" />
    <char_to_case input="9408" upper="9408" lower="9434" />
    <char_to_case input="9409" upper="9409" lower="9435" />
    <char_to_case input="9410" upper="9410" lower="9436" />
    <char_to_case input="9411" upper="9411" lower="9437" />
    <char_to_case input="9412" upper="9412" lower="9438" />
    <char_to_case input="9413" upper="9413" lower="9439" />
    <char_to_case input="9414" upper="9414" lower="9440" />
    <char_to_case input="9415" upper="9415" lower="9441" />
    <char_to_case input="9416" upper="9416" lower="9442" />
    <char_to_case input="9417" upper="9417" lower="9443" />
    <char_to_case input="9418" upper="9418" lower="9444" />
    <char_to_case input="9419" upper="9419" lower="9445" />
    <char_to_case input="9420" upper="9420" lower="9446" />
    <char_to_case input="9421" upper="9421" lower="9447" />
    <char_to_case input="9422" upper="9422" lower="9448" />
    <char_to_case input="9423" upper="9423" lower="9449" />
    <char_to_case input="9424" upper="9398" lower="9424" />
    <char_to_case input="9425" upper="9399" lower="9425" />
    <char_to_case input="9426" upper="9400" lower="9426" />
    <char_to_case input="9427" upper="9401" lower="9427" />
    <char_to_case input="9428" upper="9402" lower="9428" />
    <char_to_case input="9429" upper="9403" lower="9429" />
    <char_to_case input="9430" upper="9404" lower="9430" />
    <char_to_case input="9431" upper="9405" lower="9431" />
    <char_to_case input="9432" upper="9406" lower="9432" />
    <char_to_case input="9433" upper="9407" lower="9433" />
    <char_to_case input="9434" upper="9408" lower="9434" />
    <char_to_case input="9435" upper="9409" lower="9435" />
    <char_to_case input="9436" upper="9410" lower="9436" />
    <char_to_case input="9437" upper="9411" lower="9437" />
    <char_to_case input="9438" upper="9412" lower="9438" />
    <char_to_case input="9439" upper="9413" lower="9439" />
    <char_to_case input="9440" upper="9414" lower="9440" />
    <char_to_case input="9441" upper="9415" lower="9441" />
    <char_to_case input="9442" upper="9416" lower="9442" />
    <char_to_case input="9443" upper="9417" lower="9443" />
    <char_to_case input="9444" upper="9418" lower="9444" />
    <char_to_case input="9445" upper="9419" lower="9445" />
    <char_to_case input="9446" upper="9420" lower="9446" />
    <char_to_case input="9447" upper="9421" lower="9447" />
    <char_to_case input="9448" upper="9422" lower="9448" />
    <char_to_case input="9449" upper="9423" lower="9449" />
    <char_to_case input="11264" upper="11264" lower="11312" />
    <char_to_case input="11265" upper="11265" lower="11313" />
    <char_to_case input="11266" upper="11266" lower="11314" />
    <char_to_case input="11267" upper="11267" lower="11315" />
    <char_to_case input="11268" upper="11268" lower="11316" />
    <char_to_case input="11269" upper="11269" lower="11317" />
    <char_to_case input="11270" upper="11270" lower="11318" />
    <char_to_case input="11271" upper="11271" lower="11319" />
    <char_to_case input="11272" upper="11272" lower="11320" />
    <char_to_case input="11273" upper="11273" lower="11321" />
    <char_to_case input="11274" upper="11274" lower="11322" />
    <char_to_case input="11275" upper="11275" lower="11323" />
    <char_to_case input="11276" upper="11276" lower="11324" />
    <char_to_case input="11277" upper="11277" lower="11325" />
    <char_to_case input="11278" upper="11278" lower="11326" />
    <char_to_case input="11279" upper="11279" lower="11327" />
    <char_to_case input="11280" upper="11280" lower="11328" />
    <char_to_case input="11281" upper="11281" lower="11329" />
    <char_to_case input="11282" upper="11282" lower="11330" />
    <char_to_case input="11283" upper="11283" lower="11331" />
    <char_to_case input="11284" upper="11284" lower="11332" />
    <char_to_case input="11285" upper="11285" lower="11333" />
    <char_to_case input="11286" upper="11286" lower="11334" />
    <char_to_case input="11287" upper="11287" lower="11335" />
    <char_to_case input="11288" upper="11288" lower="11336" />
    <char_to_case input="11289" upper="11289" lower="11337" />
    <char_to_case input="11290" upper="11290" lower="11338" />
    <char_to_case input="11291" upper="11291" lower="11339" />
    <char_to_case input="11292" upper="11292" lower="11340" />
    <char_to_case input="11293" upper="11293" lower="11341" />
    <char_to_case input="11294" upper="11294" lower="11342" />
    <char_to_case input="11295" upper="11295" lower="11343" />
    <char_to_case input="11296" upper="11296" lower="11344" />
    <char_to_case input="11297" upper="11297" lower="11345" />
    <char_to_case input="11298" upper="11298" lower="11346" />
    <char_to_case input="11299" upper="11299" lower="11347" />
    <char_to_case input="11300" upper="11300" lower="11348" />
    <char_to_case input="11301" upper="11301" lower="11349" />
    <char_to_case input="11302" upper="11302" lower="11350" />
    <char_to_case input="11303" upper="11303" lower="11351" />
    <char_to_case input="11304" upper="11304" lower="11352" />
    <char_to_case input="11305" upper="11305" lower="11353" />
    <char_to_case input="11306" upper="11306" lower="11354" />
    <char_to_case input="11307" upper="11307" lower="11355" />
    <char_to_case input="11308" upper="11308" lower="11356" />
    <char_to_case input="11309" upper="11309" lower="11357" />
    <char_to_case input="11310" upper="11310" lower="11358" />
    <char_to_case input="11312" upper="11264" lower="11312" />
    <char_to_case input="11313" upper="11265" lower="11313" />
    <char_to_case input="11314" upper="11266" lower="11314" />
    <char_to_case input="11315" upper="11267" lower="11315" />
    <char_to_case input="11316" upper="11268" lower="11316" />
    <char_to_case input="11317" upper="11269" lower="11317" />
    <char_to_case input="11318" upper="11270" lower="11318" />
    <char_to_case input="11319" upper="11271" lower="11319" />
    <char_to_case input="11320" upper="11272" lower="11320" />
    <char_to_case input="11321" upper="11273" lower="11321" />
    <char_to_case input="11322" upper="11274" lower="11322" />
    <char_to_case input="11323" upper="11275" lower="11323" />
    <char_to_case input="11324" upper="11276" lower="11324" />
    <char_to_case input="11325" upper="11277" lower="11325" />
    <char_to_case input="11326" upper="11278" lower="11326" />
    <char_to_case input="11327" upper="11279" lower="11327" />
    <char_to_case input="11328" upper="11280" lower="11328" />
    <char_to_case input="11329" upper="11281" lower="11329" />
    <char_to_case input="11330" upper="11282" lower="11330" />
    <char_to_case input="11331" upper="11283" lower="11331" />
    <char_to_case input="11332" upper="11284" lower="11332" />
    <char_to_case input="11333" upper="11285" lower="11333" />
    <char_to_case input="11334" upper="11286" lower="11334" />
    <char_to_case input="11335" upper="11287" lower="11335" />
    <char_to_case input="11336" upper="11288" lower="11336" />
    <char_to_case input="11337" upper="11289" lower="11337" />
    <char_to_case input="11338" upper="11290" lower="11338" />
    <char_to_case input="11339" upper="11291" lower="11339" />
    <char_to_case input="11340" upper="11292" lower="11340" />
    <char_to_case input="11341" upper="11293" lower="11341" />
    <char_to_case input="11342" upper="11294" lower="11342" />
    <char_to_case input="11343" upper="11295" lower="11343" />
    <char_to_case input="11344" upper="11296" lower="11344" />
    <char_to_case input="11345" upper="11297" lower="11345" />
    <char_to_case input="11346" upper="11298" lower="11346" />
    <char_to_case input="11347" upper="11299" lower="11347" />
    <char_to_case input="11348" upper="11300" lower="11348" />
    <char_to_case input="11349" upper="11301" lower="11349" />
    <char_to_case input="11350" upper="11302" lower="11350" />
    <char_to_case input="11351" upper="11303" lower="11351" />
    <char_to_case input="11352" upper="11304" lower="11352" />
    <char_to_case input="11353" upper="11305" lower="11353" />
    <char_to_case input="11354" upper="11306" lower="11354" />
    <char_to_case input="11355" upper="11307" lower="11355" />
    <char_to_case input="11356" upper="11308" lower="11356" />
    <char_to_case input="11357" upper="11309" lower="11357" />
    <char_to_case input="11358" upper="11310" lower="11358" />
    <char_to_case input="11360" upper="11360" lower="11361" />
    <char_to_case input="11361" upper="11360" lower="11361" />
    <char_to_case input="11362" upper="11362" lower="619" />
    <char_to_case input="11363" upper="11363" lower="7549" />
    <char_to_case input="11364" upper="11364" lower="637" />
    <char_to_case input="11365" upper="570" lower="11365" />
    <char_to_case input="11366" upper="574" lower="11366" />
    <char_to_case input="11367" upper="11367" lower="11368" />
    <char_to_case input="11368" upper="11367" lower="11368" />
    <char_to_case input="11369" upper="11369" lower="11370" />
    <char_to_case input="11370" upper="11369" lower="11370" />
    <char_to_case input="11371" upper="11371" lower="11372" />
    <char_to_case input="11372" upper="11371" lower="11372" />
    <char_to_case input="11373" upper="11373" lower="593" />
    <char_to_case input="11374" upper="11374" lower="625" />
    <char_to_case input="11375" upper="11375" lower="592" />
    <char_to_case input="11378" upper="11378" lower="11379" />
    <char_to_case input="11379" upper="11378" lower="11379" />
    <char_to_case input="11381" upper="11381" lower="11382" />
    <char_to_case input="11382" upper="11381" lower="11382" />
    <char_to_case input="11392" upper="11392" lower="11393" />
    <char_to_case input="11393" upper="11392" lower="11393" />
    <char_to_case input="11394" upper="11394" lower="11395" />
    <char_to_case input="11395" upper="11394" lower="11395" />
    <char_to_case input="11396" upper="11396" lower="11397" />
    <char_to_case input="11397" upper="11396" lower="11397" />
    <char_to_case input="11398" upper="11398" lower="11399" />
    <char_to_case input="11399" upper="11398" lower="11399" />
    <char_to_case input="11400" upper="11400" lower="11401" />
    <char_to_case input="11401" upper="11400" lower="11401" />
    <char_to_case input="11402" upper="11402" lower="11403" />
    <char_to_case input="11403" upper="11402" lower="11403" />
    <char_to_case input="11404" upper="11404" lower="11405" />
    <char_to_case input="11405" upper="11404" lower="11405" />
    <char_to_case input="11406" upper="11406" lower="11407" />
    <char_to_case input="11407" upper="11406" lower="11407" />
    <char_to_case input="11408" upper="11408" lower="11409" />
    <char_to_case input="11409" upper="11408" lower="11409" />
    <char_to_case input="11410" upper="11410" lower="11411" />
    <char_to_case input="11411" upper="11410" lower="11411" />
    <char_to_case input="11412" upper="11412" lower="11413" />
    <char_to_case input="11413" upper="11412" lower="11413" />
    <char_to_case input="11414" upper="11414" lower="11415" />
    <char_to_case input="11415" upper="11414" lower="11415" />
    <char_to_case input="11416" upper="11416" lower="11417" />
    <char_to_case input="11417" upper="11416" lower="11417" />
    <char_to_case input="11418" upper="11418" lower="11419" />
    <char_to_case input="11419" upper="11418" lower="11419" />
    <char_to_case input="11420" upper="11420" lower="11421" />
    <char_to_case input="11421" upper="11420" lower="11421" />
    <char_to_case input="11422" upper="11422" lower="11423" />
    <char_to_case input="11423" upper="11422" lower="11423" />
    <char_to_case input="11424" upper="11424" lower="11425" />
    <char_to_case input="11425" upper="11424" lower="11425" />
    <char_to_case input="11426" upper="11426" lower="11427" />
    <char_to_case input="11427" upper="11426" lower="11427" />
    <char_to_case input="11428" upper="11428" lower="11429" />
    <char_to_case input="11429" upper="11428" lower="11429" />
    <char_to_case input="11430" upper="11430" lower="11431" />
    <char_to_case input="11431" upper="11430" lower="11431" />
    <char_to_case input="11432" upper="11432" lower="11433" />
    <char_to_case input="11433" upper="11432" lower="11433" />
    <char_to_case input="11434" upper="11434" lower="11435" />
    <char_to_case input="11435" upper="11434" lower="11435" />
    <char_to_case input="11436" upper="11436" lower="11437" />
    <char_to_case input="11437" upper="11436" lower="11437" />
    <char_to_case input="11438" upper="11438" lower="11439" />
    <char_to_case input="11439" upper="11438" lower="11439" />
    <char_to_case input="11440" upper="11440" lower="11441" />
    <char_to_case input="11441" upper="11440" lower="11441" />
    <char_to_case input="11442" upper="11442" lower="11443" />
    <char_to_case input="11443" upper="11442" lower="11443" />
    <char_to_case input="11444" upper="11444" lower="11445" />
    <char_to_case input="11445" upper="11444" lower="11445" />
    <char_to_case input="11446" upper="11446" lower="11447" />
    <char_to_case input="11447" upper="11446" lower="11447" />
    <char_to_case input="11448" upper="11448" lower="11449" />
    <char_to_case input="11449" upper="11448" lower="11449" />
    <char_to_case input="11450" upper="11450" lower="11451" />
    <char_to_case input="11451" upper="11450" lower="11451" />
    <char_to_case input="11452" upper="11452" lower="11453" />
    <char_to_case input="11453" upper="11452" lower="11453" />
    <char_to_case input="11454" upper="11454" lower="11455" />
    <char_to_case input="11455" upper="11454" lower="11455" />
    <char_to_case input="11456" upper="11456" lower="11457" />
    <char_to_case input="11457" upper="11456" lower="11457" />
    <char_to_case input="11458" upper="11458" lower="11459" />
    <char_to_case input="11459" upper="11458" lower="11459" />
    <char_to_case input="11460" upper="11460" lower="11461" />
    <char_to_case input="11461" upper="11460" lower="11461" />
    <char_to_case input="11462" upper="11462" lower="11463" />
    <char_to_case input="11463" upper="11462" lower="11463" />
    <char_to_case input="11464" upper="11464" lower="11465" />
    <char_to_case input="11465" upper="11464" lower="11465" />
    <char_to_case input="11466" upper="11466" lower="11467" />
    <char_to_case input="11467" upper="11466" lower="11467" />
    <char_to_case input="11468" upper="11468" lower="11469" />
    <char_to_case input="11469" upper="11468" lower="11469" />
    <char_to_case input="11470" upper="11470" lower="11471" />
    <char_to_case input="11471" upper="11470" lower="11471" />
    <char_to_case input="11472" upper="11472" lower="11473" />
    <char_to_case input="11473" upper="11472" lower="11473" />
    <char_to_case input="11474" upper="11474" lower="11475" />
    <char_to_case input="11475" upper="11474" lower="11475" />
    <char_to_case input="11476" upper="11476" lower="11477" />
    <char_to_case input="11477" upper="11476" lower="11477" />
    <char_to_case input="11478" upper="11478" lower="11479" />
    <char_to_case input="11479" upper="11478" lower="11479" />
    <char_to_case input="11480" upper="11480" lower="11481" />
    <char_to_case input="11481" upper="11480" lower="11481" />
    <char_to_case input="11482" upper="11482" lower="11483" />
    <char_to_case input="11483" upper="11482" lower="11483" />
    <char_to_case input="11484" upper="11484" lower="11485" />
    <char_to_case input="11485" upper="11484" lower="11485" />
    <char_to_case input="11486" upper="11486" lower="11487" />
    <char_to_case input="11487" upper="11486" lower="11487" />
    <char_to_case input="11488" upper="11488" lower="11489" />
    <char_to_case input="11489" upper="11488" lower="11489" />
    <char_to_case input="11490" upper="11490" lower="11491" />
    <char_to_case input="11491" upper="11490" lower="11491" />
    <char_to_case input="11520" upper="4256" lower="11520" />
    <char_to_case input="11521" upper="4257" lower="11521" />
    <char_to_case input="11522" upper="4258" lower="11522" />
    <char_to_case input="11523" upper="4259" lower="11523" />
    <char_to_case input="11524" upper="4260" lower="11524" />
    <char_to_case input="11525" upper="4261" lower="11525" />
    <char_to_case input="11526" upper="4262" lower="11526" />
    <char_to_case input="11527" upper="4263" lower="11527" />
    <char_to_case input="11528" upper="4264" lower="11528" />
    <char_to_case input="11529" upper="4265" lower="11529" />
    <char_to_case input="11530" upper="4266" lower="11530" />
    <char_to_case input="11531" upper="4267" lower="11531" />
    <char_to_case input="11532" upper="4268" lower="11532" />
    <char_to_case input="11533" upper="4269" lower="11533" />
    <char_to_case input="11534" upper="4270" lower="11534" />
    <char_to_case input="11535" upper="4271" lower="11535" />
    <char_to_case input="11536" upper="4272" lower="11536" />
    <char_to_case input="11537" upper="4273" lower="11537" />
    <char_to_case input="11538" upper="4274" lower="11538" />
    <char_to_case input="11539" upper="4275" lower="11539" />
    <char_to_case input="11540" upper="4276" lower="11540" />
    <char_to_case input="11541" upper="4277" lower="11541" />
    <char_to_case input="11542" upper="4278" lower="11542" />
    <char_to_case input="11543" upper="4279" lower="11543" />
    <char_to_case input="11544" upper="4280" lower="11544" />
    <char_to_case input="11545" upper="4281" lower="11545" />
    <char_to_case input="11546" upper="4282" lower="11546" />
    <char_to_case input="11547" upper="4283" lower="11547" />
    <char_to_case input="11548" upper="4284" lower="11548" />
    <char_to_case input="11549" upper="4285" lower="11549" />
    <char_to_case input="11550" upper="4286" lower="11550" />
    <char_to_case input="11551" upper="4287" lower="11551" />
    <char_to_case input="11552" upper="4288" lower="11552" />
    <char_to_case input="11553" upper="4289" lower="11553" />
    <char_to_case input="11554" upper="4290" lower="11554" />
    <char_to_case input="11555" upper="4291" lower="11555" />
    <char_to_case input="11556" upper="4292" lower="11556" />
    <char_to_case input="11557" upper="4293" lower="11557" />
    <char_to_case input="42560" upper="42560" lower="42561" />
    <char_to_case input="42561" upper="42560" lower="42561" />
    <char_to_case input="42562" upper="42562" lower="42563" />
    <char_to_case input="42563" upper="42562" lower="42563" />
    <char_to_case input="42564" upper="42564" lower="42565" />
    <char_to_case input="42565" upper="42564" lower="42565" />
    <char_to_case input="42566" upper="42566" lower="42567" />
    <char_to_case input="42567" upper="42566" lower="42567" />
    <char_to_case input="42568" upper="42568" lower="42569" />
    <char_to_case input="42569" upper="42568" lower="42569" />
    <char_to_case input="42570" upper="42570" lower="42571" />
    <char_to_case input="42571" upper="42570" lower="42571" />
    <char_to_case input="42572" upper="42572" lower="42573" />
    <char_to_case input="42573" upper="42572" lower="42573" />
    <char_to_case input="42574" upper="42574" lower="42575" />
    <char_to_case input="42575" upper="42574" lower="42575" />
    <char_to_case input="42576" upper="42576" lower="42577" />
    <char_to_case input="42577" upper="42576" lower="42577" />
    <char_to_case input="42578" upper="42578" lower="42579" />
    <char_to_case input="42579" upper="42578" lower="42579" />
    <char_to_case input="42580" upper="42580" lower="42581" />
    <char_to_case input="42581" upper="42580" lower="42581" />
    <char_to_case input="42582" upper="42582" lower="42583" />
    <char_to_case input="42583" upper="42582" lower="42583" />
    <char_to_case input="42584" upper="42584" lower="42585" />
    <char_to_case input="42585" upper="42584" lower="42585" />
    <char_to_case input="42586" upper="42586" lower="42587" />
    <char_to_case input="42587" upper="42586" lower="42587" />
    <char_to_case input="42588" upper="42588" lower="42589" />
    <char_to_case input="42589" upper="42588" lower="42589" />
    <char_to_case input="42590" upper="42590" lower="42591" />
    <char_to_case input="42591" upper="42590" lower="42591" />
    <char_to_case input="42594" upper="42594" lower="42595" />
    <char_to_case input="42595" upper="42594" lower="42595" />
    <char_to_case input="42596" upper="42596" lower="42597" />
    <char_to_case input="42597" upper="42596" lower="42597" />
    <char_to_case input="42598" upper="42598" lower="42599" />
    <char_to_case input="42599" upper="42598" lower="42599" />
    <char_to_case input="42600" upper="42600" lower="42601" />
    <char_to_case input="42601" upper="42600" lower="42601" />
    <char_to_case input="42602" upper="42602" lower="42603" />
    <char_to_case input="42603" upper="42602" lower="42603" />
    <char_to_case input="42604" upper="42604" lower="42605" />
    <char_to_case input="42605" upper="42604" lower="42605" />
    <char_to_case input="42624" upper="42624" lower="42625" />
    <char_to_case input="42625" upper="42624" lower="42625" />
    <char_to_case input="42626" upper="42626" lower="42627" />
    <char_to_case input="42627" upper="42626" lower="42627" />
    <char_to_case input="42628" upper="42628" lower="42629" />
    <char_to_case input="42629" upper="42628" lower="42629" />
    <char_to_case input="42630" upper="42630" lower="42631" />
    <char_to_case input="42631" upper="42630" lower="42631" />
    <char_to_case input="42632" upper="42632" lower="42633" />
    <char_to_case input="42633" upper="42632" lower="42633" />
    <char_to_case input="42634" upper="42634" lower="42635" />
    <char_to_case input="42635" upper="42634" lower="42635" />
    <char_to_case input="42636" upper="42636" lower="42637" />
    <char_to_case input="42637" upper="42636" lower="42637" />
    <char_to_case input="42638" upper="42638" lower="42639" />
    <char_to_case input="42639" upper="42638" lower="42639" />
    <char_to_case input="42640" upper="42640" lower="42641" />
    <char_to_case input="42641" upper="42640" lower="42641" />
    <char_to_case input="42642" upper="42642" lower="42643" />
    <char_to_case input="42643" upper="42642" lower="42643" />
    <char_to_case input="42644" upper="42644" lower="42645" />
    <char_to_case input="42645" upper="42644" lower="42645" />
    <char_to_case input="42646" upper="42646" lower="42647" />
    <char_to_case input="42647" upper="42646" lower="42647" />
    <char_to_case input="42786" upper="42786" lower="42787" />
    <char_to_case input="42787" upper="42786" lower="42787" />
    <char_to_case input="42788" upper="42788" lower="42789" />
    <char_to_case input="42789" upper="42788" lower="42789" />
    <char_to_case input="42790" upper="42790" lower="42791" />
    <char_to_case input="42791" upper="42790" lower="42791" />
    <char_to_case input="42792" upper="42792" lower="42793" />
    <char_to_case input="42793" upper="42792" lower="42793" />
    <char_to_case input="42794" upper="42794" lower="42795" />
    <char_to_case input="42795" upper="42794" lower="42795" />
    <char_to_case input="42796" upper="42796" lower="42797" />
    <char_to_case input="42797" upper="42796" lower="42797" />
    <char_to_case input="42798" upper="42798" lower="42799" />
    <char_to_case input="42799" upper="42798" lower="42799" />
    <char_to_case input="42802" upper="42802" lower="42803" />
    <char_to_case input="42803" upper="42802" lower="42803" />
    <char_to_case input="42804" upper="42804" lower="42805" />
    <char_to_case input="42805" upper="42804" lower="42805" />
    <char_to_case input="42806" upper="42806" lower="42807" />
    <char_to_case input="42807" upper="42806" lower="42807" />
    <char_to_case input="42808" upper="42808" lower="42809" />
    <char_to_case input="42809" upper="42808" lower="42809" />
    <char_to_case input="42810" upper="42810" lower="42811" />
    <char_to_case input="42811" upper="42810" lower="42811" />
    <char_to_case input="42812" upper="42812" lower="42813" />
    <char_to_case input="42813" upper="42812" lower="42813" />
    <char_to_case input="42814" upper="42814" lower="42815" />
    <char_to_case input="42815" upper="42814" lower="42815" />
    <char_to_case input="42816" upper="42816" lower="42817" />
    <char_to_case input="42817" upper="42816" lower="42817" />
    <char_to_case input="42818" upper="42818" lower="42819" />
    <char_to_case input="42819" upper="42818" lower="42819" />
    <char_to_case input="42820" upper="42820" lower="42821" />
    <char_to_case input="42821" upper="42820" lower="42821" />
    <char_to_case input="42822" upper="42822" lower="42823" />
    <char_to_case input="42823" upper="42822" lower="42823" />
    <char_to_case input="42824" upper="42824" lower="42825" />
    <char_to_case input="42825" upper="42824" lower="42825" />
    <char_to_case input="42826" upper="42826" lower="42827" />
    <char_to_case input="42827" upper="42826" lower="42827" />
    <char_to_case input="42828" upper="42828" lower="42829" />
    <char_to_case input="42829" upper="42828" lower="42829" />
    <char_to_case input="42830" upper="42830" lower="42831" />
    <char_to_case input="42831" upper="42830" lower="42831" />
    <char_to_case input="42832" upper="42832" lower="42833" />
    <char_to_case input="42833" upper="42832" lower="42833" />
    <char_to_case input="42834" upper="42834" lower="42835" />
    <char_to_case input="42835" upper="42834" lower="42835" />
    <char_to_case input="42836" upper="42836" lower="42837" />
    <char_to_case input="42837" upper="42836" lower="42837" />
    <char_to_case input="42838" upper="42838" lower="42839" />
    <char_to_case input="42839" upper="42838" lower="42839" />
    <char_to_case input="42840" upper="42840" lower="42841" />
    <char_to_case input="42841" upper="42840" lower="42841" />
    <char_to_case input="42842" upper="42842" lower="42843" />
    <char_to_case input="42843" upper="42842" lower="42843" />
    <char_to_case input="42844" upper="42844" lower="42845" />
    <char_to_case input="42845" upper="42844" lower="42845" />
    <char_to_case input="42846" upper="42846" lower="42847" />
    <char_to_case input="42847" upper="42846" lower="42847" />
    <char_to_case input="42848" upper="42848" lower="42849" />
    <char_to_case input="42849" upper="42848" lower="42849" />
    <char_to_case input="42850" upper="42850" lower="42851" />
    <char_to_case input="42851" upper="42850" lower="42851" />
    <char_to_case input="42852" upper="42852" lower="42853" />
    <char_to_case input="42853" upper="42852" lower="42853" />
    <char_to_case input="42854" upper="42854" lower="42855" />
    <char_to_case input="42855" upper="42854" lower="42855" />
    <char_to_case input="42856" upper="42856" lower="42857" />
    <char_to_case input="42857" upper="42856" lower="42857" />
    <char_to_case input="42858" upper="42858" lower="42859" />
    <char_to_case input="42859" upper="42858" lower="42859" />
    <char_to_case input="42860" upper="42860" lower="42861" />
    <char_to_case input="42861" upper="42860" lower="42861" />
    <char_to_case input="42862" upper="42862" lower="42863" />
    <char_to_case input="42863" upper="42862" lower="42863" />
    <char_to_case input="42873" upper="42873" lower="42874" />
    <char_to_case input="42874" upper="42873" lower="42874" />
    <char_to_case input="42875" upper="42875" lower="42876" />
    <char_to_case input="42876" upper="42875" lower="42876" />
    <char_to_case input="42877" upper="42877" lower="7545" />
    <char_to_case input="42878" upper="42878" lower="42879" />
    <char_to_case input="42879" upper="42878" lower="42879" />
    <char_to_case input="42880" upper="42880" lower="42881" />
    <char_to_case input="42881" upper="42880" lower="42881" />
    <char_to_case input="42882" upper="42882" lower="42883" />
    <char_to_case input="42883" upper="42882" lower="42883" />
    <char_to_case input="42884" upper="42884" lower="42885" />
    <char_to_case input="42885" upper="42884" lower="42885" />
    <char_to_case input="42886" upper="42886" lower="42887" />
    <char_to_case input="42887" upper="42886" lower="42887" />
    <char_to_case input="42891" upper="42891" lower="42892" />
    <char_to_case input="42892" upper="42891" lower="42892" />
    <char_to_case input="65313" upper="65313" lower="65345" />
    <char_to_case input="65314" upper="65314" lower="65346" />
    <char_to_case input="65315" upper="65315" lower="65347" />
    <char_to_case input="65316" upper="65316" lower="65348" />
    <char_to_case input="65317" upper="65317" lower="65349" />
    <char_to_case input="65318" upper="65318" lower="65350" />
    <char_to_case input="65319" upper="65319" lower="65351" />
    <char_to_case input="65320" upper="65320" lower="65352" />
    <char_to_case input="65321" upper="65321" lower="65353" />
    <char_to_case input="65322" upper="65322" lower="65354" />
    <char_to_case input="65323" upper="65323" lower="65355" />
    <char_to_case input="65324" upper="65324" lower="65356" />
    <char_to_case input="65325" upper="65325" lower="65357" />
    <char_to_case input="65326" upper="65326" lower="65358" />
    <char_to_case input="65327" upper="65327" lower="65359" />
    <char_to_case input="65328" upper="65328" lower="65360" />
    <char_to_case input="65329" upper="65329" lower="65361" />
    <char_to_case input="65330" upper="65330" lower="65362" />
    <char_to_case input="65331" upper="65331" lower="65363" />
    <char_to_case input="65332" upper="65332" lower="65364" />
    <char_to_case input="65333" upper="65333" lower="65365" />
    <char_to_case input="65334" upper="65334" lower="65366" />
    <char_to_case input="65335" upper="65335" lower="65367" />
    <char_to_case input="65336" upper="65336" lower="65368" />
    <char_to_case input="65337" upper="65337" lower="65369" />
    <char_to_case input="65338" upper="65338" lower="65370" />
    <char_to_case input="65345" upper="65313" lower="65345" />
    <char_to_case input="65346" upper="65314" lower="65346" />
    <char_to_case input="65347" upper="65315" lower="65347" />
    <char_to_case input="65348" upper="65316" lower="65348" />
    <char_to_case input="65349" upper="65317" lower="65349" />
    <char_to_case input="65350" upper="65318" lower="65350" />
    <char_to_case input="65351" upper="65319" lower="65351" />
    <char_to_case input="65352" upper="65320" lower="65352" />
    <char_to_case input="65353" upper="65321" lower="65353" />
    <char_to_case input="65354" upper="65322" lower="65354" />
    <char_to_case input="65355" upper="65323" lower="65355" />
    <char_to_case input="65356" upper="65324" lower="65356" />
    <char_to_case input="65357" upper="65325" lower="65357" />
    <char_to_case input="65358" upper="65326" lower="65358" />
    <char_to_case input="65359" upper="65327" lower="65359" />
    <char_to_case input="65360" upper="65328" lower="65360" />
    <char_to_case input="65361" upper="65329" lower="65361" />
    <char_to_case input="65362" upper="65330" lower="65362" />
    <char_to_case input="65363" upper="65331" lower="65363" />
    <char_to_case input="65364" upper="65332" lower="65364" />
    <char_to_case input="65365" upper="65333" lower="65365" />
    <char_to_case input="65366" upper="65334" lower="65366" />
    <char_to_case input="65367" upper="65335" lower="65367" />
    <char_to_case input="65368" upper="65336" lower="65368" />
    <char_to_case input="65369" upper="65337" lower="65369" />
    <char_to_case input="65370" upper="65338" lower="65370" />
    <string_quote>
      <input></input>
      <return>1</return>
      <output>""</output>
    </string_quote>
    <string_quote>
      <input>a b c</input>
      <return>1</return>
      <output>"a b c"</output>
    </string_quote>
    <string_un_quote>
      <input></input>
      <return>1</return>
      <output></output>
    </string_un_quote>
    <string_un_quote>
      <input>"</input>
      <return>1</return>
      <output></output>
    </string_un_quote>
    <string_un_quote>
      <input>"a b c"</input>
      <return>1</return>
      <output>a b c</output>
    </string_un_quote>
    <string_un_quote>
      <input>""a b c""</input>
      <return>1</return>
      <output>a b c</output>
    </string_un_quote>
    <string_un_quote>
      <input>''</input>
      <return>1</return>
      <output></output>
    </string_un_quote>
    <string_un_quote>
      <input>""</input>
      <return>1</return>
      <output></output>
    </string_un_quote>
    <string_equal>
      <input_1></input_1>
      <input_2></input_2>
      <return>1</return>
    </string_equal>
    <string_equal>
      <input_1>a</input_1>
      <input_2>b</input_2>
      <return>0</return>
    </string_equal>
    <string_equal>
      <input_1>c</input_1>
      <input_2>c</input_2>
      <return>1</return>
    </string_equal>
  </TestStringUnit>
  <TestTextEncoding>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>874</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0x2026 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>

      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1250</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0xFFFD 0x201E 0x2026 0x2020 0x2021 0xFFFD 0x2030 0x0160 0x2039 0x015A 0x0164 0x017D 0x0179 </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0x2122 0x0161 0x203A 0x015B 0x0165 0x017E 0x017A </output>
      <output>0x00A0 0x02C7 0x02D8 0x0141 0x00A4 0x0104 0x00A6 0x00A7 0x00A8 0x00A9 0x015E 0x00AB 0x00AC 0x00AD 0x00AE 0x017B </output>
      <output>0x00B0 0x00B1 0x02DB 0x0142 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x0105 0x015F 0x00BB 0x013D 0x02DD 0x013E 0x017C </output>
      <output>0x0154 0x00C1 0x00C2 0x0102 0x00C4 0x0139 0x0106 0x00C7 0x010C 0x00C9 0x0118 0x00CB 0x011A 0x00CD 0x00CE 0x010E </output>
      <output>0x0110 0x0143 0x0147 0x00D3 0x00D4 0x0150 0x00D6 0x00D7 0x0158 0x016E 0x00DA 0x0170 0x00DC 0x00DD 0x0162 0x00DF </output>
      <output>0x0155 0x00E1 0x00E2 0x0103 0x00E4 0x013A 0x0107 0x00E7 0x010D 0x00E9 0x0119 0x00EB 0x011B 0x00ED 0x00EE 0x010F </output>
      <output>0x0111 0x0144 0x0148 0x00F3 0x00F4 0x0151 0x00F6 0x00F7 0x0159 0x016F 0x00FA 0x0171 0x00FC 0x00FD 0x0163 0x02D9 </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1251</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x0402 0x0403 0x201A 0x0453 0x201E 0x2026 0x2020 0x2021 0x20AC 0x2030 0x0409 0x2039 0x040A 0x040C 0x040B 0x040F </output>
      <output>0x0452 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0x2122 0x0459 0x203A 0x045A 0x045C 0x045B 0x045F </output>
      <output>0x00A0 0x040E 0x045E 0x0408 0x00A4 0x0490 0x00A6 0x00A7 0x0401 0x00A9 0x0404 0x00AB 0x00AC 0x00AD 0x00AE 0x0407 </output>
      <output>0x00B0 0x00B1 0x0406 0x0456 0x0491 0x00B5 0x00B6 0x00B7 0x0451 0x2116 0x0454 0x00BB 0x0458 0x0405 0x0455 0x0457 </output>
      <output>0x0410 0x0411 0x0412 0x0413 0x0414 0x0415 0x0416 0x0417 0x0418 0x0419 0x041A 0x041B 0x041C 0x041D 0x041E 0x041F </output>
      <output>0x0420 0x0421 0x0422 0x0423 0x0424 0x0425 0x0426 0x0427 0x0428 0x0429 0x042A 0x042B 0x042C 0x042D 0x042E 0x042F </output>
      <output>0x0430 0x0431 0x0432 0x0433 0x0434 0x0435 0x0436 0x0437 0x0438 0x0439 0x043A 0x043B 0x043C 0x043D 0x043E 0x043F </output>
      <output>0x0440 0x0441 0x0442 0x0443 0x0444 0x0445 0x0446 0x0447 0x0448 0x0449 0x044A 0x044B 0x044C 0x044D 0x044E 0x044F </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1252</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0x0160 0x2039 0x0152 0xFFFD 0x017D 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x02DC 0x2122 0x0161 0x203A 0x0153 0xFFFD 0x017E 0x0178 </output>
      <output>0x00A0 0x00A1 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x00AA 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x00BA 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF </output>
      <output>0x00C0 0x00C1 0x00C2 0x00C3 0x00C4 0x00C5 0x00C6 0x00C7 0x00C8 0x00C9 0x00CA 0x00CB 0x00CC 0x00CD 0x00CE 0x00CF </output>
      <output>0x00D0 0x00D1 0x00D2 0x00D3 0x00D4 0x00D5 0x00D6 0x00D7 0x00D8 0x00D9 0x00DA 0x00DB 0x00DC 0x00DD 0x00DE 0x00DF </output>
      <output>0x00E0 0x00E1 0x00E2 0x00E3 0x00E4 0x00E5 0x00E6 0x00E7 0x00E8 0x00E9 0x00EA 0x00EB 0x00EC 0x00ED 0x00EE 0x00EF </output>
      <output>0x00F0 0x00F1 0x00F2 0x00F3 0x00F4 0x00F5 0x00F6 0x00F7 0x00F8 0x00F9 0x00FA 0x00FB 0x00FC 0x00FD 0x00FE 0x00FF </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1253</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0xFFFD 0x2030 0xFFFD 0x2039 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0x2122 0xFFFD 0x203A 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0x00A0 0x0385 0x0386 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0xFFFD 0x00AB 0x00AC 0x00AD 0x00AE 0x2015 </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x0384 0x00B5 0x00B6 0x00B7 0x0388 0x0389 0x038A 0x00BB 0x038C 0x00BD 0x038E 0x038F </output>
      <output>0x0390 0x0391 0x0392 0x0393 0x0394 0x0395 0x0396 0x0397 0x0398 0x0399 0x039A 0x039B 0x039C 0x039D 0x039E 0x039F </output>
      <output>0x03A0 0x03A1 0xFFFD 0x03A3 0x03A4 0x03A5 0x03A6 0x03A7 0x03A8 0x03A9 0x03AA 0x03AB 0x03AC 0x03AD 0x03AE 0x03AF </output>
      <output>0x03B0 0x03B1 0x03B2 0x03B3 0x03B4 0x03B5 0x03B6 0x03B7 0x03B8 0x03B9 0x03BA 0x03BB 0x03BC 0x03BD 0x03BE 0x03BF </output>
      <output>0x03C0 0x03C1 0x03C2 0x03C3 0x03C4 0x03C5 0x03C6 0x03C7 0x03C8 0x03C9 0x03CA 0x03CB 0x03CC 0x03CD 0x03CE 0xFFFD </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1254</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0x0160 0x2039 0x0152 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x02DC 0x2122 0x0161 0x203A 0x0153 0xFFFD 0xFFFD 0x0178 </output>
      <output>0x00A0 0x00A1 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x00AA 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x00BA 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF </output>
      <output>0x00C0 0x00C1 0x00C2 0x00C3 0x00C4 0x00C5 0x00C6 0x00C7 0x00C8 0x00C9 0x00CA 0x00CB 0x00CC 0x00CD 0x00CE 0x00CF </output>
      <output>0x011E 0x00D1 0x00D2 0x00D3 0x00D4 0x00D5 0x00D6 0x00D7 0x00D8 0x00D9 0x00DA 0x00DB 0x00DC 0x0130 0x015E 0x00DF </output>
      <output>0x00E0 0x00E1 0x00E2 0x00E3 0x00E4 0x00E5 0x00E6 0x00E7 0x00E8 0x00E9 0x00EA 0x00EB 0x00EC 0x00ED 0x00EE 0x00EF </output>
      <output>0x011F 0x00F1 0x00F2 0x00F3 0x00F4 0x00F5 0x00F6 0x00F7 0x00F8 0x00F9 0x00FA 0x00FB 0x00FC 0x0131 0x015F 0x00FF </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1255</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0xFFFD 0x2039 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x02DC 0x2122 0xFFFD 0x203A 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0x00A0 0x00A1 0x00A2 0x00A3 0x20AA 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x00D7 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x00F7 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF </output>
      <output>0x05B0 0x05B1 0x05B2 0x05B3 0x05B4 0x05B5 0x05B6 0x05B7 0x05B8 0x05B9 0xFFFD 0x05BB 0x05BC 0x05BD 0x05BE 0x05BF </output>
      <output>0x05C0 0x05C1 0x05C2 0x05C3 0x05F0 0x05F1 0x05F2 0x05F3 0x05F4 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0x05D0 0x05D1 0x05D2 0x05D3 0x05D4 0x05D5 0x05D6 0x05D7 0x05D8 0x05D9 0x05DA 0x05DB 0x05DC 0x05DD 0x05DE 0x05DF </output>
      <output>0x05E0 0x05E1 0x05E2 0x05E3 0x05E4 0x05E5 0x05E6 0x05E7 0x05E8 0x05E9 0x05EA 0xFFFD 0xFFFD 0x200E 0x200F 0xFFFD </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1256</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0x067E 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0x0679 0x2039 0x0152 0x0686 0x0698 0x0688 </output>
      <output>0x06AF 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x06A9 0x2122 0x0691 0x203A 0x0153 0x200C 0x200D 0x06BA </output>
      <output>0x00A0 0x060C 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x06BE 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x061B 0x00BB 0x00BC 0x00BD 0x00BE 0x061F </output>
      <output>0x06C1 0x0621 0x0622 0x0623 0x0624 0x0625 0x0626 0x0627 0x0628 0x0629 0x062A 0x062B 0x062C 0x062D 0x062E 0x062F </output>
      <output>0x0630 0x0631 0x0632 0x0633 0x0634 0x0635 0x0636 0x00D7 0x0637 0x0638 0x0639 0x063A 0x0640 0x0641 0x0642 0x0643 </output>
      <output>0x00E0 0x0644 0x00E2 0x0645 0x0646 0x0647 0x0648 0x00E7 0x00E8 0x00E9 0x00EA 0x00EB 0x0649 0x064A 0x00EE 0x00EF </output>
      <output>0x064B 0x064C 0x064D 0x064E 0x00F4 0x064F 0x0650 0x00F7 0x0651 0x00F9 0x0652 0x00FB 0x00FC 0x200E 0x200F 0x06D2 </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1257</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0xFFFD 0x201E 0x2026 0x2020 0x2021 0xFFFD 0x2030 0xFFFD 0x2039 0xFFFD 0x00A8 0x02C7 0x00B8 </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0x2122 0xFFFD 0x203A 0xFFFD 0x00AF 0x02DB 0xFFFD </output>
      <output>0x00A0 0xFFFD 0x00A2 0x00A3 0x00A4 0xFFFD 0x00A6 0x00A7 0x00D8 0x00A9 0x0156 0x00AB 0x00AC 0x00AD 0x00AE 0x00C6 </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00F8 0x00B9 0x0157 0x00BB 0x00BC 0x00BD 0x00BE 0x00E6 </output>
      <output>0x0104 0x012E 0x0100 0x0106 0x00C4 0x00C5 0x0118 0x0112 0x010C 0x00C9 0x0179 0x0116 0x0122 0x0136 0x012A 0x013B </output>
      <output>0x0160 0x0143 0x0145 0x00D3 0x014C 0x00D5 0x00D6 0x00D7 0x0172 0x0141 0x015A 0x016A 0x00DC 0x017B 0x017D 0x00DF </output>
      <output>0x0105 0x012F 0x0101 0x0107 0x00E4 0x00E5 0x0119 0x0113 0x010D 0x00E9 0x017A 0x0117 0x0123 0x0137 0x012B 0x013C </output>
      <output>0x0161 0x0144 0x0146 0x00F3 0x014D 0x00F5 0x00F6 0x00F7 0x0173 0x0142 0x015B 0x016B 0x00FC 0x017C 0x017E 0x02D9 </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1258</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0xFFFD 0x2039 0x0152 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x02DC 0x2122 0xFFFD 0x203A 0x0153 0xFFFD 0xFFFD 0x0178 </output>
      <output>0x00A0 0x00A1 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x00AA 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x00BA 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF </output>
      <output>0x00C0 0x00C1 0x00C2 0x0102 0x00C4 0x00C5 0x00C6 0x00C7 0x00C8 0x00C9 0x00CA 0x00CB 0x0300 0x00CD 0x00CE 0x00CF </output>
      <output>0x0110 0x00D1 0x0309 0x00D3 0x00D4 0x01A0 0x00D6 0x00D7 0x00D8 0x00D9 0x00DA 0x00DB 0x00DC 0x01AF 0x0303 0x00DF </output>
      <output>0x00E0 0x00E1 0x00E2 0x0103 0x00E4 0x00E5 0x00E6 0x00E7 0x00E8 0x00E9 0x00EA 0x00EB 0x0301 0x00ED 0x00EE 0x00EF </output>
      <output>0x0111 0x00F1 0x0323 0x00F3 0x00F4 0x01A1 0x00F6 0x00F7 0x00F8 0x00F9 0x00FA 0x00FB 0x00FC 0x01B0 0x20AB 0x00FF </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF8_to_code_page>
      <input>0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE 0xF 0x10 </input>
      <input>0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E </input>
      <input>0x1F 0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C </input>
      <input>0x2D 0x2E 0x2F 0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A </input>
      <input>0x3B 0x3C 0x3D 0x3E 0x3F 0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 </input>
      <input>0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F 0x50 0x51 0x52 0x53 0x54 0x55 0x56 </input>
      <input>0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F 0x60 0x61 0x62 0x63 0x64 </input>
      <input>0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F 0x70 0x71 0x72 </input>
      <input>0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x20AC 0xFFFD 0x2026 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 </input>
      <input>0x201A 0x201E 0x2020 0x2021 0x2030 0x0160 0x2039 0x015A 0x0164 0x017D </input>
      <input>0x0179 0x2122 0x0161 0x203A 0x015B 0x0165 0x017E 0x017A 0x00A0 0x02C7 </input>
      <input>0x02D8 0x0141 0x00A4 0x0104 0x00A6 0x00A7 0x00A8 0x00A9 0x015E 0x00AB </input>
      <input>0x00AC 0x00AD 0x00AE 0x017B 0x00B0 0x00B1 0x02DB 0x0142 0x00B4 0x00B5 </input>
      <input>0x00B6 0x00B7 0x00B8 0x0105 0x015F 0x00BB 0x013D 0x02DD 0x013E 0x017C </input>
      <input>0x0154 0x00C1 0x00C2 0x0102 0x00C4 0x0139 0x0106 0x00C7 0x010C 0x00C9 </input>
      <input>0x0118 0x00CB 0x011A 0x00CD 0x00CE 0x010E 0x0110 0x0143 0x0147 0x00D3 </input>
      <input>0x00D4 0x0150 0x00D6 0x00D7 0x0158 0x016E 0x00DA 0x0170 0x00DC 0x00DD </input>
      <input>0x0162 0x00DF 0x0155 0x00E1 0x00E2 0x0103 0x00E4 0x013A 0x0107 0x00E7 </input>
      <input>0x010D 0x00E9 0x0119 0x00EB 0x011B 0x00ED 0x00EE 0x010F 0x0111 0x0144 </input>
      <input>0x0148 0x00F3 0x00F4 0x0151 0x00F6 0x00F7 0x0159 0x016F 0x00FA 0x0171 </input>
      <input>0x00FC 0x00FD 0x0163 0x02D9 0x0402 0x0403 0x0453 0x0409 0x040A 0x040C </input>
      <input>0x040B 0x040F 0x0452 0x0459 0x045A 0x045C 0x045B 0x045F 0x040E 0x045E </input>
      <input>0x0408 0x0490 0x0401 0x0404 0x0407 0x0406 0x0456 0x0491 0x0451 0x2116 </input>
      <input>0x0454 0x0458 0x0405 0x0455 0x0457 0x0410 0x0411 0x0412 0x0413 0x0414 </input>
      <input>0x0415 0x0416 0x0417 0x0418 0x0419 0x041A 0x041B 0x041C 0x041D 0x041E </input>
      <input>0x041F 0x0420 0x0421 0x0422 0x0423 0x0424 0x0425 0x0426 0x0427 0x0428 </input>
      <input>0x0429 0x042A 0x042B 0x042C 0x042D 0x042E 0x042F 0x0430 0x0431 0x0432 </input>
      <input>0x0433 0x0434 0x0435 0x0436 0x0437 0x0438 0x0439 0x043A 0x043B 0x043C </input>
      <input>0x043D 0x043E 0x043F 0x0440 0x0441 0x0442 0x0443 0x0444 0x0445 0x0446 </input>
      <input>0x0447 0x0448 0x0449 0x044A 0x044B 0x044C 0x044D 0x044E 0x044F 0x0192 </input>
      <input>0x02C6 0x0152 0x02DC 0x0153 0x0178 0x00A1 0x00A2 0x00A3 0x00A5 0x00AA </input>
      <input>0x00AF 0x00B2 0x00B3 0x00B9 0x00BA 0x00BC 0x00BD 0x00BE 0x00BF 0x00C0 </input>
      <input>0x00C3 0x00C5 0x00C6 0x00C8 0x00CA 0x00CC 0x00CF 0x00D0 0x00D1 0x00D2 </input>
      <input>0x00D5 0x00D8 0x00D9 0x00DB 0x00DE 0x00E0 0x00E3 0x00E5 0x00E6 0x00E8 </input>
      <input>0x00EA 0x00EC 0x00EF 0x00F0 0x00F1 0x00F2 0x00F5 0x00F8 0x00F9 0x00FB </input>
      <input>0x00FE 0x00FF 0x0385 0x0386 0x2015 0x0384 0x0388 0x0389 0x038A 0x038C </input>
      <input>0x038E 0x038F 0x0390 0x0391 0x0392 0x0393 0x0394 0x0395 0x0396 0x0397 </input>
      <input>0x0398 0x0399 0x039A 0x039B 0x039C 0x039D 0x039E 0x039F 0x03A0 0x03A1 </input>
      <input>0x03A3 0x03A4 0x03A5 0x03A6 0x03A7 0x03A8 0x03A9 0x03AA 0x03AB 0x03AC </input>
      <input>0x03AD 0x03AE 0x03AF 0x03B0 0x03B1 0x03B2 0x03B3 0x03B4 0x03B5 0x03B6 </input>
      <input>0x03B7 0x03B8 0x03B9 0x03BA 0x03BB 0x03BC 0x03BD 0x03BE 0x03BF 0x03C0 </input>
      <input>0x03C1 0x03C2 0x03C3 0x03C4 0x03C5 0x03C6 0x03C7 0x03C8 0x03C9 0x03CA </input>
      <input>0x03CB 0x03CC 0x03CD 0x03CE 0x011E 0x0130 0x011F 0x0131 0x20AA 0x05B0 </input>
      <input>0x05B1 0x05B2 0x05B3 0x05B4 0x05B5 0x05B6 0x05B7 0x05B8 0x05B9 0x05BB </input>
      <input>0x05BC 0x05BD 0x05BE 0x05BF 0x05C0 0x05C1 0x05C2 0x05C3 0x05F0 0x05F1 </input>
      <input>0x05F2 0x05F3 0x05F4 0x05D0 0x05D1 0x05D2 0x05D3 0x05D4 0x05D5 0x05D6 </input>
      <input>0x05D7 0x05D8 0x05D9 0x05DA 0x05DB 0x05DC 0x05DD 0x05DE 0x05DF 0x05E0 </input>
      <input>0x05E1 0x05E2 0x05E3 0x05E4 0x05E5 0x05E6 0x05E7 0x05E8 0x05E9 0x05EA </input>
      <input>0x200E 0x200F 0x067E 0x0679 0x0686 0x0698 0x0688 0x06AF 0x06A9 0x0691 </input>
      <input>0x200C 0x200D 0x06BA 0x060C 0x06BE 0x061B 0x061F 0x06C1 0x0621 0x0622 </input>
      <input>0x0623 0x0624 0x0625 0x0626 0x0627 0x0628 0x0629 0x062A 0x062B 0x062C </input>
      <input>0x062D 0x062E 0x062F 0x0630 0x0631 0x0632 0x0633 0x0634 0x0635 0x0636 </input>
      <input>0x0637 0x0638 0x0639 0x063A 0x0640 0x0641 0x0642 0x0643 0x0644 0x0645 </input>
      <input>0x0646 0x0647 0x0648 0x0649 0x064A 0x064B 0x064C 0x064D 0x064E 0x064F </input>
      <input>0x0650 0x0651 0x0652 0x06D2 0x0156 0x0157 0x012E 0x0100 0x0112 0x0116 </input>
      <input>0x0122 0x0136 0x012A 0x013B 0x0145 0x014C 0x0172 0x016A 0x012F 0x0101 </input>
      <input>0x0113 0x0117 0x0123 0x0137 0x012B 0x013C 0x0146 0x014D 0x0173 0x016B </input>
      <input>0x0300 0x0309 0x01A0 0x01AF 0x0303 0x0301 0x0323 0x01A1 0x01B0 0x20AB </input>
      <output />
      <output code="874" return="1">
        0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE 0xF 0x10
        0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E
        0x1F 0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C
        0x2D 0x2E 0x2F 0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A
        0x3B 0x3C 0x3D 0x3E 0x3F 0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48
        0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F 0x50 0x51 0x52 0x53 0x54 0x55 0x56
        0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F 0x60 0x61 0x62 0x63 0x64
        0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F 0x70 0x71 0x72
        0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F

        0x80 0x3F 0x85 0x91 0x92 0x93 0x94 0x95 0x96 0x97

        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
      </output>
      <!--output code="1250" return="1">
      </output>
      <output code="1251" return="1">
      </output>
      <output code="1252" return="1">
      </output>
      <output code="1253" return="1">
      </output>
      <output code="1254" return="1">
      </output>
      <output code="1255" return="1">
      </output>
      <output code="1256" return="1">
      </output>
      <output code="1257" return="1">
      </output>
      <output code="1258" return="1">
      </output-->
    </text_encoding_UTF8_to_code_page>
    <text_encoding_UTF8_from_code_page>
      <input>0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE 0xF 0x10 </input>
      <input>0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E </input>
      <input>0x1F 0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C </input>
      <input>0x2D 0x2E 0x2F 0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A </input>
      <input>0x3B 0x3C 0x3D 0x3E 0x3F 0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 </input>
      <input>0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F 0x50 0x51 0x52 0x53 0x54 0x55 0x56 </input>
      <input>0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F 0x60 0x61 0x62 0x63 0x64 </input>
      <input>0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F 0x70 0x71 0x72 </input>
      <input>0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F 0x80 </input>
      <input>0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E </input>
      <input>0x8F 0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C </input>
      <input>0x9D 0x9E 0x9F 0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA </input>
      <input>0xAB 0xAC 0xAD 0xAE 0xAF 0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 </input>
      <input>0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF 0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 </input>
      <input>0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF 0xD0 0xD1 0xD2 0xD3 0xD4 </input>
      <input>0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF 0xE0 0xE1 0xE2 </input>
      <input>0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF 0xF0 </input>
      <input>0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE </input>
      <input>0xFF </input>
      <output />
      <output code="874" return="1">
        0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE 0xF 0x10
        0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E
        0x1F 0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C
        0x2D 0x2E 0x2F 0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A
        0x3B 0x3C 0x3D 0x3E 0x3F 0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48
        0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F 0x50 0x51 0x52 0x53 0x54 0x55 0x56
        0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F 0x60 0x61 0x62 0x63 0x64
        0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F 0x70 0x71 0x72
        0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F

        0xE2 0x82 0xAC 0x3F 0x3F 0x3F 0x3F 0xE2 0x80 0xA6 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0xE2 0x80 0x98 0xE2 0x80 0x99 0xE2
        0x80 0x9C 0xE2 0x80 0x9D 0xE2 0x80 0xA2 0xE2 0x80 0x93 0xE2 0x80 0x94
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
        0x3F 0x3F 0x3F 0x3F 0x3F 0x3F
      </output>
      <!--output code="1250" return="1">
      </output>
      <output code="1251" return="1">
      </output>
      <output code="1252" return="1">
      </output>
      <output code="1253" return="1">
      </output>
      <output code="1254" return="1">
      </output>
      <output code="1255" return="1">
      </output>
      <output code="1256" return="1">
      </output>
      <output code="1257" return="1">
      </output>
      <output code="1258" return="1">
      </output-->
    </text_encoding_UTF8_from_code_page>
    <text_encoding_encode_UTF16>
      <input></input>
      <endian />
      <expected_size>2</expected_size>
      <output />
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>55294</input>
      <expected_size>2</expected_size>
      <output>55294</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>55295</input>
      <expected_size>2</expected_size>
      <output>55295</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>55296</input>
      <expected_size>2</expected_size>
      <output>65533</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>57343</input>
      <expected_size>2</expected_size>
      <output>65533</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>57344</input>
      <expected_size>2</expected_size>
      <output>57344</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>57345</input>
      <expected_size>2</expected_size>
      <output>57345</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>1114110</input>
      <expected_size>4</expected_size>
      <output>56319</output>
      <output>57342</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>1114111</input>
      <expected_size>4</expected_size>
      <output>56319</output>
      <output>57343</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>1114112</input>
      <expected_size>2</expected_size>
      <output>65533</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input></input>
      <endian>1</endian>
      <expected_size>2</expected_size>
      <output />
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>55294</input>
      <endian>1</endian>
      <expected_size>2</expected_size>
      <output>65239</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>55295</input>
      <endian>1</endian>
      <expected_size>2</expected_size>
      <output>65495</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>55296</input>
      <endian>1</endian>
      <expected_size>2</expected_size>
      <output>65023</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>57343</input>
      <endian>1</endian>
      <expected_size>2</expected_size>
      <output>65023</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>57344</input>
      <endian>1</endian>
      <expected_size>2</expected_size>
      <output>224</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>57345</input>
      <endian>1</endian>
      <expected_size>2</expected_size>
      <output>480</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>1114110</input>
      <endian>1</endian>
      <expected_size>4</expected_size>
      <output>65499</output>
      <output>65247</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>1114111</input>
      <endian>1</endian>
      <expected_size>4</expected_size>
      <output>65499</output>
      <output>65503</output>
    </text_encoding_encode_UTF16>
    <text_encoding_encode_UTF16>
      <input>1114112</input>
      <endian>1</endian>
      <expected_size>2</expected_size>
      <output>65023</output>
    </text_encoding_encode_UTF16>
</TestTextEncoding>
  <TestXml>
    <xml_get_tag_finish_pos>
      <input></input>
      <output></output>
    </xml_get_tag_finish_pos>
    <xml_get_tag_finish_pos>
      <input><![CDATA[<tag></tag>]]></input>
      <output><![CDATA[></tag>]]></output>
    </xml_get_tag_finish_pos>
    <xml_get_tag_finish_pos>
      <input><![CDATA[<tag comment="just some tag"></tag>]]></input>
      <output><![CDATA[></tag>]]></output>
    </xml_get_tag_finish_pos>
    <xml_get_tag_finish_pos>
      <input><![CDATA[<tag comment="just some tag" desription="read the comment"></tag>]]></input>
      <output><![CDATA[></tag>]]></output>
    </xml_get_tag_finish_pos>
    <xml_get_sub_nodes_elements>
      <input></input>
      <return></return>
    </xml_get_sub_nodes_elements>
    <xml_get_sub_nodes_elements>
      <input><![CDATA[<project></project>]]></input>
      <return>1</return>
      <output><![CDATA[project></project]]></output>
    </xml_get_sub_nodes_elements>
    <xml_get_sub_nodes_elements>
      <input><![CDATA[<project><!-- A --></project>]]></input>
      <return>1</return>
      <output><![CDATA[project><!-- A --></project]]></output>
    </xml_get_sub_nodes_elements>
    <xml_get_sub_nodes_elements>
      <input><![CDATA[<project><!-- A --> <tag comment="Hello! Look -> here."></tag> </project>]]></input>
      <return>1</return>
      <output><![CDATA[project><!-- A --> <tag comment="Hello! Look -> here."></tag> </project]]></output>
    </xml_get_sub_nodes_elements>
    <xml_get_sub_nodes_elements>
      <input><![CDATA[<description>123</description><echo /><echo></echo><property></property><property /><target></target>]]></input>
      <sub_node>description</sub_node>
      <sub_node>property</sub_node>
      <sub_node>target</sub_node>
      <return>4</return>
      <output><![CDATA[description>123</description]]></output>
      <output><![CDATA[property></property]]></output>
      <output><![CDATA[property /]]></output>
      <output><![CDATA[target></target]]></output>
    </xml_get_sub_nodes_elements>
    <xml_get_sub_nodes_elements>
      <input><![CDATA[<!-- A --><tag><tag /><tag comment="Hello! Look -> here."></tag><tag /></tag>]]></input>
      <return>1</return>
      <output><![CDATA[tag><tag /><tag comment="Hello! Look -> here."></tag><tag /></tag]]></output>
    </xml_get_sub_nodes_elements>
    <xml_get_tag_name>
      <input></input>
      <output></output>
      <return></return>
    </xml_get_tag_name>
    <xml_get_tag_name>
      <input><![CDATA[<tag></tag>]]></input>
      <output>tag</output>
      <return>1</return>
    </xml_get_tag_name>
    <xml_get_attribute_value>
      <input></input>
      <attribute></attribute>
      <output></output>
      <return></return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "">]]></input>
      <attribute>name</attribute>
      <output></output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "&#126;&#xa1;&#X07ff;">]]></input>
      <attribute>name</attribute>
      <output>&#126;&#xa1;&#x07ff;</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "&#126; &#xa1; &#X07ff;">]]></input>
      <attribute>name</attribute>
      <output>&#126; &#xa1; &#x07ff;</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "&lt;&gt;&amp;&apos;&quot;">]]></input>
      <attribute>name</attribute>
      <output>&lt;&gt;&amp;&apos;&quot;</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "example" default="hello">]]></input>
      <attribute>name</attribute>
      <output>example</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name="example" default="hello">]]></input>
      <attribute>name</attribute>
      <output>example</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<property name="checksum" value="${file::get-checksum(file, 'crc32')} />]]></input>
      <attribute>value</attribute>
      <return>0</return>
    </xml_get_attribute_value>
    <xml_get_element_value>
      <input></input>
      <output></output>
      <return></return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<project></project>]]></input>
      <output></output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<project />]]></input>
      <output></output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<project /><abc>123</abc>]]></input>
      <output></output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<abc>123</abc>]]></input>
      <output>123</output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<abc>&#126;&#xa1;&#X07ff;</abc>]]></input>
      <output>&#126;&#xa1;&#x07ff;</output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<abc>&#126; &#xa1; &#X07ff;</abc>]]></input>
      <output>&#126; &#xa1; &#x07ff;</output>
      <return>1</return>
    </xml_get_element_value>
  </TestXml>
</Tests>
