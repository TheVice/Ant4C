<?xml version="1.0"?>
<Tests>
  <TestArgumentParser>
    <argument_parser_at_all>
      <input></input>
      <return>1</return>
      <!--build_file></build_file-->
      <pause></pause>
      <verbose></verbose>
      <debug></debug>
      <quiet></quiet>
      <indent></indent>
      <!--properties>
        <property name="property_name" value="property value" /--> <!-- dynamic="false" overwrite="false" readonly="true" failonerror="false" verbose="false" /-->
      <!--/properties-->
      <log_file></log_file>
      <project_help></project_help>
      <no_logo></no_logo>
      <help></help>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-indent:</input>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-indent:1</input>
      <return>1</return>
      <indent>1</indent>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-indent:-1</input>
      <return>1</return>
      <indent>1</indent>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-indent:21</input>
      <return>1</return>
      <indent>21</indent>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:sample.build</input>
      <return>1</return>
      <build_file>sample.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>/f:sample.build</input>
      <return>1</return>
      <build_file>sample.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:sample_1.build /f:sample_2.build</input>
      <return>1</return>
      <build_file>sample_1.build</build_file>
      <build_file>sample_2.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:/tmp/a/b/c/sample.build</input>
      <return>1</return>
      <build_file>/tmp/a/b/c/sample.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-buildfile:/tmp/a/b/c/sample_1.build /f:sample_2.build</input>
      <return>1</return>
      <build_file>/tmp/a/b/c/sample_1.build</build_file>
      <build_file>sample_2.build</build_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:</input>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-l:</input>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:program_log.txt</input>
      <return>1</return>
      <log_file>program_log.txt</log_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-l:program_log.txt</input>
      <return>1</return>
      <log_file>program_log.txt</log_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-logfile:program_log_1.txt -l:program_log_2.txt</input>
      <return>1</return>
      <log_file>program_log_2.txt</log_file>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-pause</input>
      <return>1</return>
      <pause>1</pause>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-verbose</input>
      <return>1</return>
      <verbose>1</verbose>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-v</input>
      <verbose>1</verbose>
      <return>1</return>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-debug</input>
      <return>1</return>
      <debug>1</debug>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-quiet</input>
      <return>1</return>
      <quiet>1</quiet>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-q</input>
      <return>1</return>
      <quiet>1</quiet>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-D:</input>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-D:property_name=property_value</input>
      <return>1</return>
      <properties>
        <property name="property_name" value="property_value" dynamic="true" overwrite="false" readonly="true" failonerror="false" verbose="false" />
      </properties>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-projecthelp</input>
      <return>1</return>
      <project_help>1</project_help>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-nologo</input>
      <return>1</return>
      <no_logo>1</no_logo>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-help</input>
      <return>1</return>
      <help>1</help>
    </argument_parser_at_all>
    <argument_parser_at_all>
      <input>-h</input>
      <return>1</return>
      <help>1</help>
    </argument_parser_at_all>
    <argument_append_arguments>
      <argument></argument>
      <output></output>
      <return></return>
    </argument_append_arguments>
    <argument_append_arguments>
      <argument>1</argument>
      <argument>2</argument>
      <argument>3</argument>
      <argument>4</argument>
      <argument>5</argument>
      <argument>6</argument>
      <argument>7</argument>
      <argument>8</argument>
      <argument>9</argument>
      <argument>0</argument>
      <output>10x020x030x040x050x060x070x080x090x000x0</output>
      <return>1</return>
    </argument_append_arguments>
    <argument_append_arguments>
      <argument>"a b c"</argument>
      <argument>2</argument>
      <argument>3</argument>
      <argument>4</argument>
      <argument>5</argument>
      <argument>6</argument>
      <argument>7</argument>
      <argument>8</argument>
      <argument>9</argument>
      <argument>0</argument>
      <output>a b c0x020x030x040x050x060x070x080x090x000x0</output>
      <return>1</return>
    </argument_append_arguments>
    <argument_parser_get_verbose>
      <argument>1</argument>
      <output>0</output>
    </argument_parser_get_verbose>
    <argument_parser_get_verbose>
      <argument>-v+</argument>
      <output>1</output>
    </argument_parser_get_verbose>
    <argument_parser_get_verbose>
      <argument>-v-</argument>
      <output>0</output>
    </argument_parser_get_verbose>
    <argument_parser_get_verbose>
      <argument>-v1</argument>
      <output>0</output>
    </argument_parser_get_verbose>
    <argument_parser_get_verbose>
      <argument>-verbose+</argument>
      <output>1</output>
    </argument_parser_get_verbose>
    <argument_parser_get_verbose>
      <argument>-verbose-</argument>
      <output>0</output>
    </argument_parser_get_verbose>
    <argument_parser_get_verbose>
      <argument>-verbose1</argument>
      <output>0</output>
    </argument_parser_get_verbose>
    <argument_parser_get_build_file>
      <argument>/f:1.build</argument>
      <output>1.build</output>
    </argument_parser_get_build_file>
    <argument_parser_get_build_file>
      <argument>-buildfile:1.build</argument>
      <output>1.build</output>
    </argument_parser_get_build_file>
    <argument_parser_get_log_file>
      <argument>-l:</argument>
      <output></output>
      <return>0</return>
    </argument_parser_get_log_file>
    <argument_parser_get_log_file>
      <argument>-l:1.txt</argument>
      <output>1.txt</output>
      <return>1</return>
    </argument_parser_get_log_file>
    <argument_parser_get_log_file>
      <argument>-logfile:</argument>
      <output></output>
      <return>0</return>
    </argument_parser_get_log_file>
    <argument_parser_get_log_file>
      <argument>-logfile:1.txt</argument>
      <output>1.txt</output>
      <return>1</return>
    </argument_parser_get_log_file>
    <argument_parser_get_log_file>
      <argument>-logfile:"C:\Program Files\1.txt"</argument>
      <output>C:\Program Files\1.txt</output>
      <return>1</return>
    </argument_parser_get_log_file>
    <argument_parser_get_log_file>
      <argument>-l:"C:\Program Files\1.txt"</argument>
      <output>C:\Program Files\1.txt</output>
      <return>1</return>
    </argument_parser_get_log_file>
  </TestArgumentParser>
  <TestConversion>
    <bool_parse>
      <input></input>
      <output></output>
      <return>0</return>
    </bool_parse>
    <bool_parse>
      <input>True</input>
      <output>1</output>
      <return>1</return>
    </bool_parse>
    <bool_parse>
      <input>False</input>
      <output>0</output>
      <return>1</return>
    </bool_parse>
    <bool_parse>
      <input>true</input>
      <output>1</output>
      <return>1</return>
    </bool_parse>
    <bool_parse>
      <input>false</input>
      <output></output>
      <return>1</return>
    </bool_parse>
    <bool_to_string>
      <input></input>
      <output>False</output>
      <return>1</return>
    </bool_to_string>
    <bool_to_string>
      <input>0</input>
      <output>False</output>
      <return>1</return>
    </bool_to_string>
    <bool_to_string>
      <input>1</input>
      <output>True</output>
      <return>1</return>
    </bool_to_string>
    <bool_to_string>
      <input>2</input>
      <output></output>
      <return>0</return>
    </bool_to_string>
  </TestConversion>
  <TestDateTime>
    <datetime_format_to_string>
      <year>2019</year>
      <month>09</month>
      <day>01</day>
      <hour>02</hour>
      <minute>03</minute>
      <second>04</second>
      <return>1</return>
      <format>%A %c</format>
      <output>Sunday Sun Sep  1 02:03:04 2019</output>
      <mingw_output>Sunday 09/01/19 02:03:04</mingw_output>
    </datetime_format_to_string>
    <datetime_parse>
      <input></input>
      <return></return>
      <year></year>
      <month></month>
      <day></day>
      <hour></hour>
      <minute></minute>
      <second></second>
    </datetime_parse>
    <datetime_parse>
      <input>01.09.2019 2:03:04</input>
      <return>1</return>
      <year>2019</year>
      <month>09</month>
      <day>01</day>
      <hour>02</hour>
      <minute>03</minute>
      <second>04</second>
    </datetime_parse>
    <datetime_to_string>
      <year>2019</year>
      <month>09</month>
      <day>01</day>
      <hour>02</hour>
      <minute>03</minute>
      <second>04</second>
      <output>01.09.2019 2:03:04</output>
    </datetime_to_string>
    <datetime_get_day>
      <input>1</input>
    </datetime_get_day>
    <datetime_get_day>
      <input>15</input>
    </datetime_get_day>
    <datetime_get_day>
      <input>31</input>
    </datetime_get_day>
    <datetime_get_day_of_week>
      <year>1970</year>
      <month>1</month>
      <day>1</day>
      <return>4</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2015</year>
      <month>12</month>
      <day>23</day>
      <return>3</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2016</year>
      <month>12</month>
      <day>23</day>
      <return>5</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2017</year>
      <month>12</month>
      <day>23</day>
      <return>6</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2018</year>
      <month>12</month>
      <day>23</day>
      <return>0</return>
    </datetime_get_day_of_week>
    <datetime_get_day_of_week>
      <year>2019</year>
      <month>12</month>
      <day>23</day>
      <return>1</return>
    </datetime_get_day_of_week>
    <datetime_get_days_in_month>
      <year></year>
      <month></month>
      <return></return>
    </datetime_get_days_in_month>
    <datetime_get_days_in_month>
      <year>2019</year>
      <month>09</month>
      <return>30</return>
    </datetime_get_days_in_month>
    <datetime_get_days_in_month>
      <year>2019</year>
      <month>02</month>
      <return>28</return>
    </datetime_get_days_in_month>
    <datetime_get_days_in_month>
      <year>2016</year>
      <month>02</month>
      <return>29</return>
    </datetime_get_days_in_month>
    <datetime_get_hour>
      <input>0</input>
    </datetime_get_hour>
    <datetime_get_hour>
      <input>21</input>
    </datetime_get_hour>
    <datetime_get_hour>
      <input>23</input>
    </datetime_get_hour>
    <datetime_get_minute>
      <input>1</input>
    </datetime_get_minute>
    <datetime_get_minute>
      <input>30</input>
    </datetime_get_minute>
    <datetime_get_minute>
      <input>59</input>
    </datetime_get_minute>
    <datetime_get_month>
      <input>1</input>
    </datetime_get_month>
    <datetime_get_month>
      <input>6</input>
    </datetime_get_month>
    <datetime_get_month>
      <input>12</input>
    </datetime_get_month>
    <datetime_get_second>
      <input>0</input>
    </datetime_get_second>
    <datetime_get_second>
      <input>30</input>
    </datetime_get_second>
    <datetime_get_second>
      <input>59</input>
    </datetime_get_second>
    <datetime_get_year>
      <input>1970</input>
    </datetime_get_year>
    <datetime_get_year>
      <input>2000</input>
    </datetime_get_year>
    <datetime_get_year>
      <input>2019</input>
    </datetime_get_year>
    <datetime_is_leap_year>
      <input>1700</input>
      <return>0</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>1800</input>
      <return>0</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>1900</input>
      <return>0</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>1600</input>
      <return>1</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>2000</input>
      <return>1</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>2016</input>
      <return>1</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>2019</input>
      <return>0</return>
    </datetime_is_leap_year>
    <datetime_is_leap_year>
      <input>2020</input>
      <return>1</return>
    </datetime_is_leap_year>
    <datetime_decode>
      <input>1569840495</input>
      <return>1</return>
      <year>2019</year>
      <month>09</month>
      <day>30</day>
      <hour>10</hour>
      <minute>48</minute>
      <second>15</second>
      <year_day>273</year_day>
    </datetime_decode>
  </TestDateTime>
  <TestEnvironment>
    <environment_variable_exists>
      <variable_name>PATH</variable_name>
      <variable_name_length>4</variable_name_length>
      <return>1</return>
    </environment_variable_exists>
    <environment_variable_exists>
      <variable_name>PATH!@#</variable_name>
      <variable_name_length>7</variable_name_length>
      <return>0</return>
    </environment_variable_exists>
  </TestEnvironment>
  <TestEcho>
  </TestEcho>
  <TestExec allow_output_to_console="true">
    <exec_with_redirect_to_tmp_file>
      <append></append>
      <base_dir></base_dir>
      <command_line></command_line>
      <pid_property></pid_property>
      <result_property></result_property>
      <working_dir></working_dir>
      <environment_variables></environment_variables>
      <spawn></spawn>
      <time_out></time_out>
      <verbose></verbose>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <comment>command_line</comment>>
      <command_line>1 2 3 4 5</command_line>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-windows()}">
      <comment>working_dir</comment>>
      <working_dir>C:\</working_dir>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-unix()}">
      <comment>working_dir</comment>>
      <working_dir>/home/</working_dir>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <comment>environment_variables</comment>>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <comment>command_line environment_variables</comment>>
      <command_line>1 2 3 4 5</command_line>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-windows()}">
      <comment>working_dir environment_variables</comment>>
      <working_dir>C:\</working_dir>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-unix()}">
      <comment>working_dir environment_variables</comment>>
      <working_dir>/home/</working_dir>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-windows()}">
      <comment>command_line working_dir</comment>>
      <command_line>1 2 3 4 5</command_line>
      <working_dir>C:\</working_dir>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-unix()}">
      <comment>command_line working_dir</comment>>
      <command_line>1 2 3 4 5</command_line>
      <working_dir>/home/</working_dir>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-windows()}">
      <comment>command_line working_dir environment_variables</comment>>
      <command_line>1 2 3 4 5</command_line>
      <working_dir>C:\</working_dir>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file if="${platform::is-unix()}">
      <comment>command_line working_dir environment_variables</comment>>
      <command_line>1 2 3 4 5</command_line>
      <working_dir>/home/</working_dir>
      <environment_variables>var1=value1</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <environment_variables>var1=value1 var2=value2</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <environment_variables>"var 1"="value 1"</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <environment_variables>"var 1"="value 1" "var 2"="value 2"</environment_variables>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <command_line>1 2 3 4 5</command_line>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
    <exec_with_redirect_to_tmp_file>
      <command_line>"a b c" "d e f" "g h" 4 5</command_line>
      <return>1</return>
    </exec_with_redirect_to_tmp_file>
  </TestExec>
  <TestFileSystem>
    <directory_enumerate_file_system_entries>
      <code input="folder"><![CDATA[
      <project name="Empty folder">
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" overwrite="true" />
        <mkdir dir="${property::get-value('folder')}" unless="${directory::exists(property::get-value('folder'))}" />
        <property name="folder" value="${path::combine(property::get-value('folder'), '*.*')}" readonly="true" />
      </project>
      ]]></code>
      <output entry_type="directory" recurse="false" />
      <output entry_type="file" recurse="false" />
      <output entry_type="all" recurse="false" />
      <output entry_type="directory" recurse="true" />
      <output entry_type="file" recurse="true" />
      <output entry_type="all" recurse="true" />
    </directory_enumerate_file_system_entries>
    <directory_enumerate_file_system_entries>
      <code input="folder"><![CDATA[
      <project name="With one folder">
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" overwrite="true" />
        <mkdir dir="${property::get-value('folder')}" unless="${directory::exists(property::get-value('folder'))}" />
        <property name="entry" value="${path::combine(property::get-value('folder'), hash::bytes-to-string(hash::crc32(property::get-value('folder'))))}" />
        <mkdir dir="${property::get-value('entry')}" />
        <property name="folder" value="${path::combine(property::get-value('folder'), '*.*')}" readonly="true" />
      </project>
      ]]></code>
      <output entry_type="directory" recurse="false">
        <entry>entry</entry>
      </output>
      <output entry_type="file" recurse="false" />
      <output entry_type="all" recurse="false">
        <entry>entry</entry>
      </output>
      <output entry_type="directory" recurse="true">
        <entry>entry</entry>
      </output>
      <output entry_type="file" recurse="true" />
      <output entry_type="all" recurse="true">
        <entry>entry</entry>
      </output>
    </directory_enumerate_file_system_entries>
    <!--directory_enumerate_file_system_entries>
      <code input="folder">
        <![CDATA[
      <project name="With one folder and inner in it">
        <description>Create root folder</description>
        <property name="folder" value="${path::combine(path::get-temp-path(), hash::bytes-to-string(hash::crc32(datetime::now-utc())))}" overwrite="true" />
        <mkdir dir="${property::get-value('folder')}" unless="${directory::exists(property::get-value('folder'))}" />
        <description>Create sub folder</description>
        <property name="entry" value="${path::combine(property::get-value('folder'), hash::bytes-to-string(hash::crc32(property::get-value('folder'))))}" />
        <mkdir dir="${property::get-value('entry')}" />
        <description>Create folder in the sub folder of root directory</description>
        <property name="entry_" value="${path::combine(property::get-value('entry'), hash::bytes-to-string(hash::crc32(property::get-value('entry'))))}" />
        <mkdir dir="${property::get-value('entry_')}" />
        <description>Save in property input for function to test</description>
        <property name="folder" value="${path::combine(property::get-value('folder'), '*.*')}" readonly="true" />
      </project>
      ]]>
      </code>
      <output entry_type="directory" recurse="false">
        <entry>entry</entry>
      </output>
      <output entry_type="file" recurse="false" />
      <output entry_type="all" recurse="false">
        <entry>entry</entry>
      </output>
      <output entry_type="directory" recurse="true">
        <entry>entry</entry>
        <entry>entry_</entry>
      </output>
      <output entry_type="file" recurse="true" />
      <output entry_type="all" recurse="true">
        <entry>entry</entry>
        <entry>entry_</entry>
      </output>
    </directory_enumerate_file_system_entries -->
    <directory_exists>
      <input></input>
      <return></return>
    </directory_exists>
    <directory_exists if="${platform::is-windows()}">
      <input>C:\Windows</input>
      <return>1</return>
    </directory_exists>
    <directory_exists if="${platform::is-windows()}">
      <input>C:\Windows!</input>
      <return>0</return>
    </directory_exists>
    <directory_exists if="${platform::is-windows()}">
      <input>C:\Windows\regedit.exe</input>
      <return>0</return>
    </directory_exists>
    <directory_exists if="${platform::is-unix()}">
      <input>/home</input>
      <return>1</return>
    </directory_exists>
    <directory_exists if="${platform::is-unix()}">
      <input>/home!</input>
      <return>0</return>
    </directory_exists>
    <directory_exists if="${platform::is-unix()}">
      <input>/bin/ls</input>
      <return>0</return>
    </directory_exists>
    <file_exists>
      <input></input>
      <return></return>
    </file_exists>
    <file_exists if="${platform::is-windows()}">
      <input>C:\Windows</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-windows()}">
      <input>C:\Windows!</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-windows()}">
      <input>C:\Windows\regedit.exe</input>
      <return>1</return>
    </file_exists>
    <file_exists if="${platform::is-windows()}">
      <input>C:\Windows\regedit.exe1</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-unix()}">
      <input>/home</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-unix()}">
      <input>/home!</input>
      <return>0</return>
    </file_exists>
    <file_exists if="${platform::is-unix()}">
      <input>/bin/ls</input>
      <return>1</return>
    </file_exists>
    <file_exists if="${platform::is-unix()}">
      <input>/bin/ls1</input>
      <return>0</return>
    </file_exists>
  </TestFileSystem>
  <TestHashAlgorithm>
    <BLAKE2>
      <input></input>
      <return>1</return>
      <BLAKE2b_160>3345524abf6bbe1809449224b5972c41790b6cf2</BLAKE2b_160>
      <BLAKE2b_256>0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8</BLAKE2b_256>
      <BLAKE2b_384>b32811423377f52d7862286ee1a72ee540524380fda1724a6f25d7978c6fd3244a6caf0498812673c5e05ef583825100</BLAKE2b_384>
      <BLAKE2b_512>786a02f742015903c6c6fd852552d272912f4740e15847618a86e217f71f5419d25e1031afee585313896444934eb04b903a685b1448b755d56f701afe9be2ce</BLAKE2b_512>
    </BLAKE2>
    <BLAKE2>
      <input>The quick brown fox jumps over the lazy dog</input>
      <return>1</return>
      <BLAKE2b_160>3c523ed102ab45a37d54f5610d5a983162fde84f</BLAKE2b_160>
      <BLAKE2b_256>01718cec35cd3d796dd00020e0bfecb473ad23457d063b75eff29c0ffa2e58a9</BLAKE2b_256>
      <BLAKE2b_384>b7c81b228b6bd912930e8f0b5387989691c1cee1e65aade4da3b86a3c9f678fc8018f6ed9e2906720c8d2a3aeda9c03d</BLAKE2b_384>
      <BLAKE2b_512>a8add4bdddfd93e4877d2746e62817b116364a1fa7bc148d95090bc7333b3673f82401cf7aa2e4cb1ecd90296e3f14cb5413f8ed77be73045b13914cdcd6a918</BLAKE2b_512>
    </BLAKE2>
    <BLAKE2>
      <input>BLAKE and BLAKE2 are hash functions based on the ChaCha stream cipher, and was one of the finalists in the NIST competition for SHA-3</input>
      <return>1</return>
      <BLAKE2b_160>5e92b21f7cb0b46d06416c314f41c474e2feaf30</BLAKE2b_160>
      <BLAKE2b_256>40a9706556c5b70ef10daae4c519c4fcfdee519b3ded9bc6801730b23f2c1d40</BLAKE2b_256>
      <BLAKE2b_384>1441c65e58b2e9656200df99c9bd1e188a3a4e18e80d0ed9f69d4ce67bde16ef8f726e54800554dda7b29f485e50d0e9</BLAKE2b_384>
      <BLAKE2b_512>f22f00d4570b502efe801674f6588ad6926b54ef3503d266224b65c257d1422683bfd4a12470ba3d5cb3c73d5016a5a6f1fb96a13b7f0a84d03777bb18e6e859</BLAKE2b_512>
    </BLAKE2>
    <BLAKE3>
      <input>0</input>
      <return>1</return>
      <output>af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262e00f03e7b69af26b7faaf09fcd333050338ddfe085b8cc869ca98b206c08243a26f</output>
      <output>5487789e8f660afe6c99ef9e0c52b92e7393024a80459cf91f476f9ffdbda7001c22e159b402631f277ca96f2defdf1078282314e763699a31c5363165421cce14d</output>
    </BLAKE3>
    <BLAKE3>
      <input>1</input>
      <return>1</return>
      <output>2d3adedff11b61f14c886e35afa036736dcd87a74d27b5c1510225d0f592e213c3a6cb8bf623e20cdb535f8d1a5ffb86342d9c0b64aca3bce1d31f60adfa137b358</output>
      <output>ad4d79f97b47c3d5e79f179df87a3b9776ef8325f8329886ba42f07fb138bb502f4081cbcec3195c5871e6c23e2cc97d3c69a613eba131e5f1351f3f1da786545e5</output>
    </BLAKE3>
    <BLAKE3>
      <input>1023</input>
      <return>1</return>
      <output>10108970eeda3eb932baac1428c7a2163b0e924c9a9e25b35bba72b28f70bd11a182d27a591b05592b15607500e1e8dd56bc6c7fc063715b7a1d737df5bad3339c5</output>
      <output>6778957d870eb9717b57ea3d9fb68d1b55127bba6a906a4a24bbd5acb2d123a37b28f9e9a81bbaae360d58f85e5fc9d75f7c370a0cc09b6522d9c8d822f2f28f485</output>
    </BLAKE3>
    <BLAKE3>
      <input>1024</input>
      <return>1</return>
      <output>42214739f095a406f3fc83deb889744ac00df831c10daa55189b5d121c855af71cf8107265ecdaf8505b95d8fcec83a98a6a96ea5109d2c179c47a387ffbb404756</output>
      <output>f6eeae7883b446b70ebb144527c2075ab8ab204c0086bb22b7c93d465efc57f8d917f0b385c6df265e77003b85102967486ed57db5c5ca170ba441427ed9afa684e</output>
    </BLAKE3>
    <BLAKE3>
      <input>1025</input>
      <return>1</return>
      <output>d00278ae47eb27b34faecf67b4fe263f82d5412916c1ffd97c8cb7fb814b8444f4c4a22b4b399155358a994e52bf255de60035742ec71bd08ac275a1b51cc6bfe33</output>
      <output>2b0ef84b409108cda080e6269ed4b3e2c3f7d722aa4cdc98d16deb554e5627be8f955c98e1d5f9565a9194cad0c4285f93700062d9595adb992ae68ff12800ab67a</output>
    </BLAKE3>
    <BLAKE3>
      <input>2048</input>
      <return>1</return>
      <output>e776b6028c7cd22a4d0ba182a8bf62205d2ef576467e838ed6f2529b85fba24a9a60bf80001410ec9eea6698cd537939fad4749edd484cb541aced55cd9bf54764d</output>
      <output>063f23f6f1e32e12958ba5cfeb1bf618ad094266d4fc3c968c2088f677454c288c67ba0dba337b9d91c7e1ba586dc9a5bc2d5e90c14f53a8863ac75655461cea8f9</output>
    </BLAKE3>
    <BLAKE3>
      <input>2049</input>
      <return>1</return>
      <output>5f4d72f40d7a5f82b15ca2b2e44b1de3c2ef86c426c95c1af0b687952256303096de31d71d74103403822a2e0bc1eb193e7aecc9643a76b7bbc0c9f9c52e8783aae</output>
      <output>98764ca468962b5c2ec92f0c74eb5448d519713e09413719431c802f948dd5d90425a4ecdadece9eb178d80f26efccae630734dff63340285adec2aed3b51073ad3</output>
    </BLAKE3>
    <BLAKE3>
      <input>3072</input>
      <return>1</return>
      <output>b98cb0ff3623be03326b373de6b9095218513e64f1ee2edd2525c7ad1e5cffd29a3f6b0b978d6608335c09dc94ccf682f9951cdfc501bfe47b9c9189a6fc7b404d1</output>
      <output>20258506341a6d802857322fbd20d3e5dae05b95c88793fa83db1cb08e7d8008d1599b6209d78336e24839724c191b2a52a80448306e0daa84a3fdb566661a37e11</output>
    </BLAKE3>
    <BLAKE3>
      <input>3073</input>
      <return>1</return>
      <output>7124b49501012f81cc7f11ca069ec9226cecb8a2c850cfe644e327d22d3e1cd39a27ae3b79d68d89da9bf25bc27139ae65a324918a5f9b7828181e52cf373c84f35</output>
      <output>b639b7fccbb985b6f2fa56aea0c18f531203497b8bbd3a07ceb5926f1cab74d14bd66486d9a91eba99059a98bd1cd25876b2af5a76c3e9eed554ed72ea952b603bf</output>
    </BLAKE3>
    <BLAKE3>
      <input>4096</input>
      <return>1</return>
      <output>015094013f57a5277b59d8475c0501042c0b642e531b0a1c8f58d2163229e9690289e9409ddb1b99768eafe1623da896faf7e1114bebeadc1be30829b6f8af707d8</output>
      <output>5c298f4f0ff4d9438aef948335612ae921e76d411c3a9111df62d27eaf871959ae0062b5492a0feb98ef3ed4af277f5395172dbe5c311918ea0074ce0036454f620</output>
    </BLAKE3>
    <BLAKE3>
      <input>4097</input>
      <return>1</return>
      <output>9b4052b38f1c5fc8b1f9ff7ac7b27cd242487b3d890d15c96a1c25b8aa0fb99505f91b0b5600a11251652eacfa9497b31cd3c409ce2e45cfe6c0a016967316c426b</output>
      <output>d26f619eab5d70af9a418b845c608840390f361630bd497b1ab44019316357c61dbe091ce72fc16dc340ac3d6e009e050b3adac4b5b2c92e722cffdc46501531956</output>
    </BLAKE3>
    <BLAKE3>
      <input>5120</input>
      <return>1</return>
      <output>9cadc15fed8b5d854562b26a9536d9707cadeda9b143978f319ab34230535833acc61c8fdc114a2010ce8038c853e121e1544985133fccdd0a2d507e8e615e611e9</output>
      <output>a0ba4f47915f49e53d721816a9198e8b30f12d20ec3689989175f1bf7a300eee0d9321fad8da232ece6efb8e9fd81b42ad161f6b9550a069e66b11b40487a5f5059</output>
    </BLAKE3>
    <BLAKE3>
      <input>5121</input>
      <return>1</return>
      <output>628bd2cb2004694adaab7bbd778a25df25c47b9d4155a55f8fbd79f2fe154cff96adaab0613a6146cdaabe498c3a94e529d3fc1da2bd08edf54ed64d40dcd677764</output>
      <output>7eac51d8277d70219a9694334a68bc8f0f23e20b0ff70ada6f844542dfa32cd4204ca1846ef76d811cdb296f65e260227f477aa7aa008bac878f72257484f2b6c95</output>
    </BLAKE3>
    <BLAKE3>
      <input>6144</input>
      <return>1</return>
      <output>3e2e5b74e048f3add6d21faab3f83aa44d3b2278afb83b80b3c35164ebeca2054d742022da6fdda444ebc384b04a54c3ac5839b49da7d39f6d8a9db03deab32aade</output>
      <output>156c1c0311e9b3435cde0ddba0dce7b26a376cad121294b689193508dd63151603c6ddb866ad16c2ee41585d1633a2cea093bea714f4c5d6b903522045b20395c83</output>
    </BLAKE3>
    <BLAKE3>
      <input>6145</input>
      <return>1</return>
      <output>f1323a8631446cc50536a9f705ee5cb619424d46887f3c376c695b70e0f0507f18a2cfdd73c6e39dd75ce7c1c6e3ef238fd54465f053b25d21044ccb2093beb0150</output>
      <output>15532b108313b5829c3621ce324b8e14229091b7c93f32db2e4e63126a377d2a63a3597997d4f1cba59309cb4af240ba70cebff9a23d5e3ff0cdae2cfd54e070022</output>
    </BLAKE3>
    <BLAKE3>
      <input>7168</input>
      <return>1</return>
      <output>61da957ec2499a95d6b8023e2b0e604ec7f6b50e80a9678b89d2628e99ada77a5707c321c83361793b9af62a40f43b523df1c8633cecb4cd14d00bdc79c78fca516</output>
      <output>5b863893f6d38b02ff7236c5a9a8ad2dba87d24c547cab046c29fc5bc1ed142e1de4763613bb162a5a538e6ef05ed05199d751f9eb58d332791b8d73fb74e4fce95</output>
    </BLAKE3>
    <BLAKE3>
      <input>7169</input>
      <return>1</return>
      <output>a003fc7a51754a9b3c7fae0367ab3d782dccf28855a03d435f8cfe74605e781798a8b20534be1ca9eb2ae2df3fae2ea60e48c6fb0b850b1385b5de0fe460dbe9d9f</output>
      <output>9b0d8db4435da75c601156df9d047f4ede008732eb17adc05d96180f8a73548522840779e6062d643b79478a6e8dbce68927f36ebf676ffa7d72d5f68f050b119c8</output>
    </BLAKE3>
    <BLAKE3>
      <input>8192</input>
      <return>1</return>
      <output>aae792484c8efe4f19e2ca7d371d8c467ffb10748d8a5a1ae579948f718a2a635fe51a27db045a567c1ad51be5aa34c01c6651c4d9b5b5ac5d0fd58cf18dd61a477</output>
      <output>78566b797a8c67df7b1d60b97b19288d2d877bb2df417ace009dcb0241ca1257d62712b6a4043b4ff33f690d849da91ea3bf711ed583cb7b7a7da2839ba71309bbf</output>
    </BLAKE3>
    <BLAKE3>
      <input>8193</input>
      <return>1</return>
      <output>bab6c09cb8ce8cf459261398d2e7aef35700bf488116ceb94a36d0f5f1b7bc3bb2282aa69be089359ea1154b9a9286c4a56af4de975a9aa4a5c497654914d279bea</output>
      <output>60bb6d2cf7225a2fa0ff5ef56bbe4b149f3ed15860f78b4e2ad04e158e375c1e0c0b551cd7dfc82f1b155c11b6b3ed51ec9edb30d133653bb5709d1dbd55f4e1ff6</output>
    </BLAKE3>
    <BLAKE3>
      <input>16384</input>
      <return>1</return>
      <output>f875d6646de28985646f34ee13be9a576fd515f76b5b0a26bb324735041ddde49d764c270176e53e97bdffa58d549073f2c660be0e81293767ed4e4929f9ad34bbb</output>
      <output>39a529334c57c4a381ffd2a6d4bfdbf1482651b172aa883cc13408fa67758a3e47503f93f87720a3177325f7823251b85275f64636a8f1d599c2e49722f42e93893</output>
    </BLAKE3>
    <BLAKE3>
      <input>31744</input>
      <return>1</return>
      <output>62b6960e1a44bcc1eb1a611a8d6235b6b4b78f32e7abc4fb4c6cdcce94895c47860cc51f2b0c28a7b77304bd55fe73af663c02d3f52ea053ba43431ca5bab7bfea2</output>
      <output>f5e9d7121770d88f70ae9649ea713087d1914f7f312147e247f87eb2d4ffef0ac978bf7b6579d57d533355aa20b8b77b13fd09748728a5cc327a8ec470f4013226f</output>
    </BLAKE3>
    <crc32>
      <return>1</return>
    </crc32>
    <crc32>
      <input>123456789</input>
      <return>1</return>
      <increasing>2639f4cb</increasing>
      <decreasing>cbf43926</decreasing>
    </crc32>
    <crc32>
      <input>The quick brown fox jumps over the lazy dog</input>
      <return>1</return>
      <increasing>39a34f41</increasing>
      <decreasing>414fa339</decreasing>
    </crc32>
    <Keccak>
      <input>0</input>
      <return>1</return>
      <Keccak_224>f71837502ba8e10837bdd8d365adb85591895602fc552b48b7390abd</Keccak_224>
      <Keccak_256>c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470</Keccak_256>
      <Keccak_384>2c23146a63a29acf99e73b88f8c24eaa7dc60aa771780ccc006afbfa8fe2479b2dd2b21362337441ac12b515911957ff</Keccak_384>
      <Keccak_512>0eab42de4c3ceb9235fc91acffe746b29c29a8c366b7c60e4e67c466f36a4304c00fa9caf9d87976ba469bcbe06713b435f091ef2769fb160cdab33d3670680e</Keccak_512>
      <SHA3_224>6b4e03423667dbb73b6e15454f0eb1abd4597f9a1b078e3f5b5a6bc7</SHA3_224>
      <SHA3_256>a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a</SHA3_256>
      <SHA3_384>0c63a75b845e4f7d01107d852e4c2485c51a50aaaa94fc61995e71bbee983a2ac3713831264adb47fb6bd1e058d5f004</SHA3_384>
      <SHA3_512>a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26</SHA3_512>
    </Keccak>
    <Keccak>
      <input>1</input>
      <return>1</return>
      <SHA3_224>bdd5167212d2dc69665f5a8875ab87f23d5ce7849132f56371a19096</SHA3_224>
      <SHA3_256>5d53469f20fef4f8eab52b88044ede69c77a6a68a60728609fc4a65ff531e7d0</SHA3_256>
      <SHA3_384>127677f8b66725bbcb7c3eae9698351ca41e0eb6d66c784bd28dcdb3b5fb12d0c8e840342db03ad1ae180b92e3504933</SHA3_384>
      <SHA3_512>7127aab211f82a18d06cf7578ff49d5089017944139aa60d8bee057811a15fb55a53887600a3eceba004de51105139f32506fe5b53e1913bfa6b32e716fe97da</SHA3_512>
    </Keccak>
    <Keccak>
      <input>69</input>
      <return>1</return>
      <SHA3_224>bb41c858301cb57230fd85083ba5c76044282170123a990f461e3b14</SHA3_224>
      <SHA3_256>ed379e9012f1d3a4fef5096688a2557b3ceb68c619245bffcf05a14a5a846fd9</SHA3_256>
      <SHA3_384>71007b69c9b15fa519af8cab73514a8b92534513aa19153e7723e56ab54c34bce618bafef9ab92d13298bd35cb6e692a</SHA3_384>
      <SHA3_512>65e34948011bf0715855139bd03afcd01c10a0cba4a6c237cf38a79977080eace8f47e1e9ee14e7d60dcc2a9fe2e9dab47da5bd0ea1cd3932fa788f07e04d7a0</SHA3_512>
    </Keccak>
    <Keccak>
      <input>70</input>
      <return>1</return>
      <SHA3_224>c885e6c9be4a56615adc88657907b0449ff80a0b14459096caa14999</SHA3_224>
      <SHA3_256>97a26b0e8066f35d400b7f12a6ae62a290bc1ca68660b4da8bf17afad6b8c948</SHA3_256>
      <SHA3_384>f82eab30f732330e9692860682ea083586216ee761ea08c014c8a8dd2dc08fc9901942f311f63f63bf3ab8b4dab14975</SHA3_384>
      <SHA3_512>351164e46da292fd3d75132545401498d8983be9d143732de2df21fbf975a5e2c81584d90a773d34d7895d4cece328637ad2ffa973e21d4b6d03f39141cf44c8</SHA3_512>
    </Keccak>
    <Keccak>
      <input>71</input>
      <return>1</return>
      <SHA3_224>5e31d4bc8904e6e77531e6b975d3dcdd4330c03620e5204bc047ce2e</SHA3_224>
      <SHA3_256>881ad9ffbd7f090efa51cbdfe93da23a0401f4446f7adf150d1c226851cbfff2</SHA3_256>
      <SHA3_384>4bb4db01ac1c1d1a5de657436aca5275e4cae772bd6ab9b358e0ed094202be9600724a5bdfef0461ba7f1dc2427cf155</SHA3_384>
      <SHA3_512>3ccc850d53a1287af7b4560b2ef0d43eb5d9a80d62a0e9cf1dbc040135921104d4395168e90bfc871773ebb34bca1bd67056e1cc7dc7a48ff7c3167d389f117c</SHA3_512>
    </Keccak>
    <Keccak>
      <input>101</input>
      <return>1</return>
      <SHA3_224>03b96617edf75c33e4949e2b462eb75828546a2eb8308bdd4c0859cf</SHA3_224>
      <SHA3_256>af504dd36feb666b16fe553116adbdd604e449ca783e54a83171aee7ddc7e7b1</SHA3_256>
      <SHA3_384>1c3a5ccc5dc4030ba16305a85f59dced8cb5023db4479e8b3749a7004ae77bb18996931af4c16409efcc0c72caa4c1a1</SHA3_384>
      <SHA3_512>c8560c1f73d8f309676b71c239c06fcf16a7a8fc710c593b0f83b32606d6d7c85b66f9ad987a4c24bad2f4a03a20da89d5f1f0987f60fc97f40f306e221edbef</SHA3_512>
    </Keccak>
    <Keccak>
      <input>102</input>
      <return>1</return>
      <SHA3_224>c556db7b33e53bf1736d9bc84f30aa936a8ea4afcc590d70fbe647ab</SHA3_224>
      <SHA3_256>986b81944604ef3a1f26032a04537777c0ecd1cb66b37e3ca6e9b108befaf56c</SHA3_256>
      <SHA3_384>ee8a6c983daaec5976cb0ed4446494d348d0d571eb4c77fd8cf7eebdaa0733f96de2bdd8cdd0c70f5fa4391a336107b9</SHA3_384>
      <SHA3_512>9d6df09db9028fb57b45e346886fc0a6ba37d81607bf21b4c7e5ef811197e01eefd4be9c22e68a1b7c714f8f7924f2ea699b0e83a3c95379f7e8dd0ce20ca8b6</SHA3_512>
    </Keccak>
    <Keccak>
      <input>103</input>
      <return>1</return>
      <SHA3_224>8b59fefcaf88187d29eb7b887f5c066475168a4348deac4f34993d63</SHA3_224>
      <SHA3_256>120a055c592d237c0f535eebfc05673374fe4a50e1330293ef2c1ab611e0d0ba</SHA3_256>
      <SHA3_384>1f91ee551ad18f268876d1fc262f137fe196580216c5193819a95ec5222537d2a658dd129c3d8080e65ec7460f1f4704</SHA3_384>
      <SHA3_512>c2204bc64deef9249ab2e29187e31db863002b0ab130c1189d76d8e41f40aab95606b1cc3955788fd6e377d438c2c88c4aecf8f2096a5c8d214863cfbaa3ef5e</SHA3_512>
    </Keccak>
    <Keccak>
      <input>133</input>
      <return>1</return>
      <SHA3_224>67dd1365e9e2ec75f4d96a8460a0a9bf686827920e2b7fbbb0ef2925</SHA3_224>
      <SHA3_256>721f0e936b3b93c0384f970c07680a8a6293e5012295e83615ea4657ed5d7e17</SHA3_256>
      <SHA3_384>72d7f791dd6b7e70cb118634b458bf6977a64b1a6c27a136464ae12db9e7ecc5cb2d7d73c8faf07d4d93d1b2e2f1c0da</SHA3_384>
      <SHA3_512>df7f2a48b2d154de7d3adf710cdd3d1528ebcb06371a72ae607e6e6836163b179800e1ef1ba08649ed405637c6617d6600b0afcdfd7fd9e39a1240f45c21ff96</SHA3_512>
    </Keccak>
    <Keccak>
      <input>134</input>
      <return>1</return>
      <SHA3_224>6d8a43354b6c4e4e28e93ad60e16df666eeca61b360f718009c445a1</SHA3_224>
      <SHA3_256>644e15224f5597351aef5c4bdd22b27ca0c19db2244431534c2a4a0bebfdf39c</SHA3_256>
      <SHA3_384>0dd4000d8a25d0cffdfe2b7151fc610cb5bf25d9249d855ce8d0d647d2151235a12092a75233efa7820fcdfedc59041f</SHA3_384>
      <SHA3_512>76dc7b65f9c314c810c75a7c7a520ca9bc750d14fb4984f982e86e4bb1e46f3df3ce529bfa7b52366884ec66a1fb6dcdb9ec04a72d9405e0af9fa1bde9054a32</SHA3_512>
    </Keccak>
    <Keccak>
      <input>135</input>
      <return>1</return>
      <SHA3_224>3174e5126280625ecdfdb238d6a10d1c8b071031870ed197640cad90</SHA3_224>
      <SHA3_256>fded8fd9d6551c601eeb3b7c6bc5e5cfd8aad1d015b7e9aaa9c9b9475231d5e2</SHA3_256>
      <SHA3_384>25d2be1f5a681f8135992e0cc18a7b0758d1a880eb3c64d9c722f80d68b744bb3a89c223a0c38164cf4a423f91f8a533</SHA3_384>
      <SHA3_512>d942df0df09ac042cd3b641144c98d8fda0980bb037fc5c0e7f2e9a073b073dc4bb8a8c1f4cb5b45f5805c6523741ed0571d6779b15829b2faa280fc60b50645</SHA3_512>
    </Keccak>
    <Keccak>
      <input>141</input>
      <return>1</return>
      <SHA3_224>a8df4dbdc4c5d535eb3f590dd7e097e0b1b3ace931447d987ac25e94</SHA3_224>
      <SHA3_256>4134fa637cc87ac52320f311f4a681ef740b58da8ce2c09c721eedd720179c4f</SHA3_256>
      <SHA3_384>cb6b185e7f5e232db435f2d02f6e8bf16db60f895fc92cbc7fbad356807c5d693853fe638305c4d163d7b35d51b9041c</SHA3_384>
      <SHA3_512>3e92887ff9919469c7927cfc56523492abdcfda14d7fad2bf1de875fa05e2416674ae1793799b7a0703d4da88cf67d09ac64004dc4e332adb6b199ba6ee52479</SHA3_512>
    </Keccak>
    <Keccak>
      <input>142</input>
      <return>1</return>
      <SHA3_224>4353e7ed38eb9cc41abbf0709c6ab707de70d759e5d6eedf09043fd0</SHA3_224>
      <SHA3_256>4996d371abd506e72178b4cbea8e9f5ad781a5a566543d97f89a4efb13d5bb5f</SHA3_256>
      <SHA3_384>abe7a3a2309b13851157043658589d3f011cf2b58ded164cefc56654146f1884ed73d195c5176ea879f7821e9c332b3a</SHA3_384>
      <SHA3_512>64e5a4e32097cf9eeb8170b582503af020076f2856d7e67c0acb4c53c5f7fcb6bed9e330bcaac7c9229d7875efbe233877d5d3a43a25376eaf7804320599676e</SHA3_512>
    </Keccak>
    <Keccak>
      <input>143</input>
      <return>1</return>
      <SHA3_224>64d0e8a1be3cf30ef6727b30a6e428f7f068d44634c943d277ad8e7f</SHA3_224>
      <SHA3_256>295fef4d46110ee21fba0d1798a1bb7c1bbc88306bc9b7661b18ace7170f02ae</SHA3_256>
      <SHA3_384>f25214f92d3b1ccc162c46a74ad8fafd33e00abdcb3048744d93d36bc77f2796f92d91cea8946b357f14f249792dd8de</SHA3_384>
      <SHA3_512>eb9748309c6b70ffe82820052ad26ea99f43968d2af359adc804b2a76741a62ea8d710f018ea113c2259d0bd6687e3838602ae6c1dff727ae985f059141c7217</SHA3_512>
    </Keccak>
    <Keccak>
      <input>1023</input>
      <return>1</return>
      <SHA3_224>e7d72a8635ec1a6b177046d8f98c60bb934204fc7a6990469bed72cd</SHA3_224>
      <SHA3_256>3456dac4a1209693b8c2bd2cd27fc64c330ce283b8d43a0d9662761825865cbc</SHA3_256>
      <SHA3_384>db04f83cdfeb0bc711e9e2aca51f838e8dd725155daa64cbd3b913d40e56475ecc7b4ecab75b771a5f7ccc365ef3a5ae</SHA3_384>
      <SHA3_512>703be67f6d9c1a2d99b1995e60744a05097ddde919f9a4eb4ee3fe0088c9e5a502daa96064f284fbda40d1b22cc70d273b46bb4e4f48fe0e5a2d29f296bfe8a6</SHA3_512>
    </Keccak>
    <Keccak>
      <input>1024</input>
      <return>1</return>
      <SHA3_224>59e82bec68b80a525fd12a0408580ecda62ee6d4c8b12d6529ce0c20</SHA3_224>
      <SHA3_256>ba7f1834cddbba9f82cd4dcf7a106bb2e615fec90020f5a5de8efff8d49198b6</SHA3_256>
      <SHA3_384>885b25cbe374a0e76d495caea95475a2b870909abe434035316d4c60dcade94b8b18b18102059034de194e9f1e682811</SHA3_384>
      <SHA3_512>8f0c52262455dca2c7d7a6157bbc545cb34cea699290735fbc46b5c83173a458d53666e2137eb66e3b672070a97134775e3006a8ee542585ddb54183932f768d</SHA3_512>
    </Keccak>
    <Keccak>
      <input>1025</input>
      <return>1</return>
      <SHA3_224>faa2566329eef816510312ec08e329cdc855e96a440e47e92da4cc92</SHA3_224>
      <SHA3_256>413cf357775aef534fcd49da91a30f7877b50bbd924a20649315a4827f79cac0</SHA3_256>
      <SHA3_384>d00dfd2110cb761ca3f3f3195037e89b29660805e6ce37e9f3164a22517e1c1ac937adbd38c78ad568ada4340f039e58</SHA3_384>
      <SHA3_512>4d77323a341a3c8edd736ed718cb07deb66bcc5317dbc6f73da4c686dcec8440e414a2ed46ed5219cc226160b2416b276d9d9d95ad83c4c9e301397c89e37864</SHA3_512>
    </Keccak>
    <Keccak>
      <input>2048</input>
      <return>1</return>
      <SHA3_224>f761d1bb315dd7d743de1e76b6fe0e8a9f32c74be8819d2f09b49349</SHA3_224>
      <SHA3_256>51a0283a8332e99679957152f59acd063596f607f567053ef538e64c9f75ecf2</SHA3_256>
      <SHA3_384>44f9abfc39f11d63ab2e92f5b2c62b770a76bcedee29e2674c658088c39e383c03ed2c3d9746af7aadf76c0cc18144f9</SHA3_384>
      <SHA3_512>746a42aeef3cdf3f3deb899628f20c36c92e2268fb0ad45883cfbfe74394ff84a15a6f421d26f46c231a911ddae489049019c610e2c0a309e4b9704e57035cd8</SHA3_512>
    </Keccak>
    <Keccak>
      <input>2049</input>
      <return>1</return>
      <SHA3_224>13d59fd552e8a83f759fa10b443d560e36f9b32d3d54553690036282</SHA3_224>
      <SHA3_256>aee1e49906909f36267064b9e924a42cc84832c16f2b453ce3dc90ed09431ee9</SHA3_256>
      <SHA3_384>5e3347f462f9514df49d6d6d9f2df802144318dcb22fef6add07ddfb46f72bdf1c9bb9323bcaee870039af86978f1068</SHA3_384>
      <SHA3_512>0354e1653a3c8f4307f4d31f83e84f532598b69211618a73088969768ed995a718fb1da5feaddb4ad79600ee76efe2a52b58bd33029ee291af5419f392f8c16e</SHA3_512>
    </Keccak>
    <Keccak>
      <input>3072</input>
      <return>1</return>
      <SHA3_224>7e28e44f1df828b246b1952d24c7de5faa98d139a9daee2e491d6edb</SHA3_224>
      <SHA3_256>3d6f9314a37c0dec3cd87ccfb4b5d515c3449e40c1640c0123e511134fd3371c</SHA3_256>
      <SHA3_384>49b4adb6da7229dd2803835c7f3846376742ec22728aaf9117ebe4f1ed9812409781400c206f0132b1d992d2794c3ec6</SHA3_384>
      <SHA3_512>776f1df7cbffdff1df64d2fdcb3b3a238667916f901b27b5cddc54f2664572ac6326459b44ab1d28dd023b2a44a868cb6a950ceec4f4720c58cc2c8ad03f5c55</SHA3_512>
    </Keccak>
    <Keccak>
      <input>3073</input>
      <return>1</return>
      <SHA3_224>d5756b31553455e694bde2514720f02e6eff5004df280db6741731c0</SHA3_224>
      <SHA3_256>5f24381c43d4473a3a65dba2430023c3415eb682d7ab0baffec2576c6e20649e</SHA3_256>
      <SHA3_384>2d9861baf20a6d4d094c8eb8e2f4462492856567fafc8e23b5d9bd696098561315202928c5bae4dd73dc0ed0dce7bc6e</SHA3_384>
      <SHA3_512>b53488fe0c03f3ddd91cf153e7cc33701cc4789bb8a02c3a4c8215d6abab0589dffc7778058b606c20725cca5fe1b3c480269eaa43677eb1b5ba84c9ee4c6ef1</SHA3_512>
    </Keccak>
    <Keccak>
      <input>4096</input>
      <return>1</return>
      <SHA3_224>e710eeadf70563847a754d60ba7c97362b08b0eec91e08b7f628dce6</SHA3_224>
      <SHA3_256>40e655a0042c7fc243710579c0d6fad05daceba7d474de35cccb17d194c2cda2</SHA3_256>
      <SHA3_384>de7e4e4470424afae94fea724569c73744f766215c48e5314dd0b2256f8c2a5848bbe3f341f32a59e6b4d055f2fde812</SHA3_384>
      <SHA3_512>ac8fc5c0a7dc20b9234524accd6000bcafbad2850a66455600873c13d1cb6875824f6888630829896eb411ee4973896e0fb6487d8be89fcc3dfd9eed6c93fe90</SHA3_512>
    </Keccak>
    <Keccak>
      <input>4097</input>
      <return>1</return>
      <SHA3_224>ed37079a71b014db056fba28be20e275bef7002152685f55563ee7ba</SHA3_224>
      <SHA3_256>c1743d3e79e9a1516251b027c4210f8b592630bfc9456d4ce36b17e9908bf8fa</SHA3_256>
      <SHA3_384>958c222c76083e19e2e64edf9b71a73844090592f6282874dcad59ff94c078a315c5f16f625643a8c052f306cfc280fb</SHA3_384>
      <SHA3_512>61d8587ac16b5f06e2010ab90e4e369d609ba8e995cb5a65098ef4d681d4c11ef46f1a62bb897981f5e8bce8496645885302ca8269a4042c337e7564e4075bf0</SHA3_512>
    </Keccak>
    <Keccak>
      <input>5120</input>
      <return>1</return>
      <SHA3_224>c5bb921beb40e901bb6a8b9ff87f54acd102b31617b69dae27d80edc</SHA3_224>
      <SHA3_256>791faf2ff8ab27eb6ea5b860baa8db20336213bbe1da02e050f4da3451d868e4</SHA3_256>
      <SHA3_384>f4edc71aa7bcf93bf466b278a378711b4333ab7c8bf6a0b597d93a6068785ad95a390b6d7e0cf21ee611e0fe5cb4b620</SHA3_384>
      <SHA3_512>161e9fe6165a4e9cc91779fe436e5b8e59d11bfb2328bdf389de7cefa2d613f36d8c4249400ae1b2bfed5ebbb52ab2c164b7498a7c187d4f52e7d98a7ef77ffb</SHA3_512>
    </Keccak>
    <Keccak>
      <input>5121</input>
      <return>1</return>
      <SHA3_224>cefb803e3da97cca87920e3142f84f9601eb3f1a68383d05c9c71e09</SHA3_224>
      <SHA3_256>d07ffdb737ad569dc7f648f0bc6dd0968475a7c72dc8aaf8a40184829d9e276d</SHA3_256>
      <SHA3_384>24395363a35adc5c9cc1fab5346afdacc0432727c3ff6b5456b966fd8b168ba0c6151d4853959175c7fb83845fc5c430</SHA3_384>
      <SHA3_512>ff6253c8686d52864b21b6fac5bd91dcadddb30daf39e8a70f07c26904c49889f32449e5cbeb8781c21dff89dce285783bba9df10d6c86fcd24064ed970da13d</SHA3_512>
    </Keccak>
    <Keccak>
      <input>6144</input>
      <return>1</return>
      <SHA3_224>e46947a65472b14a893436f8d8aeb434a324470d21b85993122a25d3</SHA3_224>
      <SHA3_256>2d31fe5b4080fb6a965196936406cb33d3a929030ad9b151dde066e533bb4b99</SHA3_256>
      <SHA3_384>891902665b409c474d75a53985a5e5e324cb05f95edeb0e8df714a8895353faa5c8aa88849189aa8a78328ab899a70d9</SHA3_384>
      <SHA3_512>2cfea6de3c394e88ffbc2236d8b87381cb14e6e5a23235e5d03fa2f395383dd239df59807edd148d39bb271d64e1ab6f7746a9bbd16e553a538ea32bebd3bfee</SHA3_512>
    </Keccak>
    <Keccak>
      <input>6145</input>
      <return>1</return>
      <SHA3_224>9eaa48302221fbd4458032b63c2a0fd656f66baf06be0e727c56410a</SHA3_224>
      <SHA3_256>2277dd53396cef38fe8aa8716739e7d2f4fa33a55c697f21409e96715eca91dc</SHA3_256>
      <SHA3_384>159b07f2aeac0a2aee7f65a367003acfd3f42efce3799170bc8cf29d2bad1eeccdae3b35b86d5c95b980d5d026e68153</SHA3_384>
      <SHA3_512>d5fdcdb2a4cf311ab061ccf062a62bbb2802103f30b87e077ef066f5b20e01b32e4a7443d5bfa518767c92c76b0835a3bebd013d5749fd5ab9586b72824b5a1f</SHA3_512>
    </Keccak>
    <Keccak>
      <input>7168</input>
      <return>1</return>
      <SHA3_224>2e4f3b82daecda1e8f546590c2006625001fd3802b04781233355d38</SHA3_224>
      <SHA3_256>de9a4c24206979eea656585ffc5877faf6203b1bc90a4fbde802f05c36d44c73</SHA3_256>
      <SHA3_384>b1bd8d0584707f9cca3adc794da83a54d268b0512e755d8e9eb7e8f209189de3447fb14cf3e3b0e34634c62b96e09d80</SHA3_384>
      <SHA3_512>3d29a32838788f1068a017d30abbde48438e200164d16810cfc5e72131ca0493c3f147d77e58b594f3dc6dce0fe6d157edb37ddd16fbafa8892d03dd3b7438a6</SHA3_512>
    </Keccak>
    <Keccak>
      <input>7169</input>
      <return>1</return>
      <SHA3_224>ce0dc42b066c8d4aa4c412e625896c3253a371fba7647049689d269e</SHA3_224>
      <SHA3_256>1c76a266bcfc80883d589fbd593ccd628d0b368ecbb40bd9e932d9def73598c9</SHA3_256>
      <SHA3_384>bd3c93282ea84a25b0096468012511b8b2f8217e185d63800511048bd0da36c0d8e1af3113a68f68f0fdaca07fb4fe4f</SHA3_384>
      <SHA3_512>c04d24a5098866a4689f8dea4bae1ca23a86ae20c38550b3ff42694730fcc71fce3a13e6eddd1e948cc5f42a6b479612ec8f5055eb541de81a72e4cf99c35a3b</SHA3_512>
    </Keccak>
    <Keccak>
      <input>8192</input>
      <return>1</return>
      <SHA3_224>b6b0c36fe2b845f393199b5896c06ea2203535fa40f61454f66be7ec</SHA3_224>
      <SHA3_256>ae1e2d41aabdd5f20028d82dbd03bb02c64de6021b9c5afb5db3bec5b415528c</SHA3_256>
      <SHA3_384>dfd45758ce0596a69b5ebcfbd41fd82ab73336b0798882a45b0fa19bdbc31cbfd2dbfc21b599d7baaaf0aa6db172d384</SHA3_384>
      <SHA3_512>54944f3d94baf90603f2d2536d7612aced75dee0e8f1e9e70490729f33539e87a87c1db5eb12779802e47a9a2c4629f00d6363ea282bf876c28779140ab73d17</SHA3_512>
    </Keccak>
    <Keccak>
      <input>8193</input>
      <return>1</return>
      <SHA3_224>a7232b923c520ff46e1d3cf1c21fb712308b37c54ddf49b8a57618b0</SHA3_224>
      <SHA3_256>91cbc140c95662bd52cfb156b36fe9eed52f264dd7babde25cb5e84837633b88</SHA3_256>
      <SHA3_384>d68d76b03025d73fad0495718910f5167bca3667e7dcd90a91f721ec8d28f79d8ae7575db6ddc0d889b50619c3aed756</SHA3_384>
      <SHA3_512>757d20247c70b52e77308ef1bc1eb3dcb5ccd04f9e22c62fb2c62ad49350f336a08d126e9d00edb85af69ff92524b477b9f515c4ce8742cfa2a9c6b243cbe6a0</SHA3_512>
    </Keccak>
    <Keccak>
      <input>16384</input>
      <return>1</return>
      <SHA3_224>ee18735acfa752902c13bd2fa0472b2fb11687f80bd1b717edd92a5e</SHA3_224>
      <SHA3_256>8f8eeb8c5f4c7ca72654a2f6b8ee7c84e0367846655af46494e3e98f91208a43</SHA3_256>
      <SHA3_384>6cbb72f240f59e8acef6e7995430e27d277b0c838f6fe2873ce8ae2ca05ce74c66d89d1a9b974026de3d8694be65ac73</SHA3_384>
      <SHA3_512>7e94924b09f131d8e32a1c6ed0f5340e55aae3bbfd3619cd297acf40730d1ebf92acd763a06a25d58e94d214cacca52542768e78851ba1d82f56c0154d2fd5c8</SHA3_512>
    </Keccak>
    <Keccak>
      <input>31744</input>
      <return>1</return>
      <SHA3_224>314056dd3d94ca15731815ab1b85322ba07ff26e90555d435822e1af</SHA3_224>
      <SHA3_256>cbc6fd3ce90dafe74a83bb29674e48082f59efd400b989214a63e85ae1984d43</SHA3_256>
      <SHA3_384>93115f5c2f020a9c6cd4bf4a20b09abf0096b78b0e2646e64aeee0d87498d2b2cdb5458daf0253273942499a757cf352</SHA3_384>
      <SHA3_512>827727b142e9a09e066f3847c800912b7d76c26cc22874e92b359880b4dc2f593cf13c473004d0033b7afe218db7b58792b5545c812baeaf6d096cbe9f36ded2</SHA3_512>
    </Keccak>
    <sha3>
      <input></input>
      <return>1</return>
      <Keccak_224>f71837502ba8e10837bdd8d365adb85591895602fc552b48b7390abd</Keccak_224>
      <Keccak_256>c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470</Keccak_256>
      <Keccak_384>2c23146a63a29acf99e73b88f8c24eaa7dc60aa771780ccc006afbfa8fe2479b2dd2b21362337441ac12b515911957ff</Keccak_384>
      <Keccak_512>0eab42de4c3ceb9235fc91acffe746b29c29a8c366b7c60e4e67c466f36a4304c00fa9caf9d87976ba469bcbe06713b435f091ef2769fb160cdab33d3670680e</Keccak_512>
      <SHA3_224>6b4e03423667dbb73b6e15454f0eb1abd4597f9a1b078e3f5b5a6bc7</SHA3_224>
      <SHA3_256>a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a</SHA3_256>
      <SHA3_384>0c63a75b845e4f7d01107d852e4c2485c51a50aaaa94fc61995e71bbee983a2ac3713831264adb47fb6bd1e058d5f004</SHA3_384>
      <SHA3_512>a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26</SHA3_512>
    </sha3>
    <sha3>
      <input>The quick brown fox jumps over the lazy dog</input>
      <return>1</return>
      <Keccak_224>310aee6b30c47350576ac2873fa89fd190cdc488442f3ef654cf23fe</Keccak_224>
      <Keccak_256>4d741b6f1eb29cb2a9b9911c82f56fa8d73b04959d3d9d222895df6c0b28aa15</Keccak_256>
      <Keccak_384>283990fa9d5fb731d786c5bbee94ea4db4910f18c62c03d173fc0a5e494422e8a0b3da7574dae7fa0baf005e504063b3</Keccak_384>
      <Keccak_512>d135bb84d0439dbac432247ee573a23ea7d3c9deb2a968eb31d47c4fb45f1ef4422d6c531b5b9bd6f449ebcc449ea94d0a8f05f62130fda612da53c79659f609</Keccak_512>
      <SHA3_224>d15dadceaa4d5d7bb3b48f446421d542e08ad8887305e28d58335795</SHA3_224>
      <SHA3_256>69070dda01975c8c120c3aada1b282394e7f032fa9cf32f4cb2259a0897dfc04</SHA3_256>
      <SHA3_384>7063465e08a93bce31cd89d2e3ca8f602498696e253592ed26f07bf7e703cf328581e1471a7ba7ab119b1a9ebdf8be41</SHA3_384>
      <SHA3_512>01dedd5de4ef14642445ba5f5b97c15e47b9ad931326e4b0727cd94cefc44fff23f07bf543139939b49128caf436dc1bdee54fcb24023a08d9403f9b4bf0d450</SHA3_512>
    </sha3>
  </TestHashAlgorithm>
  <TestInterpreter>
    <interpreter_disassemble_function>
      <input></input>
      <name_space></name_space>
      <name></name>
      <arguments_area></arguments_area>
      <return></return>
    </interpreter_disassemble_function>
    <interpreter_disassemble_function>
      <input>
        <![CDATA[string::substring('project.name', string::last-index-of('project.name', '.'), string::get-length('project.name') - string::last-index-of('project.name', '.'))]]>
      </input>
      <input></input>
      <name_space>string</name_space>
      <name>substring</name>
      <arguments_area>
        <![CDATA['project.name', string::last-index-of('project.name', '.'), string::get-length('project.name') - string::last-index-of('project.name', '.')]]>
      </arguments_area>
      <return>1</return>
    </interpreter_disassemble_function>
    <interpreter_get_values_for_arguments>
      <arguments></arguments>
      <return></return>
    </interpreter_get_values_for_arguments>
    <interpreter_get_values_for_arguments>
      <arguments>'Abc', 'a'</arguments>
      <return>2</return>
      <output>Abc</output>
      <output>a</output>
    </interpreter_get_values_for_arguments>
    <interpreter_get_values_for_arguments>
      <arguments><![CDATA['project.name', string::last-index-of('project.name', '.'), '5']]></arguments>
      <return>3</return>
      <output>project.name</output>
      <output>7</output>
      <output>5</output>
    </interpreter_get_values_for_arguments>
    <interpreter_get_values_for_arguments>
      <arguments><![CDATA[string::get-length('project.name') - string::last-index-of('project.name', '.')]]></arguments>
      <return>1</return>
      <output>12 - 7</output>
    </interpreter_get_values_for_arguments>
    <interpreter_get_values_for_arguments>
      <arguments><![CDATA['project.name', string::last-index-of('project.name', '.'), string::get-length('project.name') - string::last-index-of('project.name', '.')]]></arguments>
      <return>3</return>
      <output>project.name</output>
      <output>7</output>
      <output>12 - 7</output>
    </interpreter_get_values_for_arguments>
    <interpreter_evaluate_code>
      <code></code>
      <output></output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>Just a string.</code>
      <output>Just a string.</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Desktop')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Programs')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Personal')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyDocuments')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Favorites')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Startup')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Recent')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('SendTo')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('StartMenu')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyMusic')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyVideos')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('DesktopDirectory')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyComputer')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('NetworkShortcuts')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Fonts')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Templates')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonStartMenu')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonPrograms')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonStartup')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonDesktopDirectory')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('ApplicationData')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('PrinterShortcuts')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('LocalApplicationData')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('InternetCache')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Cookies')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('History')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonApplicationData')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Windows')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('System')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('ProgramFiles')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('MyPictures')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>environment::get-folder-path('UserProfile')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('SystemX86')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('ProgramFilesX86')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonProgramFiles')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonProgramFilesX86')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonTemplates')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonDocuments')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonAdminTools')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('AdminTools')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonMusic')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonPictures')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonVideos')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('Resources')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('LocalizedResources')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CommonOemLinks')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(</code>
      <code>environment::get-folder-path('CDBurning')</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::get-machine-name())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::get-operating-system())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::substring(environment::get-operating-system(), '0', '20')}</code>
      <output>Microsoft Windows NT</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::get-user-name())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>${string::empty(environment::get-variable('SystemRoot'))}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>newline() -> ${environment::newline()} </code>
      <output>newline() -> &#13;&#10; </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>newline() -> ${environment::newline()} </code>
      <output>newline() -> &#10; </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>variable-exists('PATH') -> ${environment::variable-exists('PATH')} </code>
      <output>variable-exists('PATH') -> True </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>variable-exists('PATH!@#') -> ${environment::variable-exists('PATH!@#')} </code>
      <output>variable-exists('PATH!@#') -> False </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::is64bit-process())} </code>
      <output>False </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(environment::is64bit-operating-system())} </code>
      <output>False </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>contains('Abc', 'a') -> ${string::contains('Abc', 'a')}</code>
      <output>contains('Abc', 'a') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>contains('Abc', 'A') -> ${string::contains('Abc', 'A')}</code>
      <output>contains('Abc', 'A') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with('', '') -> ${string::ends-with('', '')}</code>
      <output>ends-with('', '') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with('', 'A') -> ${string::ends-with('', 'A')}</code>
      <output>ends-with('', 'A') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with(' ', ' ') -> ${string::ends-with(' ', ' ')}</code>
      <output>ends-with(' ', ' ') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with('AB', 'CD') -> ${string::ends-with('AB', 'CD')}</code>
      <output>ends-with('AB', 'CD') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>ends-with('ABCD', 'CD') -> ${string::ends-with('ABCD', 'CD')}</code>
      <output>ends-with('ABCD', 'CD') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-length('') -> ${string::get-length('')}</code>
      <output>get-length('') -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-length(' ') -> ${string::get-length(' ')}</code>
      <output>get-length(' ') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty() -> ${string::empty('')}, </code>
      <code>empty( ) -> ${string::empty(' ')}</code>
      <output>empty() -> True, </output>
      <output>empty( ) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-length('ABCDE') -> ${string::get-length('ABCDE')}</code>
      <output>get-length('ABCDE') -> 5</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of('', '') -> ${string::index-of('', '')}</code>
      <output>index-of('', '') -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of(' ', ' ') -> ${string::index-of(' ', ' ')}</code>
      <output>index-of(' ', ' ') -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of(' ', 'A') -> ${string::index-of(' ', 'A')}</code>
      <output>index-of(' ', 'A') -> -1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of('AB', 'B') -> ${string::index-of('AB', 'B')}</code>
      <output>index-of('AB', 'B') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of('ABAB', 'B') -> ${string::index-of('ABAB', 'B')}</code>
      <output>index-of('ABAB', 'B') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>index-of('AB', 'C') -> ${string::index-of('AB', 'C')}</code>
      <output>index-of('AB', 'C') -> -1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>last-index-of('AB', 'B') -> ${string::last-index-of('AB', 'B')}</code>
      <output>last-index-of('AB', 'B') -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>last-index-of('ABAB', 'B') -> ${string::last-index-of('ABAB', 'B')}</code>
      <output>last-index-of('ABAB', 'B') -> 3</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>last-index-of('AB', 'C') -> ${string::last-index-of('AB', 'C')}</code>
      <output>last-index-of('AB', 'C') -> -1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>pad-left('Abc', ' ', '4') -> ${string::pad-left('Abc', 4, ' ')}</code>
      <output>pad-left('Abc', ' ', '4') ->  Abc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>pad-right('Abc', ' ', '4') -> ${string::pad-right('Abc', 4, ' ')}</code>
      <output>pad-right('Abc', ' ', '4') -> Abc </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>replace('', '', '') -> ${string::replace('', '', '')}</code>
      <output>replace('', '', '') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>replace('abc', 'b', 'ABC') -> ${string::replace('abc', 'b', 'ABC')}</code>
      <output>replace('abc', 'b', 'ABC') -> aABCc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>replace('abc123', 'bc1', '') -> ${string::replace('abc123', 'bc1', '')}</code>
      <output>replace('abc123', 'bc1', '') -> a23</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with('', '') -> ${string::starts-with('', '')}</code>
      <output>starts-with('', '') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with('', 'A') -> ${string::starts-with('', 'A')}</code>
      <output>starts-with('', 'A') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with(' ', ' ') -> ${string::starts-with(' ', ' ')}</code>
      <output>starts-with(' ', ' ') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with('AB', 'CD') -> ${string::starts-with('AB', 'CD')}</code>
      <output>starts-with('AB', 'CD') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>starts-with('ABCD', 'AB') -> ${string::starts-with('ABCD', 'AB')}</code>
      <output>starts-with('ABCD', 'AB') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '2', '1') -> ${string::substring('ABCD', '2', '1')}</code>
      <output>substring('ABCD', '2', '1') -> C</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '2', '3') -> ${string::substring('ABCD', '2', '3')}</code>
      <output>substring('ABCD', '2', '3') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '2', '4') -> ${string::substring('ABCD', '2', '4')}</code>
      <output>substring('ABCD', '2', '4') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '2') -> ${string::substring('ABCD', '2')}</code>
      <output>substring('ABCD', '2') -> CD</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '4') -> ${string::substring('ABCD', '4')}</code>
      <output>substring('ABCD', '4') -> </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>substring('ABCD', '5') -> ${string::substring('ABCD', '5')}</code>
      <output>substring('ABCD', '5') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-lower('') -> ${string::to-lower('')}</code>
      <output>to-lower('') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-lower('ABCD') -> ${string::to-lower('ABCD')}</code>
      <output>to-lower('ABCD') -> abcd</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-lower('abcd') -> ${string::to-lower('abcd')}</code>
      <output>to-lower('abcd') -> abcd</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-upper('') -> ${string::to-upper('')}</code>
      <output>to-upper('') -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-upper('ABCD') -> ${string::to-upper('ABCD')}</code>
      <output>to-upper('ABCD') -> ABCD</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-upper('abcd') -> ${string::to-upper('abcd')}</code>
      <output>to-upper('abcd') -> ABCD</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>trim(' abc ') -> ${string::trim(' abc ')}</code>
      <output>trim(' abc ') -> abc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>trim-end(' abc ') -> ${string::trim-end(' abc ')}</code>
      <output>trim-end(' abc ') ->  abc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>trim-start(' abc ') -> ${string::trim-start(' abc ')}</code>
      <output>trim-start(' abc ') -> abc </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>quote() -> ${string::quote('')}</code>
      <output>quote() -> ""</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>quote(a b c) -> ${string::quote('a b c')}</code>
      <output>quote(a b c) -> "a b c"</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>un-quote() -> ${string::un-quote('')}</code>
      <output>un-quote() -> </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>un-quote(") -> ${string::un-quote('"')}</code>
      <output>un-quote(") -> </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>un-quote("a b c") -> ${string::un-quote('"a b c"')}</code>
      <output>un-quote("a b c") -> a b c</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>un-quote(""a b c"") -> ${string::un-quote('""a b c""')}</code>
      <output>un-quote(""a b c"") -> a b c</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>equal('', '') -> ${string::equal('', '')}</code>
      <output>equal('', '') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>equal(' ', ' ') -> ${string::equal(' ', ' ')}</code>
      <output>equal(' ', ' ') -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>equal('A', 'B') -> ${string::equal('A', 'B')}</code>
      <output>equal('A', 'B') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${property::exists('My_property')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${property::get_value('My_property')}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${property::is_dynamic('My_property')}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${property::is_readonly('My_property')}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::equal(platform::is-unix(), platform::is-windows())}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::parse('1.2.3.4')}</code>
      <output>1.2.3.4</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::to-string('1.2.3.4')}</code>
      <output>1.2.3.4</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::get-major('1.2.3.4')}</code>
      <output>1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::get-minor('1.2.3.4')}</code>
      <output>2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::get-build('1.2.3.4')}</code>
      <output>3</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::get-revision('1.2.3.4')}</code>
      <output>4</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-base-directory()}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-buildfile-path()}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-buildfile-uri()}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-default-target()}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${project::get-name()}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${program::version()}</code>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>path::change-extension('1.txt', '.exe') => ${path::change-extension('1.txt', '.exe')}</code>
      <output>path::change-extension('1.txt', '.exe') => 1.exe</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>path::combine('C:\', '\Windows') => ${path::combine('C:\', '\Windows')}</code>
      <output>path::combine('C:\', '\Windows') => C:\Windows</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>path::combine('/tmp/', '/file') => ${path::combine('/tmp/', '/file')}</code>
      <output>path::combine('/tmp/', '/file') => /tmp/file</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>path::get-directory-name('C:\Windows\System32\cmd.exe') => ${path::get-directory-name('C:\Windows\System32\cmd.exe')}</code>
      <output>path::get-directory-name('C:\Windows\System32\cmd.exe') => C:\Windows\System32</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>path::get-directory-name('/tmp/file') => ${path::get-directory-name('/tmp/file')}</code>
      <output>path::get-directory-name('/tmp/file') => /tmp</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>get-file-name('C:\Windows\System32\cmd.exe') => ${path::get-file-name('C:\Windows\System32\cmd.exe')}</code>
      <output>get-file-name('C:\Windows\System32\cmd.exe') => cmd.exe</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>get-file-name('/tmp/file') => ${path::get-file-name('/tmp/file')}</code>
      <output>get-file-name('/tmp/file') => file</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-file-name-without-extension('1.txt') => ${path::get-file-name-without-extension('1.txt')}</code>
      <output>get-file-name-without-extension('1.txt') => 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-file-name-without-extension('abc.txt') => ${path::get-file-name-without-extension('abc.txt')}</code>
      <output>get-file-name-without-extension('abc.txt') => abc</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>get-path-root('C:\Windows\System32\cmd.exe') => ${path::get-path-root('C:\Windows\System32\cmd.exe')}</code>
      <output>get-path-root('C:\Windows\System32\cmd.exe') => C:\</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>get-path-root('/tmp/file') => ${path::get-path-root('/tmp/file')}</code>
      <output>get-path-root('/tmp/file') => /</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>is-path-rooted(get-temp-file-name()) => ${path::is-path-rooted(path::get-temp-file-name())}</code>
      <output>is-path-rooted(get-temp-file-name()) => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>is-path-rooted(get-temp-path()) => ${path::is-path-rooted(path::get-temp-path())}</code>
      <output>is-path-rooted(get-temp-path()) => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>has-extension('abc.txt') => ${path::has-extension('abc.txt')}</code>
      <output>has-extension('abc.txt') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>has-extension('abc') => ${path::has-extension('abc')}</code>
      <output>has-extension('abc') => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>is-path-rooted('abc') => ${path::is-path-rooted('abc')}</code>
      <output>is-path-rooted('abc') => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>is-path-rooted('C:\') => ${path::is-path-rooted('C:\')}</code>
      <output>is-path-rooted('C:\') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>is-path-rooted('/') => ${path::is-path-rooted('/')}</code>
      <output>is-path-rooted('/') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>less('1', string::get-length(get-full-path('.'))) => ${math::less('1', string::get-length(path::get-full-path('.')))}</code>
      <output>less('1', string::get-length(get-full-path('.'))) => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-windows()}">
      <code>get-dos-path('C:\Program Files\Windows Defender Advanced Threat Protection') => ${cygpath::get-dos-path('C:\Program Files\Windows Defender Advanced Threat Protection')}</code>
      <output>get-dos-path('C:\Program Files\Windows Defender Advanced Threat Protection') => C:\PROGRA~1\WIF4A9~1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="${platform::is-unix()}">
      <code>get-dos-path('\') => ${cygpath::get-dos-path('\')}</code>
      <output>get-dos-path('\') => </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-unix-path('C:\Windows\System32') => ${cygpath::get-unix-path('C:\Windows\System32')}</code>
      <output>get-unix-path('C:\Windows\System32') => C:/Windows/System32</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-unix-path('/usr/lib/') => ${cygpath::get-unix-path('/usr/lib/')}</code>
      <output>get-unix-path('/usr/lib/') => /usr/lib/</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-windows-path('C:\Windows\System32') => ${cygpath::get-windows-path('C:\Windows\System32')}</code>
      <output>get-windows-path('C:\Windows\System32') => C:\Windows\System32</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-windows-path('/usr/lib/') => ${cygpath::get-windows-path('/usr/lib/')}</code>
      <output>get-windows-path('/usr/lib/') => \usr\lib\</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(get-directory-name(get-temp-path())) -> ${string::empty(path::get-directory-name(path::get-temp-path()))}</code>
      <output>empty(get-directory-name(get-temp-path())) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(current-directory()) => ${string::empty(program::current-directory())}</code>
      <output>empty(current-directory()) => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('True') => ${bool::parse('True')}</code>
      <output>parse('True') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('False') => ${bool::parse('False')}</code>
      <output>parse('False') => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('True') => ${bool::to-string('True')}</code>
      <output>to-string('True') => True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('False') => ${bool::to-string('False')}</code>
      <output>to-string('False') => False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('0.5') => ${string::substring(double::parse('0.5'), '0', '3')}</code>
      <output>parse('0.5') => 0.5</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('0.5') => ${string::substring(double::to-string('0.5'), '0', '3')}</code>
      <output>to-string('0.5') => 0.5</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('2') => ${int::parse('2')}</code>
      <output>parse('2') => 2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('2') => ${int::to-string('2')}</code>
      <output>to-string('2') => 2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('2147483647') => ${long::parse('2147483647')}</code>
      <output>parse('2147483647') => 2147483647</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('2147483647') => ${long::to-string('2147483647')}</code>
      <output>to-string('2147483647') => 2147483647</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse('9223372036854775807') => ${int64::parse('9223372036854775807')}</code>
      <output>parse('9223372036854775807') => 9223372036854775807</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string('9223372036854775807') => ${int64::to-string('9223372036854775807')}</code>
      <output>to-string('9223372036854775807') => 9223372036854775807</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(abs('-1')) -> ${math::truncate(math::abs('-1'))}, truncate(abs('1')) -> ${math::truncate(math::abs('1'))}</code>
      <output>truncate(abs('-1')) -> 1, truncate(abs('1')) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(ceiling('-1.75')) -> ${math::truncate(math::ceiling('-1.75'))}, </code>
      <code>truncate(ceiling('-1.5')) -> ${math::truncate(math::ceiling('-1.5'))}, </code>
      <code>truncate(ceiling('-1.25')) -> ${math::truncate(math::ceiling('-1.25'))}, </code>
      <code>truncate(ceiling('-1')) -> ${math::truncate(math::ceiling('-1'))}, </code>
      <code>truncate(ceiling('-0.75')) -> ${math::truncate(math::ceiling('-0.75'))}, </code>
      <code>truncate(ceiling('-0.5')) -> ${math::truncate(math::ceiling('-0.5'))}, </code>
      <code>truncate(ceiling('-0.25')) -> ${math::truncate(math::ceiling('-0.25'))}, </code>
      <code>truncate(ceiling('0')) -> ${math::truncate(math::ceiling('0'))}, </code>
      <code>truncate(ceiling('0.25')) -> ${math::truncate(math::ceiling('0.25'))}, </code>
      <code>truncate(ceiling('0.5')) -> ${math::truncate(math::ceiling('0.5'))}, </code>
      <code>truncate(ceiling('0.75')) -> ${math::truncate(math::ceiling('0.75'))}, </code>
      <code>truncate(ceiling('1')) -> ${math::truncate(math::ceiling('1'))}, </code>
      <code>truncate(ceiling('1.25')) -> ${math::truncate(math::ceiling('1.25'))}, </code>
      <code>truncate(ceiling('1.5')) -> ${math::truncate(math::ceiling('1.5'))}, </code>
      <code>truncate(ceiling('1.75')) -> ${math::truncate(math::ceiling('1.75'))}</code>
      <output>truncate(ceiling('-1.75')) -> -1, </output>
      <output>truncate(ceiling('-1.5')) -> -1, </output>
      <output>truncate(ceiling('-1.25')) -> -1, </output>
      <output>truncate(ceiling('-1')) -> -1, </output>
      <output>truncate(ceiling('-0.75')) -> 0, </output>
      <output>truncate(ceiling('-0.5')) -> 0, </output>
      <output>truncate(ceiling('-0.25')) -> 0, </output>
      <output>truncate(ceiling('0')) -> 0, </output>
      <output>truncate(ceiling('0.25')) -> 1, </output>
      <output>truncate(ceiling('0.5')) -> 1, </output>
      <output>truncate(ceiling('0.75')) -> 1, </output>
      <output>truncate(ceiling('1')) -> 1, </output>
      <output>truncate(ceiling('1.25')) -> 2, </output>
      <output>truncate(ceiling('1.5')) -> 2, </output>
      <output>truncate(ceiling('1.75')) -> 2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(floor('-1.75')) -> ${math::truncate(math::floor('-1.75'))}, </code>
      <code>truncate(floor('-1.5')) -> ${math::truncate(math::floor('-1.5'))}, </code>
      <code>truncate(floor('-1.25')) -> ${math::truncate(math::floor('-1.25'))}, </code>
      <code>truncate(floor('-1')) -> ${math::truncate(math::floor('-1'))}, </code>
      <code>truncate(floor('-0.75')) -> ${math::truncate(math::floor('-0.75'))}, </code>
      <code>truncate(floor('-0.5')) -> ${math::truncate(math::floor('-0.5'))}, </code>
      <code>truncate(floor('-0.25')) -> ${math::truncate(math::floor('-0.25'))}, </code>
      <code>truncate(floor('0')) -> ${math::truncate(math::floor('0'))}, </code>
      <code>truncate(floor('0.25')) -> ${math::truncate(math::floor('0.25'))}, </code>
      <code>truncate(floor('0.5')) -> ${math::truncate(math::floor('0.5'))}, </code>
      <code>truncate(floor('0.75')) -> ${math::truncate(math::floor('0.75'))}, </code>
      <code>truncate(floor('1')) -> ${math::truncate(math::floor('1'))}, </code>
      <code>truncate(floor('1.25')) -> ${math::truncate(math::floor('1.25'))}, </code>
      <code>truncate(floor('1.5')) -> ${math::truncate(math::floor('1.5'))}, </code>
      <code>truncate(floor('1.75')) -> ${math::truncate(math::floor('1.75'))}</code>
      <output>truncate(floor('-1.75')) -> -2, </output>
      <output>truncate(floor('-1.5')) -> -2, </output>
      <output>truncate(floor('-1.25')) -> -2, </output>
      <output>truncate(floor('-1')) -> -1, </output>
      <output>truncate(floor('-0.75')) -> -1, </output>
      <output>truncate(floor('-0.5')) -> -1, </output>
      <output>truncate(floor('-0.25')) -> -1, </output>
      <output>truncate(floor('0')) -> 0, </output>
      <output>truncate(floor('0.25')) -> 0, </output>
      <output>truncate(floor('0.5')) -> 0, </output>
      <output>truncate(floor('0.75')) -> 0, </output>
      <output>truncate(floor('1')) -> 1, </output>
      <output>truncate(floor('1.25')) -> 1, </output>
      <output>truncate(floor('1.5')) -> 1, </output>
      <output>truncate(floor('1.75')) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(round('-1.75')) -> ${math::truncate(math::round('-1.75'))}, </code>
      <code>truncate(round('-1.5')) -> ${math::truncate(math::round('-1.5'))}, </code>
      <code>truncate(round('-1.25')) -> ${math::truncate(math::round('-1.25'))}, </code>
      <code>truncate(round('-1')) -> ${math::truncate(math::round('-1'))}, </code>
      <code>truncate(round('-0.75')) -> ${math::truncate(math::round('-0.75'))}, </code>
      <code>truncate(round('-0.5')) -> ${math::truncate(math::round('-0.5'))}, </code>
      <code>truncate(round('-0.25')) -> ${math::truncate(math::round('-0.25'))}, </code>
      <code>truncate(round('0')) -> ${math::truncate(math::round('0'))}, </code>
      <code>truncate(round('0.25')) -> ${math::truncate(math::round('0.25'))}, </code>
      <code>truncate(round('0.5')) -> ${math::truncate(math::round('0.5'))}, </code>
      <code>truncate(round('0.75')) -> ${math::truncate(math::round('0.75'))}, </code>
      <code>truncate(round('1')) -> ${math::truncate(math::round('1'))}, </code>
      <code>truncate(round('1.25')) -> ${math::truncate(math::round('1.25'))}, </code>
      <code>truncate(round('1.5')) -> ${math::truncate(math::round('1.5'))}, </code>
      <code>truncate(round('1.75')) -> ${math::truncate(math::round('1.75'))}</code>
      <output>truncate(round('-1.75')) -> -2, </output>
      <output>truncate(round('-1.5')) -> -2, </output>
      <output>truncate(round('-1.25')) -> -1, </output>
      <output>truncate(round('-1')) -> -1, </output>
      <output>truncate(round('-0.75')) -> -1, </output>
      <output>truncate(round('-0.5')) -> 0, </output>
      <output>truncate(round('-0.25')) -> 0, </output>
      <output>truncate(round('0')) -> 0, </output>
      <output>truncate(round('0.25')) -> 0, </output>
      <output>truncate(round('0.5')) -> 0, </output>
      <output>truncate(round('0.75')) -> 1, </output>
      <output>truncate(round('1')) -> 1, </output>
      <output>truncate(round('1.25')) -> 1, </output>
      <output>truncate(round('1.5')) -> 2, </output>
      <output>truncate(round('1.75')) -> 2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, acos(-1))) -> ${math::truncate(math::multiplication('100000', math::acos('-1')))}, </code>
      <code>truncate(multiplication(100000, acos(-0.75))) -> ${math::truncate(math::multiplication('100000', math::acos('-0.75')))}, </code>
      <code>truncate(multiplication(100000, acos(-0.5))) -> ${math::truncate(math::multiplication('100000', math::acos('-0.5')))}, </code>
      <code>truncate(multiplication(100000, acos(-0.25))) -> ${math::truncate(math::multiplication('100000', math::acos('-0.25')))}, </code>
      <code>truncate(multiplication(100000, acos(0))) -> ${math::truncate(math::multiplication('100000', math::acos('0')))}, </code>
      <code>truncate(multiplication(100000, acos(0.25))) -> ${math::truncate(math::multiplication('100000', math::acos('0.25')))}, </code>
      <code>truncate(multiplication(100000, acos(0.5))) -> ${math::truncate(math::multiplication('100000', math::acos('0.5')))}, </code>
      <code>truncate(multiplication(100000, acos(0.75))) -> ${math::truncate(math::multiplication('100000', math::acos('0.75')))}, </code>
      <code>truncate(multiplication(100000, acos(1))) -> ${math::truncate(math::multiplication('100000', math::acos('1')))}</code>
      <output>truncate(multiplication(100000, acos(-1))) -> 314159, </output>
      <output>truncate(multiplication(100000, acos(-0.75))) -> 241885, </output>
      <output>truncate(multiplication(100000, acos(-0.5))) -> 209439, </output>
      <output>truncate(multiplication(100000, acos(-0.25))) -> 182347, </output>
      <output>truncate(multiplication(100000, acos(0))) -> 157079, </output>
      <output>truncate(multiplication(100000, acos(0.25))) -> 131811, </output>
      <output>truncate(multiplication(100000, acos(0.5))) -> 104719, </output>
      <output>truncate(multiplication(100000, acos(0.75))) -> 72273, </output>
      <output>truncate(multiplication(100000, acos(1))) -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, asin(-1))) -> ${math::truncate(math::multiplication('100000', math::asin('-1')))}, </code>
      <code>truncate(multiplication(100000, asin(-0.75))) -> ${math::truncate(math::multiplication('100000', math::asin('-0.75')))}, </code>
      <code>truncate(multiplication(100000, asin(-0.5))) -> ${math::truncate(math::multiplication('100000', math::asin('-0.5')))}, </code>
      <code>truncate(multiplication(100000, asin(-0.25))) -> ${math::truncate(math::multiplication('100000', math::asin('-0.25')))}, </code>
      <code>truncate(multiplication(100000, asin(0))) -> ${math::truncate(math::multiplication('100000', math::asin('0')))}, </code>
      <code>truncate(multiplication(100000, asin(0.25))) -> ${math::truncate(math::multiplication('100000', math::asin('0.25')))}, </code>
      <code>truncate(multiplication(100000, asin(0.5))) -> ${math::truncate(math::multiplication('100000', math::asin('0.5')))}, </code>
      <code>truncate(multiplication(100000, asin(0.75))) -> ${math::truncate(math::multiplication('100000', math::asin('0.75')))}, </code>
      <code>truncate(multiplication(100000, asin(1))) -> ${math::truncate(math::multiplication('100000', math::asin('1')))}</code>
      <output>truncate(multiplication(100000, asin(-1))) -> -157079, </output>
      <output>truncate(multiplication(100000, asin(-0.75))) -> -84806, </output>
      <output>truncate(multiplication(100000, asin(-0.5))) -> -52359, </output>
      <output>truncate(multiplication(100000, asin(-0.25))) -> -25268, </output>
      <output>truncate(multiplication(100000, asin(0))) -> 0, </output>
      <output>truncate(multiplication(100000, asin(0.25))) -> 25268, </output>
      <output>truncate(multiplication(100000, asin(0.5))) -> 52359, </output>
      <output>truncate(multiplication(100000, asin(0.75))) -> 84806, </output>
      <output>truncate(multiplication(100000, asin(1))) -> 157079</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, atan(-1))) -> ${math::truncate(math::multiplication('100000', math::atan('-1')))}, </code>
      <code>truncate(multiplication(100000, atan(-0.75))) -> ${math::truncate(math::multiplication('100000', math::atan('-0.75')))}, </code>
      <code>truncate(multiplication(100000, atan(-0.5))) -> ${math::truncate(math::multiplication('100000', math::atan('-0.5')))}, </code>
      <code>truncate(multiplication(100000, atan(-0.25))) -> ${math::truncate(math::multiplication('100000', math::atan('-0.25')))}, </code>
      <code>truncate(multiplication(100000, atan(0))) -> ${math::truncate(math::multiplication('100000', math::atan('0')))}, </code>
      <code>truncate(multiplication(100000, atan(0.25))) -> ${math::truncate(math::multiplication('100000', math::atan('0.25')))}, </code>
      <code>truncate(multiplication(100000, atan(0.5))) -> ${math::truncate(math::multiplication('100000', math::atan('0.5')))}, </code>
      <code>truncate(multiplication(100000, atan(0.75))) -> ${math::truncate(math::multiplication('100000', math::atan('0.75')))}, </code>
      <code>truncate(multiplication(100000, atan(1))) -> ${math::truncate(math::multiplication('100000', math::atan('1')))}</code>
      <output>truncate(multiplication(100000, atan(-1))) -> -78539, </output>
      <output>truncate(multiplication(100000, atan(-0.75))) -> -64350, </output>
      <output>truncate(multiplication(100000, atan(-0.5))) -> -46364, </output>
      <output>truncate(multiplication(100000, atan(-0.25))) -> -24497, </output>
      <output>truncate(multiplication(100000, atan(0))) -> 0, </output>
      <output>truncate(multiplication(100000, atan(0.25))) -> 24497, </output>
      <output>truncate(multiplication(100000, atan(0.5))) -> 46364, </output>
      <output>truncate(multiplication(100000, atan(0.75))) -> 64350, </output>
      <output>truncate(multiplication(100000, atan(1))) -> 78539</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, atan2(0.5, -1))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '-1')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, -0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '-0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, -0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '-0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, -0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '-0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 0))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '0')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(0.5, 1))) -> ${math::truncate(math::multiplication('100000', math::atan2('0.5', '1')))}</code>
      <output>truncate(multiplication(100000, atan2(0.5, -1))) -> -110714, </output>
      <output>truncate(multiplication(100000, atan2(0.5, -0.75))) -> -98279, </output>
      <output>truncate(multiplication(100000, atan2(0.5, -0.5))) -> -78539, </output>
      <output>truncate(multiplication(100000, atan2(0.5, -0.25))) -> -46364, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 0))) -> 0, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 0.25))) -> 46364, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 0.5))) -> 78539, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 0.75))) -> 98279, </output>
      <output>truncate(multiplication(100000, atan2(0.5, 1))) -> 110714</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, atan2(1, -1))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '-1')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, -0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '-0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, -0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '-0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, -0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '-0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 0))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '0')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(1, 1))) -> ${math::truncate(math::multiplication('100000', math::atan2('1', '1')))}</code>
      <output>truncate(multiplication(100000, atan2(1, -1))) -> -78539, </output>
      <output>truncate(multiplication(100000, atan2(1, -0.75))) -> -64350, </output>
      <output>truncate(multiplication(100000, atan2(1, -0.5))) -> -46364, </output>
      <output>truncate(multiplication(100000, atan2(1, -0.25))) -> -24497, </output>
      <output>truncate(multiplication(100000, atan2(1, 0))) -> 0, </output>
      <output>truncate(multiplication(100000, atan2(1, 0.25))) -> 24497, </output>
      <output>truncate(multiplication(100000, atan2(1, 0.5))) -> 46364, </output>
      <output>truncate(multiplication(100000, atan2(1, 0.75))) -> 64350, </output>
      <output>truncate(multiplication(100000, atan2(1, 1))) -> 78539</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, atan2(2, -1))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '-1')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, -0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '-0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, -0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '-0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, -0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '-0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 0))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '0')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 0.25))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '0.25')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 0.5))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '0.5')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 0.75))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '0.75')))}, </code>
      <code>truncate(multiplication(100000, atan2(2, 1))) -> ${math::truncate(math::multiplication('100000', math::atan2('2', '1')))}</code>
      <output>truncate(multiplication(100000, atan2(2, -1))) -> -46364, </output>
      <output>truncate(multiplication(100000, atan2(2, -0.75))) -> -35877, </output>
      <output>truncate(multiplication(100000, atan2(2, -0.5))) -> -24497, </output>
      <output>truncate(multiplication(100000, atan2(2, -0.25))) -> -12435, </output>
      <output>truncate(multiplication(100000, atan2(2, 0))) -> 0, </output>
      <output>truncate(multiplication(100000, atan2(2, 0.25))) -> 12435, </output>
      <output>truncate(multiplication(100000, atan2(2, 0.5))) -> 24497, </output>
      <output>truncate(multiplication(100000, atan2(2, 0.75))) -> 35877, </output>
      <output>truncate(multiplication(100000, atan2(2, 1))) -> 46364</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, cos(-6.28318531))) -> ${math::truncate(math::multiplication('100000', math::cos('-6.28318531')))}, </code>
      <code>truncate(multiplication(100000, cos(-5.49778714))) -> ${math::truncate(math::multiplication('100000', math::cos('-5.49778714')))}, </code>
      <code>truncate(multiplication(100000, cos(-4.71238898))) -> ${math::truncate(math::multiplication('100000', math::cos('-4.71238898')))}, </code>
      <code>truncate(multiplication(100000, cos(-3.92699082))) -> ${math::truncate(math::multiplication('100000', math::cos('-3.92699082')))}, </code>
      <code>truncate(multiplication(100000, cos(-3.14159265))) -> ${math::truncate(math::multiplication('100000', math::cos('-3.14159265')))}, </code>
      <code>truncate(multiplication(100000, cos(-2.35619449))) -> ${math::truncate(math::multiplication('100000', math::cos('-2.35619449')))}, </code>
      <code>truncate(multiplication(100000, cos(-1.57079633))) -> ${math::truncate(math::multiplication('100000', math::cos('-1.57079633')))}, </code>
      <code>truncate(multiplication(100000, cos(-0.78539816))) -> ${math::truncate(math::multiplication('100000', math::cos('-0.78539816')))}, </code>
      <code>truncate(multiplication(100000, cos(0))) -> ${math::truncate(math::multiplication('100000', math::cos('0')))}, </code>
      <code>truncate(multiplication(100000, cos(0.78539816))) -> ${math::truncate(math::multiplication('100000', math::cos('0.78539816')))}, </code>
      <code>truncate(multiplication(100000, cos(1.57079633))) -> ${math::truncate(math::multiplication('100000', math::cos('1.57079633')))}, </code>
      <code>truncate(multiplication(100000, cos(2.35619449))) -> ${math::truncate(math::multiplication('100000', math::cos('2.35619449')))}, </code>
      <code>truncate(multiplication(100000, cos(3.14159265))) -> ${math::truncate(math::multiplication('100000', math::cos('3.14159265')))}, </code>
      <code>truncate(multiplication(100000, cos(3.92699082))) -> ${math::truncate(math::multiplication('100000', math::cos('3.92699082')))}, </code>
      <code>truncate(multiplication(100000, cos(4.71238898))) -> ${math::truncate(math::multiplication('100000', math::cos('4.71238898')))}, </code>
      <code>truncate(multiplication(100000, cos(5.49778714))) -> ${math::truncate(math::multiplication('100000', math::cos('5.49778714')))}, </code>
      <code>truncate(multiplication(100000, cos(6.28318531))) -> ${math::truncate(math::multiplication('100000', math::cos('6.28318531')))}</code>
      <output>truncate(multiplication(100000, cos(-6.28318531))) -> 100000, </output>
      <output>truncate(multiplication(100000, cos(-5.49778714))) -> 70710, </output>
      <output>truncate(multiplication(100000, cos(-4.71238898))) -> 0, </output>
      <output>truncate(multiplication(100000, cos(-3.92699082))) -> -70710, </output>
      <output>truncate(multiplication(100000, cos(-3.14159265))) -> -100000, </output>
      <output>truncate(multiplication(100000, cos(-2.35619449))) -> -70710, </output>
      <output>truncate(multiplication(100000, cos(-1.57079633))) -> 0, </output>
      <output>truncate(multiplication(100000, cos(-0.78539816))) -> 70710, </output>
      <output>truncate(multiplication(100000, cos(0))) -> 100000, </output>
      <output>truncate(multiplication(100000, cos(0.78539816))) -> 70710, </output>
      <output>truncate(multiplication(100000, cos(1.57079633))) -> 0, </output>
      <output>truncate(multiplication(100000, cos(2.35619449))) -> -70710, </output>
      <output>truncate(multiplication(100000, cos(3.14159265))) -> -100000, </output>
      <output>truncate(multiplication(100000, cos(3.92699082))) -> -70710, </output>
      <output>truncate(multiplication(100000, cos(4.71238898))) -> 0, </output>
      <output>truncate(multiplication(100000, cos(5.49778714))) -> 70710, </output>
      <output>truncate(multiplication(100000, cos(6.28318531))) -> 100000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(cosh(-6.28318531)) -> ${math::truncate(math::cosh('-6.28318531'))}, </code>
      <code>truncate(cosh(-5.49778714)) -> ${math::truncate(math::cosh('-5.49778714'))}, </code>
      <code>truncate(cosh(-4.71238898)) -> ${math::truncate(math::cosh('-4.71238898'))}, </code>
      <code>truncate(cosh(-3.92699082)) -> ${math::truncate(math::cosh('-3.92699082'))}, </code>
      <code>truncate(cosh(-3.14159265)) -> ${math::truncate(math::cosh('-3.14159265'))}, </code>
      <code>truncate(cosh(-2.35619449)) -> ${math::truncate(math::cosh('-2.35619449'))}, </code>
      <code>truncate(cosh(-1.57079633)) -> ${math::truncate(math::cosh('-1.57079633'))}, </code>
      <code>truncate(cosh(-0.78539816)) -> ${math::truncate(math::cosh('-0.78539816'))}, </code>
      <code>truncate(cosh(0)) -> ${math::truncate(math::cosh('0'))}, </code>
      <code>truncate(cosh(0.78539816)) -> ${math::truncate(math::cosh('0.78539816'))}, </code>
      <code>truncate(cosh(1.57079633)) -> ${math::truncate(math::cosh('1.57079633'))}, </code>
      <code>truncate(cosh(2.35619449)) -> ${math::truncate(math::cosh('2.35619449'))}, </code>
      <code>truncate(cosh(3.14159265)) -> ${math::truncate(math::cosh('3.14159265'))}, </code>
      <code>truncate(cosh(3.92699082)) -> ${math::truncate(math::cosh('3.92699082'))}, </code>
      <code>truncate(cosh(4.71238898)) -> ${math::truncate(math::cosh('4.71238898'))}, </code>
      <code>truncate(cosh(5.49778714)) -> ${math::truncate(math::cosh('5.49778714'))}, </code>
      <code>truncate(cosh(6.28318531)) -> ${math::truncate(math::cosh('6.28318531'))}</code>
      <output>truncate(cosh(-6.28318531)) -> 267, </output>
      <output>truncate(cosh(-5.49778714)) -> 122, </output>
      <output>truncate(cosh(-4.71238898)) -> 55, </output>
      <output>truncate(cosh(-3.92699082)) -> 25, </output>
      <output>truncate(cosh(-3.14159265)) -> 11, </output>
      <output>truncate(cosh(-2.35619449)) -> 5, </output>
      <output>truncate(cosh(-1.57079633)) -> 2, </output>
      <output>truncate(cosh(-0.78539816)) -> 1, </output>
      <output>truncate(cosh(0)) -> 1, </output>
      <output>truncate(cosh(0.78539816)) -> 1, </output>
      <output>truncate(cosh(1.57079633)) -> 2, </output>
      <output>truncate(cosh(2.35619449)) -> 5, </output>
      <output>truncate(cosh(3.14159265)) -> 11, </output>
      <output>truncate(cosh(3.92699082)) -> 25, </output>
      <output>truncate(cosh(4.71238898)) -> 55, </output>
      <output>truncate(cosh(5.49778714)) -> 122, </output>
      <output>truncate(cosh(6.28318531)) -> 267</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, exp(-3))) -> ${math::truncate(math::multiplication('100000', math::exp('-3')))}, </code>
      <code>truncate(multiplication(100000, exp(-2.75))) -> ${math::truncate(math::multiplication('100000', math::exp('-2.75')))}, </code>
      <code>truncate(multiplication(100000, exp(-2.5))) -> ${math::truncate(math::multiplication('100000', math::exp('-2.5')))}, </code>
      <code>truncate(multiplication(100000, exp(-2.25))) -> ${math::truncate(math::multiplication('100000', math::exp('-2.25')))}, </code>
      <code>truncate(multiplication(100000, exp(-2))) -> ${math::truncate(math::multiplication('100000', math::exp('-2')))}, </code>
      <code>truncate(multiplication(100000, exp(-1.75))) -> ${math::truncate(math::multiplication('100000', math::exp('-1.75')))}, </code>
      <code>truncate(multiplication(100000, exp(-1.5))) -> ${math::truncate(math::multiplication('100000', math::exp('-1.5')))}, </code>
      <code>truncate(multiplication(100000, exp(-1.25))) -> ${math::truncate(math::multiplication('100000', math::exp('-1.25')))}, </code>
      <code>truncate(multiplication(100000, exp(-1))) -> ${math::truncate(math::multiplication('100000', math::exp('-1')))}, </code>
      <code>truncate(multiplication(100000, exp(-0.75))) -> ${math::truncate(math::multiplication('100000', math::exp('-0.75')))}, </code>
      <code>truncate(multiplication(100000, exp(-0.5))) -> ${math::truncate(math::multiplication('100000', math::exp('-0.5')))}, </code>
      <code>truncate(multiplication(100000, exp(-0.25))) -> ${math::truncate(math::multiplication('100000', math::exp('-0.25')))}, </code>
      <code>truncate(multiplication(100000, exp(0))) -> ${math::truncate(math::multiplication('100000', math::exp('0')))}, </code>
      <code>truncate(multiplication(100000, exp(0.25))) -> ${math::truncate(math::multiplication('100000', math::exp('0.25')))}, </code>
      <code>truncate(multiplication(100000, exp(0.5))) -> ${math::truncate(math::multiplication('100000', math::exp('0.5')))}, </code>
      <code>truncate(multiplication(100000, exp(0.75))) -> ${math::truncate(math::multiplication('100000', math::exp('0.75')))}, </code>
      <code>truncate(multiplication(100000, exp(1))) -> ${math::truncate(math::multiplication('100000', math::exp('1')))}, </code>
      <code>truncate(multiplication(100000, exp(1.25))) -> ${math::truncate(math::multiplication('100000', math::exp('1.25')))}, </code>
      <code>truncate(multiplication(100000, exp(1.5))) -> ${math::truncate(math::multiplication('100000', math::exp('1.5')))}, </code>
      <code>truncate(multiplication(100000, exp(1.75))) -> ${math::truncate(math::multiplication('100000', math::exp('1.75')))}, </code>
      <code>truncate(multiplication(100000, exp(2))) -> ${math::truncate(math::multiplication('100000', math::exp('2')))}, </code>
      <code>truncate(multiplication(100000, exp(2.25))) -> ${math::truncate(math::multiplication('100000', math::exp('2.25')))}, </code>
      <code>truncate(multiplication(100000, exp(2.5))) -> ${math::truncate(math::multiplication('100000', math::exp('2.5')))}, </code>
      <code>truncate(multiplication(100000, exp(2.75))) -> ${math::truncate(math::multiplication('100000', math::exp('2.75')))}, </code>
      <code>truncate(multiplication(100000, exp(3))) -> ${math::truncate(math::multiplication('100000', math::exp('3')))}</code>
      <output>truncate(multiplication(100000, exp(-3))) -> 4978, </output>
      <output>truncate(multiplication(100000, exp(-2.75))) -> 6392, </output>
      <output>truncate(multiplication(100000, exp(-2.5))) -> 8208, </output>
      <output>truncate(multiplication(100000, exp(-2.25))) -> 10539, </output>
      <output>truncate(multiplication(100000, exp(-2))) -> 13533, </output>
      <output>truncate(multiplication(100000, exp(-1.75))) -> 17377, </output>
      <output>truncate(multiplication(100000, exp(-1.5))) -> 22313, </output>
      <output>truncate(multiplication(100000, exp(-1.25))) -> 28650, </output>
      <output>truncate(multiplication(100000, exp(-1))) -> 36787, </output>
      <output>truncate(multiplication(100000, exp(-0.75))) -> 47236, </output>
      <output>truncate(multiplication(100000, exp(-0.5))) -> 60653, </output>
      <output>truncate(multiplication(100000, exp(-0.25))) -> 77880, </output>
      <output>truncate(multiplication(100000, exp(0))) -> 100000, </output>
      <output>truncate(multiplication(100000, exp(0.25))) -> 128402, </output>
      <output>truncate(multiplication(100000, exp(0.5))) -> 164872, </output>
      <output>truncate(multiplication(100000, exp(0.75))) -> 211700, </output>
      <output>truncate(multiplication(100000, exp(1))) -> 271828, </output>
      <output>truncate(multiplication(100000, exp(1.25))) -> 349034, </output>
      <output>truncate(multiplication(100000, exp(1.5))) -> 448168, </output>
      <output>truncate(multiplication(100000, exp(1.75))) -> 575460, </output>
      <output>truncate(multiplication(100000, exp(2))) -> 738905, </output>
      <output>truncate(multiplication(100000, exp(2.25))) -> 948773, </output>
      <output>truncate(multiplication(100000, exp(2.5))) -> 1218249, </output>
      <output>truncate(multiplication(100000, exp(2.75))) -> 1564263, </output>
      <output>truncate(multiplication(100000, exp(3))) -> 2008553</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, log(0.25))) -> ${math::truncate(math::multiplication('100000', math::log('0.25')))}, </code>
      <code>truncate(multiplication(100000, log(0.5))) -> ${math::truncate(math::multiplication('100000', math::log('0.5')))}, </code>
      <code>truncate(multiplication(100000, log(0.75))) -> ${math::truncate(math::multiplication('100000', math::log('0.75')))}, </code>
      <code>truncate(multiplication(100000, log(1))) -> ${math::truncate(math::multiplication('100000', math::log('1')))}, </code>
      <code>truncate(multiplication(100000, log(1.25))) -> ${math::truncate(math::multiplication('100000', math::log('1.25')))}, </code>
      <code>truncate(multiplication(100000, log(1.5))) -> ${math::truncate(math::multiplication('100000', math::log('1.5')))}, </code>
      <code>truncate(multiplication(100000, log(1.75))) -> ${math::truncate(math::multiplication('100000', math::log('1.75')))}, </code>
      <code>truncate(multiplication(100000, log(2))) -> ${math::truncate(math::multiplication('100000', math::log('2')))}, </code>
      <code>truncate(multiplication(100000, log(2.25))) -> ${math::truncate(math::multiplication('100000', math::log('2.25')))}, </code>
      <code>truncate(multiplication(100000, log(2.5))) -> ${math::truncate(math::multiplication('100000', math::log('2.5')))}, </code>
      <code>truncate(multiplication(100000, log(2.75))) -> ${math::truncate(math::multiplication('100000', math::log('2.75')))}, </code>
      <code>truncate(multiplication(100000, log(3))) -> ${math::truncate(math::multiplication('100000', math::log('3')))}, </code>
      <code>truncate(multiplication(100000, log(3.25))) -> ${math::truncate(math::multiplication('100000', math::log('3.25')))}, </code>
      <code>truncate(multiplication(100000, log(3.5))) -> ${math::truncate(math::multiplication('100000', math::log('3.5')))}, </code>
      <code>truncate(multiplication(100000, log(3.75))) -> ${math::truncate(math::multiplication('100000', math::log('3.75')))}, </code>
      <code>truncate(multiplication(100000, log(4))) -> ${math::truncate(math::multiplication('100000', math::log('4')))}</code>
      <output>truncate(multiplication(100000, log(0.25))) -> -138629, </output>
      <output>truncate(multiplication(100000, log(0.5))) -> -69314, </output>
      <output>truncate(multiplication(100000, log(0.75))) -> -28768, </output>
      <output>truncate(multiplication(100000, log(1))) -> 0, </output>
      <output>truncate(multiplication(100000, log(1.25))) -> 22314, </output>
      <output>truncate(multiplication(100000, log(1.5))) -> 40546, </output>
      <output>truncate(multiplication(100000, log(1.75))) -> 55961, </output>
      <output>truncate(multiplication(100000, log(2))) -> 69314, </output>
      <output>truncate(multiplication(100000, log(2.25))) -> 81093, </output>
      <output>truncate(multiplication(100000, log(2.5))) -> 91629, </output>
      <output>truncate(multiplication(100000, log(2.75))) -> 101160, </output>
      <output>truncate(multiplication(100000, log(3))) -> 109861, </output>
      <output>truncate(multiplication(100000, log(3.25))) -> 117865, </output>
      <output>truncate(multiplication(100000, log(3.5))) -> 125276, </output>
      <output>truncate(multiplication(100000, log(3.75))) -> 132175, </output>
      <output>truncate(multiplication(100000, log(4))) -> 138629</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, log10(0.25))) -> ${math::truncate(math::multiplication('100000', math::log10('0.25')))}, </code>
      <code>truncate(multiplication(100000, log10(0.5))) -> ${math::truncate(math::multiplication('100000', math::log10('0.5')))}, </code>
      <code>truncate(multiplication(100000, log10(0.75))) -> ${math::truncate(math::multiplication('100000', math::log10('0.75')))}, </code>
      <code>truncate(multiplication(100000, log10(1))) -> ${math::truncate(math::multiplication('100000', math::log10('1')))}, </code>
      <code>truncate(multiplication(100000, log10(1.25))) -> ${math::truncate(math::multiplication('100000', math::log10('1.25')))}, </code>
      <code>truncate(multiplication(100000, log10(1.5))) -> ${math::truncate(math::multiplication('100000', math::log10('1.5')))}, </code>
      <code>truncate(multiplication(100000, log10(1.75))) -> ${math::truncate(math::multiplication('100000', math::log10('1.75')))}, </code>
      <code>truncate(multiplication(100000, log10(2))) -> ${math::truncate(math::multiplication('100000', math::log10('2')))}, </code>
      <code>truncate(multiplication(100000, log10(2.25))) -> ${math::truncate(math::multiplication('100000', math::log10('2.25')))}, </code>
      <code>truncate(multiplication(100000, log10(2.5))) -> ${math::truncate(math::multiplication('100000', math::log10('2.5')))}, </code>
      <code>truncate(multiplication(100000, log10(2.75))) -> ${math::truncate(math::multiplication('100000', math::log10('2.75')))}, </code>
      <code>truncate(multiplication(100000, log10(3))) -> ${math::truncate(math::multiplication('100000', math::log10('3')))}, </code>
      <code>truncate(multiplication(100000, log10(3.25))) -> ${math::truncate(math::multiplication('100000', math::log10('3.25')))}, </code>
      <code>truncate(multiplication(100000, log10(3.5))) -> ${math::truncate(math::multiplication('100000', math::log10('3.5')))}, </code>
      <code>truncate(multiplication(100000, log10(3.75))) -> ${math::truncate(math::multiplication('100000', math::log10('3.75')))}, </code>
      <code>truncate(multiplication(100000, log10(4))) -> ${math::truncate(math::multiplication('100000', math::log10('4')))}</code>
      <output>truncate(multiplication(100000, log10(0.25))) -> -60205, </output>
      <output>truncate(multiplication(100000, log10(0.5))) -> -30102, </output>
      <output>truncate(multiplication(100000, log10(0.75))) -> -12493, </output>
      <output>truncate(multiplication(100000, log10(1))) -> 0, </output>
      <output>truncate(multiplication(100000, log10(1.25))) -> 9691, </output>
      <output>truncate(multiplication(100000, log10(1.5))) -> 17609, </output>
      <output>truncate(multiplication(100000, log10(1.75))) -> 24303, </output>
      <output>truncate(multiplication(100000, log10(2))) -> 30102, </output>
      <output>truncate(multiplication(100000, log10(2.25))) -> 35218, </output>
      <output>truncate(multiplication(100000, log10(2.5))) -> 39794, </output>
      <output>truncate(multiplication(100000, log10(2.75))) -> 43933, </output>
      <output>truncate(multiplication(100000, log10(3))) -> 47712, </output>
      <output>truncate(multiplication(100000, log10(3.25))) -> 51188, </output>
      <output>truncate(multiplication(100000, log10(3.5))) -> 54406, </output>
      <output>truncate(multiplication(100000, log10(3.75))) -> 57403, </output>
      <output>truncate(multiplication(100000, log10(4))) -> 60205</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(max(-1, -2)) -> ${math::truncate(math::max('-1', '-2'))}, </code>
      <code>truncate(min(-1, -2)) -> ${math::truncate(math::min('-1', '-2'))}, </code>
      <code>truncate(max(1, 2)) -> ${math::truncate(math::max('1', '2'))}, </code>
      <code>truncate(min(1, 2)) -> ${math::truncate(math::min('1', '2'))}</code>
      <output>truncate(max(-1, -2)) -> -1, </output>
      <output>truncate(min(-1, -2)) -> -2, </output>
      <output>truncate(max(1, 2)) -> 2, </output>
      <output>truncate(min(1, 2)) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(10000, pow(-3, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-3', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-2.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-2.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-2.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-2.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-2.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-2.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-2, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-2', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-1.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-1.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-1.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-1.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-1.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-1.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-1, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-1', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-0.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-0.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-0.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-0.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(-0.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('-0.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(0, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('0', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(0.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('0.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(0.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('0.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(0.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('0.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(1, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('1', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(1.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('1.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(1.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('1.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(1.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('1.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(2, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('2', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(2.25, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('2.25', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(2.5, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('2.5', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(2.75, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('2.75', '2')))}, </code>
      <code>truncate(multiplication(10000, pow(3, 2))) -> ${math::truncate(math::multiplication('10000', math::pow('3', '2')))}</code>
      <output>truncate(multiplication(10000, pow(-3, 2))) -> 90000, </output>
      <output>truncate(multiplication(10000, pow(-2.75, 2))) -> 75625, </output>
      <output>truncate(multiplication(10000, pow(-2.5, 2))) -> 62500, </output>
      <output>truncate(multiplication(10000, pow(-2.25, 2))) -> 50625, </output>
      <output>truncate(multiplication(10000, pow(-2, 2))) -> 40000, </output>
      <output>truncate(multiplication(10000, pow(-1.75, 2))) -> 30625, </output>
      <output>truncate(multiplication(10000, pow(-1.5, 2))) -> 22500, </output>
      <output>truncate(multiplication(10000, pow(-1.25, 2))) -> 15625, </output>
      <output>truncate(multiplication(10000, pow(-1, 2))) -> 10000, </output>
      <output>truncate(multiplication(10000, pow(-0.75, 2))) -> 5625, </output>
      <output>truncate(multiplication(10000, pow(-0.5, 2))) -> 2500, </output>
      <output>truncate(multiplication(10000, pow(-0.25, 2))) -> 625, </output>
      <output>truncate(multiplication(10000, pow(0, 2))) -> 0, </output>
      <output>truncate(multiplication(10000, pow(0.25, 2))) -> 625, </output>
      <output>truncate(multiplication(10000, pow(0.5, 2))) -> 2500, </output>
      <output>truncate(multiplication(10000, pow(0.75, 2))) -> 5625, </output>
      <output>truncate(multiplication(10000, pow(1, 2))) -> 10000, </output>
      <output>truncate(multiplication(10000, pow(1.25, 2))) -> 15625, </output>
      <output>truncate(multiplication(10000, pow(1.5, 2))) -> 22500, </output>
      <output>truncate(multiplication(10000, pow(1.75, 2))) -> 30625, </output>
      <output>truncate(multiplication(10000, pow(2, 2))) -> 40000, </output>
      <output>truncate(multiplication(10000, pow(2.25, 2))) -> 50625, </output>
      <output>truncate(multiplication(10000, pow(2.5, 2))) -> 62500, </output>
      <output>truncate(multiplication(10000, pow(2.75, 2))) -> 75625, </output>
      <output>truncate(multiplication(10000, pow(3, 2))) -> 90000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${math::sign('-2')} ${math::sign('-1.5')} ${math::sign('-1')} ${math::sign('-0.5')} </code>
      <code>${math::sign('0')} ${math::sign('0.5')} ${math::sign('1')} ${math::sign('1.5')} ${math::sign('2')}</code>
      <output>-1 -1 -1 -1 1 1 1 1 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(100000, sin(-6.28318531))) -> ${math::truncate(math::multiplication('100000', math::sin('-6.28318531')))}, </code>
      <code>truncate(multiplication(100000, sin(-5.49778714))) -> ${math::truncate(math::multiplication('100000', math::sin('-5.49778714')))}, </code>
      <code>truncate(multiplication(100000, sin(-4.71238898))) -> ${math::truncate(math::multiplication('100000', math::sin('-4.71238898')))}, </code>
      <code>truncate(multiplication(100000, sin(-3.92699082))) -> ${math::truncate(math::multiplication('100000', math::sin('-3.92699082')))}, </code>
      <code>truncate(multiplication(100000, sin(-3.14159265))) -> ${math::truncate(math::multiplication('100000', math::sin('-3.14159265')))}, </code>
      <code>truncate(multiplication(100000, sin(-2.35619449))) -> ${math::truncate(math::multiplication('100000', math::sin('-2.35619449')))}, </code>
      <code>truncate(multiplication(100000, sin(-1.57079633))) -> ${math::truncate(math::multiplication('100000', math::sin('-1.57079633')))}, </code>
      <code>truncate(multiplication(100000, sin(-0.78539816))) -> ${math::truncate(math::multiplication('100000', math::sin('-0.78539816')))}, </code>
      <code>truncate(multiplication(100000, sin(0))) -> ${math::truncate(math::multiplication('100000', math::sin('0')))}, </code>
      <code>truncate(multiplication(100000, sin(0.78539816))) -> ${math::truncate(math::multiplication('100000', math::sin('0.78539816')))}, </code>
      <code>truncate(multiplication(100000, sin(1.57079633))) -> ${math::truncate(math::multiplication('100000', math::sin('1.57079633')))}, </code>
      <code>truncate(multiplication(100000, sin(2.35619449))) -> ${math::truncate(math::multiplication('100000', math::sin('2.35619449')))}, </code>
      <code>truncate(multiplication(100000, sin(3.14159265))) -> ${math::truncate(math::multiplication('100000', math::sin('3.14159265')))}, </code>
      <code>truncate(multiplication(100000, sin(3.92699082))) -> ${math::truncate(math::multiplication('100000', math::sin('3.92699082')))}, </code>
      <code>truncate(multiplication(100000, sin(4.71238898))) -> ${math::truncate(math::multiplication('100000', math::sin('4.71238898')))}, </code>
      <code>truncate(multiplication(100000, sin(5.49778714))) -> ${math::truncate(math::multiplication('100000', math::sin('5.49778714')))}, </code>
      <code>truncate(multiplication(100000, sin(6.28318531))) -> ${math::truncate(math::multiplication('100000', math::sin('6.28318531')))}</code>
      <output>truncate(multiplication(100000, sin(-6.28318531))) -> 0, </output>
      <output>truncate(multiplication(100000, sin(-5.49778714))) -> 70710, </output>
      <output>truncate(multiplication(100000, sin(-4.71238898))) -> 100000, </output>
      <output>truncate(multiplication(100000, sin(-3.92699082))) -> 70710, </output>
      <output>truncate(multiplication(100000, sin(-3.14159265))) -> 0, </output>
      <output>truncate(multiplication(100000, sin(-2.35619449))) -> -70710, </output>
      <output>truncate(multiplication(100000, sin(-1.57079633))) -> -100000, </output>
      <output>truncate(multiplication(100000, sin(-0.78539816))) -> -70710, </output>
      <output>truncate(multiplication(100000, sin(0))) -> 0, </output>
      <output>truncate(multiplication(100000, sin(0.78539816))) -> 70710, </output>
      <output>truncate(multiplication(100000, sin(1.57079633))) -> 100000, </output>
      <output>truncate(multiplication(100000, sin(2.35619449))) -> 70710, </output>
      <output>truncate(multiplication(100000, sin(3.14159265))) -> 0, </output>
      <output>truncate(multiplication(100000, sin(3.92699082))) -> -70710, </output>
      <output>truncate(multiplication(100000, sin(4.71238898))) -> -100000, </output>
      <output>truncate(multiplication(100000, sin(5.49778714))) -> -70710, </output>
      <output>truncate(multiplication(100000, sin(6.28318531))) -> 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(sinh(-6.28318531)) -> ${math::truncate(math::sinh('-6.28318531'))}, </code>
      <code>truncate(sinh(-5.49778714)) -> ${math::truncate(math::sinh('-5.49778714'))}, </code>
      <code>truncate(sinh(-4.71238898)) -> ${math::truncate(math::sinh('-4.71238898'))}, </code>
      <code>truncate(sinh(-3.92699082)) -> ${math::truncate(math::sinh('-3.92699082'))}, </code>
      <code>truncate(sinh(-3.14159265)) -> ${math::truncate(math::sinh('-3.14159265'))}, </code>
      <code>truncate(sinh(-2.35619449)) -> ${math::truncate(math::sinh('-2.35619449'))}, </code>
      <code>truncate(sinh(-1.57079633)) -> ${math::truncate(math::sinh('-1.57079633'))}, </code>
      <code>truncate(sinh(-0.78539816)) -> ${math::truncate(math::sinh('-0.78539816'))}, </code>
      <code>truncate(sinh(0)) -> ${math::truncate(math::sinh('0'))}, </code>
      <code>truncate(sinh(0.78539816)) -> ${math::truncate(math::sinh('0.78539816'))}, </code>
      <code>truncate(sinh(1.57079633)) -> ${math::truncate(math::sinh('1.57079633'))}, </code>
      <code>truncate(sinh(2.35619449)) -> ${math::truncate(math::sinh('2.35619449'))}, </code>
      <code>truncate(sinh(3.14159265)) -> ${math::truncate(math::sinh('3.14159265'))}, </code>
      <code>truncate(sinh(3.92699082)) -> ${math::truncate(math::sinh('3.92699082'))}, </code>
      <code>truncate(sinh(4.71238898)) -> ${math::truncate(math::sinh('4.71238898'))}, </code>
      <code>truncate(sinh(5.49778714)) -> ${math::truncate(math::sinh('5.49778714'))}, </code>
      <code>truncate(sinh(6.28318531)) -> ${math::truncate(math::sinh('6.28318531'))}</code>
      <output>truncate(sinh(-6.28318531)) -> -267, </output>
      <output>truncate(sinh(-5.49778714)) -> -122, </output>
      <output>truncate(sinh(-4.71238898)) -> -55, </output>
      <output>truncate(sinh(-3.92699082)) -> -25, </output>
      <output>truncate(sinh(-3.14159265)) -> -11, </output>
      <output>truncate(sinh(-2.35619449)) -> -5, </output>
      <output>truncate(sinh(-1.57079633)) -> -2, </output>
      <output>truncate(sinh(-0.78539816)) -> 0, </output>
      <output>truncate(sinh(0)) -> 0, </output>
      <output>truncate(sinh(0.78539816)) -> 0, </output>
      <output>truncate(sinh(1.57079633)) -> 2, </output>
      <output>truncate(sinh(2.35619449)) -> 5, </output>
      <output>truncate(sinh(3.14159265)) -> 11, </output>
      <output>truncate(sinh(3.92699082)) -> 25, </output>
      <output>truncate(sinh(4.71238898)) -> 55, </output>
      <output>truncate(sinh(5.49778714)) -> 122, </output>
      <output>truncate(sinh(6.28318531)) -> 267</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(10, sqrt(0))) -> ${math::truncate(math::multiplication('10', math::sqrt('0')))}, </code>
      <code>truncate(multiplication(10, sqrt(0.25))) -> ${math::truncate(math::multiplication('10', math::sqrt('0.25')))}, </code>
      <code>truncate(multiplication(10, sqrt(1))) -> ${math::truncate(math::multiplication('10', math::sqrt('1')))}, </code>
      <code>truncate(multiplication(10, sqrt(2.25))) -> ${math::truncate(math::multiplication('10', math::sqrt('2.25')))}, </code>
      <code>truncate(multiplication(10, sqrt(4))) -> ${math::truncate(math::multiplication('10', math::sqrt('4')))}</code>
      <output>truncate(multiplication(10, sqrt(0))) -> 0, </output>
      <output>truncate(multiplication(10, sqrt(0.25))) -> 5, </output>
      <output>truncate(multiplication(10, sqrt(1))) -> 10, </output>
      <output>truncate(multiplication(10, sqrt(2.25))) -> 15, </output>
      <output>truncate(multiplication(10, sqrt(4))) -> 20</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>near(tan(0), 0) -> ${math::near(math::tan('0'), '0')}, </code>
      <code>near(tan(PI / 6), 0.577350) -> ${math::near(math::tan(math::division(math::PI(), '6')), '0.577350', '0.000001')}, </code>
      <code>near(tan(PI / 4), 1) -> ${math::near(math::tan(math::division(math::PI(), '4')), '1')}, </code>
      <code>near(tan(PI / 3), 1.732050) -> ${math::near(math::tan(math::division(math::PI(), '3')), '1.732050', '0.000001')}, </code>
      <code>near(tan(PI), 0) -> ${math::near(math::tan(math::PI()), '0', '0.000001')}, </code>
      <code>near(tan(2 * PI), 0) -> ${math::near(math::tan(math::multiplication('2', math::PI())), '0', '0.000001')}</code>
      <!--code>near(tan(2 * PI), 0) -> ${math::near(math::tan(math::multiplication('2', math::PI())), '0'), TODO: Should be mark as error '0.000001'}</code-->
      <output>near(tan(0), 0) -> True, </output>
      <output>near(tan(PI / 6), 0.577350) -> True, </output>
      <output>near(tan(PI / 4), 1) -> True, </output>
      <output>near(tan(PI / 3), 1.732050) -> True, </output>
      <output>near(tan(PI), 0) -> True, </output>
      <output>near(tan(2 * PI), 0) -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(10, tanh(-5))) -> ${math::truncate(math::multiplication('10', math::tanh('-5')))}, </code>
      <code>truncate(multiplication(10, tanh(-4))) -> ${math::truncate(math::multiplication('10', math::tanh('-4')))}, </code>
      <code>truncate(multiplication(10, tanh(-3))) -> ${math::truncate(math::multiplication('10', math::tanh('-3')))}, </code>
      <code>truncate(multiplication(10, tanh(-2))) -> ${math::truncate(math::multiplication('10', math::tanh('-2')))}, </code>
      <code>truncate(multiplication(10, tanh(-1))) -> ${math::truncate(math::multiplication('10', math::tanh('-1')))}, </code>
      <code>truncate(multiplication(10, tanh(0))) -> ${math::truncate(math::multiplication('10', math::tanh('0')))}, </code>
      <code>truncate(multiplication(10, tanh(1))) -> ${math::truncate(math::multiplication('10', math::tanh('1')))}, </code>
      <code>truncate(multiplication(10, tanh(2))) -> ${math::truncate(math::multiplication('10', math::tanh('2')))}, </code>
      <code>truncate(multiplication(10, tanh(3))) -> ${math::truncate(math::multiplication('10', math::tanh('3')))}, </code>
      <code>truncate(multiplication(10, tanh(4))) -> ${math::truncate(math::multiplication('10', math::tanh('4')))}, </code>
      <code>truncate(multiplication(10, tanh(5))) -> ${math::truncate(math::multiplication('10', math::tanh('5')))}</code>
      <output>truncate(multiplication(10, tanh(-5))) -> -9, </output>
      <output>truncate(multiplication(10, tanh(-4))) -> -9, </output>
      <output>truncate(multiplication(10, tanh(-3))) -> -9, </output>
      <output>truncate(multiplication(10, tanh(-2))) -> -9, </output>
      <output>truncate(multiplication(10, tanh(-1))) -> -7, </output>
      <output>truncate(multiplication(10, tanh(0))) -> 0, </output>
      <output>truncate(multiplication(10, tanh(1))) -> 7, </output>
      <output>truncate(multiplication(10, tanh(2))) -> 9, </output>
      <output>truncate(multiplication(10, tanh(3))) -> 9, </output>
      <output>truncate(multiplication(10, tanh(4))) -> 9, </output>
      <output>truncate(multiplication(10, tanh(5))) -> 9</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>near(cot(PI / 6), 1.732050) -> ${math::near(math::cot(math::division(math::PI(), '6')), '1.732050', '0.000001')}, </code>
      <code>near(cot(PI / 4), 1) -> ${math::near(math::cot(math::division(math::PI(), '4')), '1', '0.000001')}, </code>
      <code>near(cot(PI / 3), 0.577350) -> ${math::near(math::cot(math::division(math::PI(), '3')), '0.577350', '0.000001')}, </code>
      <code>near(cot(PI / 2), 0) -> ${math::near(math::cot(math::division(math::PI(), '2')), '0', '0.000001')}, </code>
      <code>near(cot(3 * PI / 2), 0) -> ${math::near(math::cot(math::division(math::multiplication('3', math::PI()), '2')), '0', '0.000001')}</code>
      <output>near(cot(PI / 6), 1.732050) -> True, </output>
      <output>near(cot(PI / 4), 1) -> True, </output>
      <output>near(cot(PI / 3), 0.577350) -> True, </output>
      <output>near(cot(PI / 2), 0) -> True, </output>
      <output>near(cot(3 * PI / 2), 0) -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(multiplication(10, coth(-5))) -> ${math::truncate(math::multiplication('10', math::coth('-5')))}, </code>
      <code>truncate(multiplication(10, coth(-4))) -> ${math::truncate(math::multiplication('10', math::coth('-4')))}, </code>
      <code>truncate(multiplication(10, coth(-3))) -> ${math::truncate(math::multiplication('10', math::coth('-3')))}, </code>
      <code>truncate(multiplication(10, coth(-2))) -> ${math::truncate(math::multiplication('10', math::coth('-2')))}, </code>
      <code>truncate(multiplication(10, coth(-1))) -> ${math::truncate(math::multiplication('10', math::coth('-1')))}, </code>
      <code>truncate(multiplication(10, coth(1))) -> ${math::truncate(math::multiplication('10', math::coth('1')))}, </code>
      <code>truncate(multiplication(10, coth(2))) -> ${math::truncate(math::multiplication('10', math::coth('2')))}, </code>
      <code>truncate(multiplication(10, coth(3))) -> ${math::truncate(math::multiplication('10', math::coth('3')))}, </code>
      <code>truncate(multiplication(10, coth(4))) -> ${math::truncate(math::multiplication('10', math::coth('4')))}, </code>
      <code>truncate(multiplication(10, coth(5))) -> ${math::truncate(math::multiplication('10', math::coth('5')))}</code>
      <output>truncate(multiplication(10, coth(-5))) -> -10, </output>
      <output>truncate(multiplication(10, coth(-4))) -> -10, </output>
      <output>truncate(multiplication(10, coth(-3))) -> -10, </output>
      <output>truncate(multiplication(10, coth(-2))) -> -10, </output>
      <output>truncate(multiplication(10, coth(-1))) -> -13, </output>
      <output>truncate(multiplication(10, coth(1))) -> 13, </output>
      <output>truncate(multiplication(10, coth(2))) -> 10, </output>
      <output>truncate(multiplication(10, coth(3))) -> 10, </output>
      <output>truncate(multiplication(10, coth(4))) -> 10, </output>
      <output>truncate(multiplication(10, coth(5))) -> 10</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>truncate(-1) -> ${math::truncate('-1')}, </code>
      <code>truncate(-1.5) -> ${math::truncate('-1.5')}, </code>
      <code>truncate(0) -> ${math::truncate('0')}, </code>
      <code>truncate(0.0) -> ${math::truncate('0.0')}, </code>
      <code>truncate(1) -> ${math::truncate('1')}, </code>
      <code>truncate(1.5) -> ${math::truncate('1.5')}</code>
      <output>truncate(-1) -> -1, </output>
      <output>truncate(-1.5) -> -1, </output>
      <output>truncate(0) -> 0, </output>
      <output>truncate(0.0) -> 0, </output>
      <output>truncate(1) -> 1, </output>
      <output>truncate(1.5) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>near(PI, 3.1415926535897931) -> ${math::near(math::PI(), '3.1415926535897931', '0.000001')}, </code>
      <code>near(E, 2.7182818284590451) -> ${math::near(math::E(), '2.7182818284590451', '0.000001')}</code>
      <output>near(PI, 3.1415926535897931) -> True, </output>
      <output>near(E, 2.7182818284590451) -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>-2 * PI -> ${math::truncate(math::degrees(math::multiplication('-2', math::PI())))}, </code>
      <code>-PI - 3 * PI/4 -> ${math::truncate(math::degrees(math::subtraction(math::multiplication('-1', math::PI()), math::division(math::multiplication('3', math::PI()), '4'))))}, </code>
      <code>-PI - PI/2 -> ${math::truncate(math::degrees(math::subtraction(math::multiplication('-1', math::PI()), math::division(math::PI(), '2'))))}, </code>
      <code>-PI - PI/4 -> ${math::truncate(math::degrees(math::subtraction(math::multiplication('-1', math::PI()), math::division(math::PI(), '4'))))}, </code>
      <code>-PI -> ${math::truncate(math::degrees(math::multiplication('-1', math::PI())))}, </code>
      <code>-3 * PI/4 -> ${math::truncate(math::degrees(math::multiplication('-1', math::division(math::multiplication('3', math::PI()), '4'))))}, </code>
      <code>-PI/2 -> ${math::truncate(math::degrees(math::multiplication('-1', math::division(math::PI(), '2'))))}, </code>
      <code>-PI/4 -> ${math::truncate(math::degrees(math::multiplication('-1', math::division(math::PI(), '4'))))}, </code>
      <code>0 -> ${math::truncate(math::degrees('0'))}, </code>
      <code>PI/4 -> ${math::truncate(math::degrees(math::division(math::PI(), '4')))}, </code>
      <code>PI/2 -> ${math::truncate(math::degrees(math::division(math::PI(), '2')))}, </code>
      <code>3 * PI/4 -> ${math::truncate(math::degrees(math::division(math::multiplication('3', math::PI()), '4')))}, </code>
      <code>PI -> ${math::truncate(math::degrees(math::PI()))}, </code>
      <code>PI + PI/4 -> ${math::truncate(math::degrees(math::addition(math::PI(), math::division(math::PI(), '4'))))}, </code>
      <code>PI + PI/2 -> ${math::truncate(math::degrees(math::addition(math::PI(), math::division(math::PI(), '2'))))}, </code>
      <code>PI + 3 * PI/4 -> ${math::truncate(math::degrees(math::addition(math::PI(), math::division(math::multiplication('3', math::PI()), '4'))))}, </code>
      <code>2 * PI -> ${math::truncate(math::degrees(math::multiplication('2', math::PI())))}</code>
      <output>-2 * PI -> -360, </output>
      <output>-PI - 3 * PI/4 -> -315, </output>
      <output>-PI - PI/2 -> -270, </output>
      <output>-PI - PI/4 -> -225, </output>
      <output>-PI -> -180, </output>
      <output>-3 * PI/4 -> -135, </output>
      <output>-PI/2 -> -90, </output>
      <output>-PI/4 -> -45, </output>
      <output>0 -> 0, </output>
      <output>PI/4 -> 45, </output>
      <output>PI/2 -> 90, </output>
      <output>3 * PI/4 -> 135, </output>
      <output>PI -> 180, </output>
      <output>PI + PI/4 -> 225, </output>
      <output>PI + PI/2 -> 270, </output>
      <output>PI + 3 * PI/4 -> 315, </output>
      <output>2 * PI -> 360</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>-360 -> ${math::truncate(math::multiplication('100000', math::radians('-360')))}, </code>
      <code>-315 -> ${math::truncate(math::multiplication('100000', math::radians('-315')))}, </code>
      <code>-270 -> ${math::truncate(math::multiplication('100000', math::radians('-270')))}, </code>
      <code>-225 -> ${math::truncate(math::multiplication('100000', math::radians('-225')))}, </code>
      <code>-180 -> ${math::truncate(math::multiplication('100000', math::radians('-180')))}, </code>
      <code>-135 -> ${math::truncate(math::multiplication('100000', math::radians('-135')))}, </code>
      <code>-90 -> ${math::truncate(math::multiplication('100000', math::radians('-90')))}, </code>
      <code>-45 -> ${math::truncate(math::multiplication('100000', math::radians('-45')))}, </code>
      <code>0 -> ${math::truncate(math::multiplication('100000', math::radians('0')))}, </code>
      <code>45 -> ${math::truncate(math::multiplication('100000', math::radians('45')))}, </code>
      <code>90 -> ${math::truncate(math::multiplication('100000', math::radians('90')))}, </code>
      <code>135 -> ${math::truncate(math::multiplication('100000', math::radians('135')))}, </code>
      <code>180 -> ${math::truncate(math::multiplication('100000', math::radians('180')))}, </code>
      <code>225 -> ${math::truncate(math::multiplication('100000', math::radians('225')))}, </code>
      <code>270 -> ${math::truncate(math::multiplication('100000', math::radians('270')))}, </code>
      <code>315 -> ${math::truncate(math::multiplication('100000', math::radians('315')))}, </code>
      <code>360 -> ${math::truncate(math::multiplication('100000', math::radians('360')))}</code>
      <output>-360 -> -628318, </output>
      <output>-315 -> -549778, </output>
      <output>-270 -> -471238, </output>
      <output>-225 -> -392699, </output>
      <output>-180 -> -314159, </output>
      <output>-135 -> -235619, </output>
      <output>-90 -> -157079, </output>
      <output>-45 -> -78539, </output>
      <output>0 -> 0, </output>
      <output>45 -> 78539, </output>
      <output>90 -> 157079, </output>
      <output>135 -> 235619, </output>
      <output>180 -> 314159, </output>
      <output>225 -> 392699, </output>
      <output>270 -> 471238, </output>
      <output>315 -> 549778, </output>
      <output>360 -> 628318</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>3 + 4 -> ${math::truncate(math::addition('3', '4'))}, </code>
      <code>3 - 4 -> ${math::truncate(math::addition('3', '-4'))}</code>
      <output>3 + 4 -> 7, </output>
      <output>3 - 4 -> -1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>3 - 4 -> ${math::truncate(math::subtraction('3', '4'))}, </code>
      <code>3 + 4 -> ${math::truncate(math::subtraction('3', '-4'))}</code>
      <output>3 - 4 -> -1, </output>
      <output>3 + 4 -> 7</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>3 * 4 -> ${math::truncate(math::multiplication('3', '4'))}, </code>
      <code>3 * -4 -> ${math::truncate(math::multiplication('3', '-4'))}</code>
      <output>3 * 4 -> 12, </output>
      <output>3 * -4 -> -12</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>9 / 3 -> ${math::truncate(math::division('9', '3'))}, </code>
      <code>9 / -3 -> ${math::truncate(math::division('9', '-3'))}</code>
      <output>9 / 3 -> 3, </output>
      <output>9 / -3 -> -3</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(double_epsilon()) -> ${string::empty(math::double_epsilon())}, </code>
      <code>near(1, 2) -> ${math::near('1', '2')}, </code>
      <code>near(1, 2, 0.000001) -> ${math::near('1', '2', '0.000001')}, </code>
      <code>less(1, 2) -> ${math::less('1', '2')}, </code>
      <code>greater(1, 2) -> ${math::greater('1', '2')}</code>
      <output>empty(double_epsilon()) -> False, </output>
      <output>near(1, 2) -> False, </output>
      <output>near(1, 2, 0.000001) -> False, </output>
      <output>less(1, 2) -> True, </output>
      <output>greater(1, 2) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>The quadratic polynomial </code>
      <code>x^2 - 16 = 0 </code>
      <code>have next solution(s) </code>
      <code>X1 -> </code>
      <code>${math::truncate(math::division(math::addition(math::multiplication('-1', '0'), </code>
      <code>math::sqrt(math::subtraction(math::pow('0', '2'), math::multiplication('4', math::multiplication('1', '-16'))))), math::multiplication('2', '1'))))}</code>
      <code> X2 -> </code>
      <code>${math::truncate(math::division(math::subtraction(math::multiplication('-1', '0'), </code>
      <code>math::sqrt(math::subtraction(math::pow('0', '2'), math::multiplication('4', math::multiplication('1', '-16'))))), math::multiplication('2', '1'))))}</code>
      <output>The quadratic polynomial </output>
      <output>x^2 - 16 = 0 </output>
      <output>have next solution(s) </output>
      <output>X1 -> 4 </output>
      <output>X2 -> -4</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>format-to-string -> ${string::empty(datetime::format-to-string('0', '%A %c'))}</code>
      <output>format-to-string -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string(01.09.2019 2:03:04) -> ${datetime::to-string('01.09.2019 2:03:04')}</code>
      <output>to-string(01.09.2019 2:03:04) -> 01.09.2019 2:03:04</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse(01.09.2019 2:03:04) -> ${datetime::parse('01.09.2019 2:03:04')}</code>
      <output>parse(01.09.2019 2:03:04) -> 01.09.2019 2:03:04</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-day(1569840495) -> ${datetime::get-day('1569840495')}</code>
      <output>get-day(1569840495) -> 30</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-day(1569840495) -> ${datetime::get-day-of-week('1569840495')} </code>
      <code>get-day(1577059200) -> ${datetime::get-day-of-week('1577059200')}</code>
      <output>get-day(1569840495) -> 1 </output>
      <output>get-day(1577059200) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-day-of-year(1569840495) -> ${datetime::get-day-of-year('1569840495')}</code>
      <output>get-day-of-year(1569840495) -> 273</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-days-in-month(2016, 2) -> ${datetime::get-days-in-month('2016', '2')}, </code>
      <code>get-days-in-month(2019, 2) -> ${datetime::get-days-in-month('2019', '2')}</code>
      <output>get-days-in-month(2016, 2) -> 29, </output>
      <output>get-days-in-month(2019, 2) -> 28</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-hour(1569840495) -> ${datetime::get-hour('1569840495')}</code>
      <output>get-hour(1569840495) -> 10</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-minute(1569840495) -> ${datetime::get-minute('1569840495')}</code>
      <output>get-minute(1569840495) -> 48</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-month(1569840495) -> ${datetime::get-month('1569840495')}</code>
      <output>get-month(1569840495) -> 9</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-second(1569840495) -> ${datetime::get-second('1569840495')}</code>
      <output>get-second(1569840495) -> 15</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-year(1569840495) -> ${datetime::get-year('1569840495')}</code>
      <output>get-year(1569840495) -> 2019</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>is-leap-year(2016) -> ${datetime::is-leap-year('2016')}, </code>
      <code>is-leap-year(2019) -> ${datetime::is-leap-year('2019')}</code>
      <output>is-leap-year(2016) -> True, </output>
      <output>is-leap-year(2019) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(ticks()) -> ${string::empty(datetime::ticks())}</code>
      <output>empty(ticks()) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(now-utc()) -> ${string::empty(datetime::now-utc())}</code>
      <output>empty(now-utc()) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(now()) -> ${string::empty(datetime::now())}</code>
      <output>empty(now()) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-input(30.09.2019 10:48:15) -> ${datetime::from-input('30.09.2019 10:48:15')}</code>
      <output>from-input(30.09.2019 10:48:15) -> 1569840495</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-days(1) -> ${timespan::from-days('1')}</code>
      <output>from-days(1) -> 86400</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-hours(1) -> ${timespan::from-hours('1')}</code>
      <output>from-hours(1) -> 3600</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-milliseconds(10000) -> ${timespan::from-milliseconds('10000')}</code>
      <output>from-milliseconds(10000) -> 10</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-minutes(1) -> ${timespan::from-minutes('1')}</code>
      <output>from-minutes(1) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>from-seconds(1) -> ${timespan::from-seconds('1')}</code>
      <output>from-seconds(1) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(from-ticks(100000000)) -> ${string::empty(timespan::from-ticks('100000000'))}</code>
      <output>empty(from-ticks(100000000)) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-days(86400) -> ${timespan::get-days('86400')}</code>
      <output>get-days(86400) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-hours(3600) -> ${timespan::get-hours('3600')}</code>
      <output>get-hours(3600) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-minutes(60) -> ${timespan::get-minutes('60')}</code>
      <output>get-minutes(60) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>parse(60) -> ${timespan::parse('60')}</code>
      <output>parse(60) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>to-string(60) -> ${timespan::to-string('60')}</code>
      <output>to-string(60) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-seconds(60) -> ${timespan::get-seconds('60')}</code>
      <output>get-seconds(60) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-seconds(60) -> ${timespan::get-total-seconds('60')}</code>
      <output>get-total-seconds(60) -> 60</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>empty(get-ticks(10)) -> ${string::empty(timespan::get-ticks('10'))}</code>
      <output>empty(get-ticks(10)) -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-days(86400) -> ${math::truncate(timespan::get-total-days('86400'))}</code>
      <output>get-total-days(86400) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-hours(3600) -> ${math::truncate(timespan::get-total-hours('3600'))}</code>
      <output>get-total-hours(3600) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-milliseconds(1) -> ${timespan::get-total-milliseconds('1')}</code>
      <output>get-total-milliseconds(1) -> 1000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-total-minutes(60) -> ${math::truncate(timespan::get-total-minutes('60'))}</code>
      <output>get-total-minutes(60) -> 1</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${long::to-string('0')} == ${int64::to-string('0')}</code>
      <output>0 == 0</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${long::to-string('9223372036854775807')} == ${int64::to-string('9223372036854775807')}</code>
      <output>9223372036854775807 == 9223372036854775807</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${long::to-string('-9223372036854775808')} == ${int64::to-string('-9223372036854775808')}</code>
      <output>-9223372036854775808 == -9223372036854775808</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::less('1.0', '2.0')}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::less('2.0', '2.0')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::greater('2.0', '2.0')}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${version::greater('2.0', '1.0')}</code>
      <output>True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <!--code>exists('bool') -> ${task::exists('bool')} </code>
      <code>exists('cygpath') -> ${task::exists('cygpath')} </code>
      <code>exists('datetime') -> ${task::exists('datetime')} </code>
      <code>exists('directory') -> ${task::exists('directory')} </code>
      <code>exists('dns') -> ${task::exists('dns')} </code>
      <code>exists('double') -> ${task::exists('double')} </code>
      <code>exists('environment') -> ${task::exists('environment')} </code>
      <code>exists('file') -> ${task::exists('file')} </code>
      <code>exists('fileversioninfo') -> ${task::exists('fileversioninfo')} </code>
      <code>exists('int') -> ${task::exists('int')} </code>
      <code>exists('int64') -> ${task::exists('int64')} </code>
      <code>exists('long') -> ${task::exists('long')} </code>
      <code>exists('math') -> ${task::exists('math')} </code>
      <code>exists('operating-system') -> ${task::exists('operating-system')} </code>
      <code>exists('path') -> ${task::exists('path')} </code>
      <code>exists('platform') -> ${task::exists('platform')} </code>
      <code>exists('program') -> ${task::exists('program')} </code>
      <code>exists('project') -> ${task::exists('project')} </code>
      <code>exists('property') -> ${task::exists('property')} </code>
      <code>exists('string') -> ${task::exists('string')} </code>
      <code>exists('target') -> ${task::exists('target')} </code>
      <code>exists('task') -> ${task::exists('task')} </code>
      <code>exists('timespan') -> ${task::exists('timespan')} </code>
      <code>exists('version') -> ${task::exists('version')}</code>
      <output>exists('bool') -> True </output>
      <output>exists('cygpath') -> True </output>
      <output>exists('datetime') -> True </output>
      <output>exists('directory') -> False </output>
      <output>exists('dns') -> False </output>
      <output>exists('double') -> True </output>
      <output>exists('environment') -> True </output>
      <output>exists('file') -> False </output>
      <output>exists('fileversioninfo') -> False </output>
      <output>exists('int') -> True </output>
      <output>exists('int64') -> True </output>
      <output>exists('long') -> True </output>
      <output>exists('math') -> True </output>
      <output>exists('operating-system') -> True </output>
      <output>exists('path') -> True </output>
      <output>exists('platform') -> True </output>
      <output>exists('program') -> True </output>
      <output>exists('project') -> True </output>
      <output>exists('property') -> True </output>
      <output>exists('string') -> True </output>
      <output>exists('target') -> False </output>
      <output>exists('task') -> True </output>
      <output>exists('timespan') -> True </output>
      <output>exists('version') -> True</output>
      -->
      <code>exists('al') -> ${task::exists('al')} </code>
      <code>exists('asminfo') -> ${task::exists('asminfo')} </code>
      <code>exists('attrib') -> ${task::exists('attrib')} </code>
      <code>exists('aximp') -> ${task::exists('aximp')} </code>
      <code>exists('call') -> ${task::exists('call')} </code>
      <code>exists('choose') -> ${task::exists('choose')} </code>
      <code>exists('cl') -> ${task::exists('cl')} </code>
      <code>exists('copy') -> ${task::exists('copy')} </code>
      <code>exists('csc') -> ${task::exists('csc')} </code>
      <code>exists('delay-sign') -> ${task::exists('delay-sign')} </code>
      <code>exists('delete') -> ${task::exists('delete')} </code>
      <code>exists('description') -> ${task::exists('description')} </code>
      <code>exists('echo') -> ${task::exists('echo')} </code>
      <code>exists('exec') -> ${task::exists('exec')} </code>
      <code>exists('fail') -> ${task::exists('fail')} </code>
      <code>exists('foreach') -> ${task::exists('foreach')} </code>
      <code>exists('get') -> ${task::exists('get')} </code>
      <code>exists('gunzip') -> ${task::exists('gunzip')} </code>
      <code>exists('if') -> ${task::exists('if')} </code>
      <code>exists('ilasm') -> ${task::exists('ilasm')} </code>
      <code>exists('ildasm') -> ${task::exists('ildasm')} </code>
      <code>exists('include') -> ${task::exists('include')} </code>
      <code>exists('jsc') -> ${task::exists('jsc')} </code>
      <code>exists('lib') -> ${task::exists('lib')} </code>
      <code>exists('license') -> ${task::exists('license')} </code>
      <code>exists('link') -> ${task::exists('link')} </code>
      <code>exists('loadfile') -> ${task::exists('loadfile')} </code>
      <code>exists('loadtasks') -> ${task::exists('loadtasks')} </code>
      <code>exists('mail') -> ${task::exists('mail')} </code>
      <code>exists('mc') -> ${task::exists('mc')} </code>
      <code>exists('midl') -> ${task::exists('midl')} </code>
      <code>exists('mkdir') -> ${task::exists('mkdir')} </code>
      <code>exists('move') -> ${task::exists('move')} </code>
      <code>exists('ndoc') -> ${task::exists('ndoc')} </code>
      <code>exists('nunit2') -> ${task::exists('nunit2')} </code>
      <code>exists('project') -> ${task::exists('project')} </code>
      <code>exists('property') -> ${task::exists('property')} </code>
      <code>exists('rc') -> ${task::exists('rc')} </code>
      <code>exists('readregistry') -> ${task::exists('readregistry')} </code>
      <code>exists('regasm') -> ${task::exists('regasm')} </code>
      <code>exists('regex') -> ${task::exists('regex')} </code>
      <code>exists('regsvcs') -> ${task::exists('regsvcs')} </code>
      <code>exists('resgen') -> ${task::exists('resgen')} </code>
      <code>exists('script') -> ${task::exists('script')} </code>
      <code>exists('servicecontroller') -> ${task::exists('servicecontroller')} </code>
      <code>exists('setenv') -> ${task::exists('setenv')} </code>
      <code>exists('sleep') -> ${task::exists('sleep')} </code>
      <code>exists('solution') -> ${task::exists('solution')} </code>
      <code>exists('style') -> ${task::exists('style')} </code>
      <code>exists('sysinfo') -> ${task::exists('sysinfo')} </code>
      <code>exists('tar') -> ${task::exists('tar')} </code>
      <code>exists('target') -> ${task::exists('target')} </code>
      <code>exists('tlbexp') -> ${task::exists('tlbexp')} </code>
      <code>exists('tlbimp') -> ${task::exists('tlbimp')} </code>
      <code>exists('touch') -> ${task::exists('touch')} </code>
      <code>exists('trycatch') -> ${task::exists('trycatch')} </code>
      <code>exists('tstamp') -> ${task::exists('tstamp')} </code>
      <code>exists('untar') -> ${task::exists('untar')} </code>
      <code>exists('unzip') -> ${task::exists('unzip')} </code>
      <code>exists('uptodate') -> ${task::exists('uptodate')} </code>
      <code>exists('vbc') -> ${task::exists('vbc')} </code>
      <code>exists('vjc') -> ${task::exists('vjc')} </code>
      <code>exists('xmlpeek') -> ${task::exists('xmlpeek')} </code>
      <code>exists('xmlpoke') -> ${task::exists('xmlpoke')} </code>
      <code>exists('zip') -> ${task::exists('zip')}</code>
      <output>exists('al') -> False </output>
      <output>exists('asminfo') -> False </output>
      <output>exists('attrib') -> False </output>
      <output>exists('aximp') -> False </output>
      <output>exists('call') -> False </output>
      <output>exists('choose') -> False </output>
      <output>exists('cl') -> False </output>
      <output>exists('copy') -> False </output>
      <output>exists('csc') -> False </output>
      <output>exists('delay-sign') -> False </output>
      <output>exists('delete') -> True </output>
      <output>exists('description') -> True </output>
      <output>exists('echo') -> True </output>
      <output>exists('exec') -> True </output>
      <output>exists('fail') -> False </output>
      <output>exists('foreach') -> False </output>
      <output>exists('get') -> False </output>
      <output>exists('gunzip') -> False </output>
      <output>exists('if') -> False </output>
      <output>exists('ilasm') -> False </output>
      <output>exists('ildasm') -> False </output>
      <output>exists('include') -> False </output>
      <output>exists('jsc') -> False </output>
      <output>exists('lib') -> False </output>
      <output>exists('license') -> False </output>
      <output>exists('link') -> False </output>
      <output>exists('loadfile') -> True </output>
      <output>exists('loadtasks') -> False </output>
      <output>exists('mail') -> False </output>
      <output>exists('mc') -> False </output>
      <output>exists('midl') -> False </output>
      <output>exists('mkdir') -> True </output>
      <output>exists('move') -> False </output>
      <output>exists('ndoc') -> False </output>
      <output>exists('nunit2') -> False </output>
      <output>exists('project') -> True </output>
      <output>exists('property') -> True </output>
      <output>exists('rc') -> False </output>
      <output>exists('readregistry') -> False </output>
      <output>exists('regasm') -> False </output>
      <output>exists('regex') -> False </output>
      <output>exists('regsvcs') -> False </output>
      <output>exists('resgen') -> False </output>
      <output>exists('script') -> False </output>
      <output>exists('servicecontroller') -> False </output>
      <output>exists('setenv') -> False </output>
      <output>exists('sleep') -> False </output>
      <output>exists('solution') -> False </output>
      <output>exists('style') -> False </output>
      <output>exists('sysinfo') -> False </output>
      <output>exists('tar') -> False </output>
      <output>exists('target') -> True </output>
      <output>exists('tlbexp') -> False </output>
      <output>exists('tlbimp') -> False </output>
      <output>exists('touch') -> False </output>
      <output>exists('trycatch') -> False </output>
      <output>exists('tstamp') -> False </output>
      <output>exists('untar') -> False </output>
      <output>exists('unzip') -> False </output>
      <output>exists('uptodate') -> False </output>
      <output>exists('vbc') -> False </output>
      <output>exists('vjc') -> False </output>
      <output>exists('xmlpeek') -> False </output>
      <output>exists('xmlpoke') -> False </output>
      <output>exists('zip') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>exists('build') -> ${target::exists('build')}</code>
      <output>exists('build') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>get-current-target() -> ${target::get-current-target()}</code>
      <output>get-current-target() -> </output>
      <return>0</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>has-executed('build') -> ${target::has-executed('build')}</code>
      <output>has-executed('build') -> False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-160('') -> ${hash::bytes-to-string(hash::blake2b-160(''))}</code>
      <output>blake2b-160('') -> 3345524abf6bbe1809449224b5972c41790b6cf2</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-256('') -> ${hash::bytes-to-string(hash::blake2b-256(''))}</code>
      <output>blake2b-256('') -> 0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-384('') -> ${hash::bytes-to-string(hash::blake2b-384(''))}</code>
      <output>blake2b-384('') -> b32811423377f52d7862286ee1a72ee540524380fda1724a6f25d7978c6fd3244a6caf0498812673c5e05ef583825100</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake2b-512('') -> ${hash::bytes-to-string(hash::blake2b-512(''))}</code>
      <output>blake2b-512('') -> 786a02f742015903c6c6fd852552d272912f4740e15847618a86e217f71f5419d25e1031afee585313896444934eb04b903a685b1448b755d56f701afe9be2ce</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>blake3-256('') -> ${hash::bytes-to-string(hash::blake3-256(''))}</code>
      <output>blake3-256('') -> af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>bytes-to-string('') -> ${hash::bytes-to-string('')}</code>
      <output>bytes-to-string('') -> </output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>bytes-to-string('&#x9;&#xa;&#xd;') -> ${hash::bytes-to-string('&#x9;&#xa;&#xd;')}</code>
      <output>bytes-to-string('&#x9;&#xa;&#xd;') -> 090a0d</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('') -> ${hash::bytes-to-string(hash::crc32(''))}</code>
      <output>crc32('') -> 00000000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('', 'decreasing') -> ${hash::bytes-to-string(hash::crc32('', 'decreasing'))}</code>
      <output>crc32('', 'decreasing') -> 00000000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('', 'increasing') -> ${hash::bytes-to-string(hash::crc32('', 'increasing'))}</code>
      <output>crc32('', 'increasing') -> 00000000</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('The quick brown fox jumps over the lazy dog') -> ${hash::bytes-to-string(hash::crc32('The quick brown fox jumps over the lazy dog'))}</code>
      <output>crc32('The quick brown fox jumps over the lazy dog') -> 39a34f41</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('The quick brown fox jumps over the lazy dog', 'decreasing') -> ${hash::bytes-to-string(hash::crc32('The quick brown fox jumps over the lazy dog', 'decreasing'))}</code>
      <output>crc32('The quick brown fox jumps over the lazy dog', 'decreasing') -> 414fa339</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>crc32('The quick brown fox jumps over the lazy dog', 'increasing') -> ${hash::bytes-to-string(hash::crc32('The quick brown fox jumps over the lazy dog', 'increasing'))}</code>
      <output>crc32('The quick brown fox jumps over the lazy dog', 'increasing') -> 39a34f41</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak-224('') -> ${hash::bytes-to-string(hash::keccak-224(''))}</code>
      <output>hash::keccak-224('') -> f71837502ba8e10837bdd8d365adb85591895602fc552b48b7390abd</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak-256('') -> ${hash::bytes-to-string(hash::keccak-256(''))}</code>
      <output>hash::keccak-256('') -> c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak-384('') -> ${hash::bytes-to-string(hash::keccak-384(''))}</code>
      <output>hash::keccak-384('') -> 2c23146a63a29acf99e73b88f8c24eaa7dc60aa771780ccc006afbfa8fe2479b2dd2b21362337441ac12b515911957ff</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::keccak-512('') -> ${hash::bytes-to-string(hash::keccak-512(''))}</code>
      <output>hash::keccak-512('') -> 0eab42de4c3ceb9235fc91acffe746b29c29a8c366b7c60e4e67c466f36a4304c00fa9caf9d87976ba469bcbe06713b435f091ef2769fb160cdab33d3670680e</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3-224('') -> ${hash::bytes-to-string(hash::sha3-224(''))}</code>
      <output>hash::sha3-224('') -> 6b4e03423667dbb73b6e15454f0eb1abd4597f9a1b078e3f5b5a6bc7</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3-256('') -> ${hash::bytes-to-string(hash::sha3-256(''))}</code>
      <output>hash::sha3-256('') -> a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3-384('') -> ${hash::bytes-to-string(hash::sha3-384(''))}</code>
      <output>hash::sha3-384('') -> 0c63a75b845e4f7d01107d852e4c2485c51a50aaaa94fc61995e71bbee983a2ac3713831264adb47fb6bd1e058d5f004</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>hash::sha3-512('') -> ${hash::bytes-to-string(hash::sha3-512(''))}</code>
      <output>hash::sha3-512('') -> a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code if="false"><!-- TODO -->
      <code>${string::empty(</code>

      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'directory')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'file')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'all')</code>

      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'directory', 'false')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'file', 'false')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'all', 'false')</code>

      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'directory', 'true')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'file', 'true')</code>
      <code>directory::enumerate-file-system-entries(path::get-temp-path(), 'all', 'true')</code>

      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>exists(get-temp-path()) -> ${directory::exists(path::get-temp-path())}</code>
      <output>exists(get-temp-path()) -> True</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-creation-time(path::get-temp-path())</code>
      <code>directory::get-creation-time-utc(path::get-temp-path())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-last-access-time(path::get-temp-path())</code>
      <code>directory::get-last-access-time-utc(path::get-temp-path())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-last-write-time(path::get-temp-path())</code>
      <code>directory::get-last-write-time-utc(path::get-temp-path())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-directory-root(path::get-temp-path())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-parent-directory(environment::get-folder-path('Personal'))</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-current-directory())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_code>
      <code>${string::empty(</code>
      <code>directory::get-logical-drives())</code>
      <code>)}</code>
      <output>False</output>
      <return>1</return>
    </interpreter_evaluate_code>
    <interpreter_evaluate_task>
      <code><![CDATA[<echo />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
    <interpreter_evaluate_task>
      <code><![CDATA[<echo message="Hello! Do you know that last-index-of('ABAB', 'B') is ${string::last-index-of('ABAB', 'B')}?" verbose="true" />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
    <interpreter_evaluate_task>
      <code><![CDATA[<echo>
Hello! Do you know that last-index-of('ABAB', 'B') is ${string::last-index-of('ABAB', 'B')}?
      </echo> />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
    <interpreter_evaluate_task project="true">
      <code><![CDATA[<property name="debug" value="true" />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
    <interpreter_evaluate_task project="true">
      <code><![CDATA[<property name="PI" value="{math::PI()}" dynamic="true" />]]></code>
      <return>1</return>
    </interpreter_evaluate_task>
  </TestInterpreter>
  <TestMathUnit>
    <math_abs>
      <input>-1.5</input>
      <output>1.5</output>
    </math_abs>
    <math_abs>
      <input>-1</input>
      <output>1</output>
    </math_abs>
    <math_abs>
      <input>-0.5</input>
      <output>0.5</output>
    </math_abs>
    <math_abs>
      <input>0</input>
      <output>0</output>
    </math_abs>
    <math_abs>
      <input>0.5</input>
      <output>0.5</output>
    </math_abs>
    <math_abs>
      <input>1</input>
      <output>1</output>
    </math_abs>
    <math_abs>
      <input>1.5</input>
      <output>1.5</output>
    </math_abs>
    <math_ceiling>
      <input>-1.75</input>
      <output>-1</output>
    </math_ceiling>
    <math_ceiling>
      <input>-1.5</input>
      <output>-1</output>
    </math_ceiling>
    <math_ceiling>
      <input>-1.25</input>
      <output>-1</output>
    </math_ceiling>
    <math_ceiling>
      <input>-1</input>
      <output>-1</output>
    </math_ceiling>
    <math_ceiling>
      <input>-0.75</input>
      <output>0</output>
    </math_ceiling>
    <math_ceiling>
      <input>-0.5</input>
      <output>0</output>
    </math_ceiling>
    <math_ceiling>
      <input>-0.25</input>
      <output>0</output>
    </math_ceiling>
    <math_ceiling>
      <input>0</input>
      <output>0</output>
    </math_ceiling>
    <math_ceiling>
      <input>0.25</input>
      <output>1</output>
    </math_ceiling>
    <math_ceiling>
      <input>0.5</input>
      <output>1</output>
    </math_ceiling>
    <math_ceiling>
      <input>0.75</input>
      <output>1</output>
    </math_ceiling>
    <math_ceiling>
      <input>1</input>
      <output>1</output>
    </math_ceiling>
    <math_ceiling>
      <input>1.25</input>
      <output>2</output>
    </math_ceiling>
    <math_ceiling>
      <input>1.5</input>
      <output>2</output>
    </math_ceiling>
    <math_ceiling>
      <input>1.75</input>
      <output>2</output>
    </math_ceiling>
    <math_floor>
      <input>-1.75</input>
      <output>-2</output>
    </math_floor>
    <math_floor>
      <input>-1.5</input>
      <output>-2</output>
    </math_floor>
    <math_floor>
      <input>-1.25</input>
      <output>-2</output>
    </math_floor>
    <math_floor>
      <input>-1</input>
      <output>-1</output>
    </math_floor>
    <math_floor>
      <input>-0.75</input>
      <output>-1</output>
    </math_floor>
    <math_floor>
      <input>-0.5</input>
      <output>-1</output>
    </math_floor>
    <math_floor>
      <input>-0.25</input>
      <output>-1</output>
    </math_floor>
    <math_floor>
      <input>0</input>
      <output>0</output>
    </math_floor>
    <math_floor>
      <input>0.25</input>
      <output>0</output>
    </math_floor>
    <math_floor>
      <input>0.5</input>
      <output>0</output>
    </math_floor>
    <math_floor>
      <input>0.75</input>
      <output>0</output>
    </math_floor>
    <math_floor>
      <input>1</input>
      <output>1</output>
    </math_floor>
    <math_floor>
      <input>1.25</input>
      <output>1</output>
    </math_floor>
    <math_floor>
      <input>1.5</input>
      <output>1</output>
    </math_floor>
    <math_floor>
      <input>1.75</input>
      <output>1</output>
    </math_floor>
    <math_round>
      <input>-1.75</input>
      <output>-2</output>
    </math_round>
    <math_round>
      <input>-1.5</input>
      <output>-2</output>
    </math_round>
    <math_round>
      <input>-1.25</input>
      <output>-1</output>
    </math_round>
    <math_round>
      <input>-1</input>
      <output>-1</output>
    </math_round>
    <math_round>
      <input>-0.75</input>
      <output>-1</output>
    </math_round>
    <math_round>
      <input>-0.5</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>-0.25</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>0</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>0.25</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>0.5</input>
      <output>0</output>
    </math_round>
    <math_round>
      <input>0.75</input>
      <output>1</output>
    </math_round>
    <math_round>
      <input>1</input>
      <output>1</output>
    </math_round>
    <math_round>
      <input>1.25</input>
      <output>1</output>
    </math_round>
    <math_round>
      <input>1.5</input>
      <output>2</output>
    </math_round>
    <math_round>
      <input>1.75</input>
      <output>2</output>
    </math_round>
  </TestMathUnit>
  <TestPath>
    <path_change_extension>
      <input></input>
      <ext></ext>
      <output></output>
      <return></return>
    </path_change_extension>
    <path_change_extension>
      <input>C:\1.txt</input>
      <ext>.txt</ext>
      <output>C:\1.txt</output>
      <return>1</return>
    </path_change_extension>
    <path_change_extension>
      <input>C:\1.txt</input>
      <ext>.exe</ext>
      <output>C:\1.exe</output>
      <return>1</return>
    </path_change_extension>
    <path_combine>
      <path1></path1>
      <path2></path2>
      <output></output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:\</path1>
      <path2>\Windows</path2>
      <output>C:\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1></path1>
      <path2>\Windows</path2>
      <output>\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:\</path1>
      <path2></path2>
      <output>C:\</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:/</path1>
      <path2>/Windows</path2>
      <output>C:\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1></path1>
      <path2>/Windows</path2>
      <output>\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:/</path1>
      <path2></path2>
      <output>C:\</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:/</path1>
      <path2>\Windows</path2>
      <output>C:\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-windows()}">
      <path1>C:\</path1>
      <path2>/Windows</path2>
      <output>C:\Windows</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>/tmp/</path1>
      <path2>/file</path2>
      <output>/tmp/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1></path1>
      <path2>/file</path2>
      <output>/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>/tmp/</path1>
      <path2></path2>
      <output>/tmp/</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>/tmp/</path1>
      <path2>\file</path2>
      <output>/tmp/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1></path1>
      <path2>\file</path2>
      <output>/file</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>\tmp/</path1>
      <path2></path2>
      <output>/tmp/</output>
      <return>1</return>
    </path_combine>
    <path_combine if="${platform::is-unix()}">
      <path1>\tmp\</path1>
      <path2>/file</path2>
      <output>/tmp/file</output>
      <return>1</return>
    </path_combine>
    <path_get_directory_name>
      <path></path>
      <return></return>
      <directory></directory>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-windows()}">
      <path>C:\Windows\System32\cmd.exe</path>
      <directory>C:\Windows\System32</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-unix()}">
      <path>/tmp/file</path>
      <directory>/tmp</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-windows()}">
      <path>C:\Temp</path>
      <directory>C:</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-windows()}">
      <path>C:\Temp\</path>
      <directory>C:\Temp</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-unix()}">
      <path>/tmp</path>
      <directory>/</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_directory_name if="${platform::is-unix()}">
      <path>/tmp/</path>
      <directory>/tmp</directory>
      <return>1</return>
    </path_get_directory_name>
    <path_get_extension>
      <path></path>
      <ext></ext>
      <return></return>
    </path_get_extension>
    <path_get_extension>
      <path>1.txt</path>
      <ext>.txt</ext>
      <return>1</return>
    </path_get_extension>
    <path_get_extension>
      <path>1.</path>
      <ext></ext>
      <return></return>
    </path_get_extension>
    <path_get_file_name>
      <path></path>
      <file_name></file_name>
      <return></return>
    </path_get_file_name>
    <path_get_file_name if="${platform::is-windows()}">
      <path>C:\Windows\System32\cmd.exe</path>
      <file_name>cmd.exe</file_name>
      <return>1</return>
    </path_get_file_name>
    <path_get_file_name if="${platform::is-unix()}">
      <path>/tmp/file</path>
      <file_name>file</file_name>
      <return>1</return>
    </path_get_file_name>
    <path_get_file_name_without_extension>
      <path></path>
      <file_name></file_name>
      <return></return>
    </path_get_file_name_without_extension>
    <path_get_file_name_without_extension>
      <path>1.txt</path>
      <file_name>1</file_name>
      <return>1</return>
    </path_get_file_name_without_extension>
    <path_get_file_name_without_extension>
      <path>abc.txt</path>
      <file_name>abc</file_name>
      <return>1</return>
    </path_get_file_name_without_extension>
    <path_get_full_path>
      <root_path></root_path>
      <path></path>
      <full_path></full_path>
      <return></return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-windows()}">
      <root_path>C:\</root_path>
      <path>C:\Windows\System32</path>
      <full_path>C:\Windows\System32</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-windows()}">
      <root_path>C:\Windows\System32</root_path>
      <path>..\..\</path>
      <full_path>C:\</full_path>
      <return>1</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-windows()}">
      <root_path>C:\</root_path>
      <path>..\..\</path>
      <full_path></full_path>
      <return>0</return>
    </path_get_full_path>
    <path_get_full_path if="${platform::is-unix()}">
      <root_path>/tmp</root_path>
      <path>../</path>
      <full_path>/</full_path>
      <return>1</return>
    </path_get_full_path>
    <TODO><path_get_full_path if="${platform::is-unix()}">
      <root_path>/tmp</root_path>
      <root_path_length>4</root_path_length>
      <path>/..</path>
      <path_length>3</path_length>
      <full_path>/</full_path>
      <return>1</return>
    </path_get_full_path></TODO>
    <path_get_full_path if="${platform::is-windows()}">
      <root_path>C:\</root_path>
      <root_path_length>3</root_path_length>
      <path>sample.build</path>
      <path_length>12</path_length>
      <full_path>C:\sample.build</full_path>
      <return>1</return>
    </path_get_full_path>
  </TestPath>
  <TestProject>
    <project_property_set_value>
      <code><![CDATA[]]></code>
      <property>
        <return></return>
      </property>
    </project_property_set_value>
    <project_property_set_value>
      <code><![CDATA[]]></code>
      <property name="a" value="" overwrite="false" readonly="true">
        <return>1</return>
      </property>
    </project_property_set_value>
    <project_load_from_content>
      <content><![CDATA[]]></content>
      <return></return>
    </project_load_from_content>
    <project_load_from_content>
      <content>
        <![CDATA[
        <project name = "Example project." default="Say hello.">
          <description>This is a sample project for a test case.</description>
          <target name="Say hello." if="${string::contains('Abc', 'A')}">
            <echo message="Hello! Do you know that last-index-of('ABAB', 'B') is ${string::last-index-of('ABAB', 'B')}?" />
          </target>
        </project>
        ]]>
      </content>
      <return>1</return>
      <name>Example project.</name>
      <default>Say hello.</default>
      <target>Say hello.</target>
    </project_load_from_content>
    <project_load_from_content>
      <content>
        <![CDATA[
        <project name="property_test-110-issuecomment-68567200">
          <echo message="Message one - '${property.one}'." if="${property::exists('property.one')}"/>
          <echo message="Second message. Only this message will be displayed if no property set." level="None"/>
        </project>
        ]]>
      </content>
      <return>1</return>
      <name>property_test-110-issuecomment-68567200</name>
    </project_load_from_content>
    <project_load_from_content>
      <content>
        <![CDATA[
        <project name="discriminant">
          <description>Calculate 'real' solution(s) of quadratic polynomial.</description>

          <!--property name="a" value="2" overwrite="false" readonly="true" />
          <property name="b" value="0" overwrite="false" readonly="true" />
          <property name="c" value="-64" overwrite="false" readonly="true" /-->

          <property name="a" value="1" overwrite="false" readonly="true" />
          <property name="b" value="0" overwrite="false" readonly="true" />
          <property name="c" value="-16" overwrite="false" readonly="true" />

          <!--property name="a" value="6" overwrite="false" readonly="true" />
          <property name="b" value="11" overwrite="false" readonly="true" />
          <property name="c" value="-35" overwrite="false" readonly="true" /-->

          <!--property name="a" value="2" overwrite="false" readonly="true" />
          <property name="b" value="-4" overwrite="false" readonly="true" />
          <property name="c" value="-2" overwrite="false" readonly="true" /-->

          <!--property name="a" value="-4" overwrite="false" readonly="true" />
          <property name="b" value="-7" overwrite="false" readonly="true" />
          <property name="c" value="12" overwrite="false" readonly="true" /-->

          <!--property name="a" value="20" overwrite="false" readonly="true" />
          <property name="b" value="-15" overwrite="false" readonly="true" />
          <property name="c" value="-10" overwrite="false" readonly="true" /-->

          <!--property name="a" value="1" overwrite="false" readonly="true" />
          <property name="b" value="-1" overwrite="false" readonly="true" />
          <property name="c" value="-3" overwrite="false" readonly="true" /-->

          <!-- D = b * b -->
          <property
            name="D" value="${math::subtraction(math::pow(property::get-value('b'), '2'), math::multiplication('4', math::multiplication(property::get-value('a'), property::get-value('c'))))}"
            dynamic="true" overwrite="true" readonly="true" />

          <!--echo message="${property::get-value('D')}" /-->

          <!--property name="X1" value="${math::division(
                                                        math::addition(-property::get-value('b'), math::sqrt(property::get-value('D')),
                                                        math::multiplication('2', property::get-value('a'))
                                                     )}"
            dynamic="true" overwrite="true" readonly="true" /-->

          <property name="X1" value="${math::division(math::addition(math::multiplication('-1', property::get-value('b')), math::sqrt(property::get-value('D'))), math::multiplication('2', property::get-value('a')))}"
            dynamic="true" overwrite="true" readonly="true" />
          <property name="X2" value="${math::division(math::subtraction(math::multiplication('-1', property::get-value('b')), math::sqrt(property::get-value('D'))), math::multiplication('2', property::get-value('a')))}"
            dynamic="true" overwrite="true" readonly="true" />

          <echo message="The quadratic polynomial ${property::get-value('a')}x^2 + ${property::get-value('b')}x + ${property::get-value('c')} = 0 have next solution(s) X1 -> ${property::get-value('X1')} X2 -> ${property::get-value('X2')}"
                level="None" />
          <echo message="The quadratic polynomial ${property::get-value('a')}x^2 + ${property::get-value('b')}x + ${property::get-value('c')} = 0 have next solution(s) X1 -> ${math::truncate(property::get-value('X1'))} X2 -> ${math::truncate(property::get-value('X2'))}"
                level="None" />
        </project>
        ]]>
      </content>
      <return>1</return>
      <name>discriminant</name>
      <description>Calculate 'real' solution(s) of quadratic polynomial.</description>
    </project_load_from_content>
    <project_load_from_content>
      <content>
        <![CDATA[
        <project name="tasks_to_skip">
          <attrib if="false" />
          <call if="false" />
          <choose if="false" />
          <cl if="false" />
          <copy if="false" />
          <csc if="false" />
          <delete if="false" />
          <description if="false" />
          <echo if="false" />
          <exec if="false" />
          <fail if="false" />
          <foreach if="false" />
          <get if="false" />
          <gunzip if="false" />
          <if if="false" />
          <ilasm if="false" />
          <include if="false" />
          <lib if="false" />
          <link if="false" />
          <loadfile if="false" />
          <mail if="false" />
          <mc if="false" />
          <mkdir if="false" />
          <move if="false" />
          <project if="false" />
          <property if="false" />
          <rc if="false" />
          <readregistry if="false" />
          <regex if="false" />
          <regsvcs if="false" />
          <setenv if="false" />
          <sleep if="false" />
          <solution if="false" />
          <style if="false" />
          <tar if="false" />
          <touch if="false" />
          <trycatch if="false" />
          <tstamp if="false" />
          <untar if="false" />
          <unzip if="false" />
          <uptodate if="false" />
          <vbc if="false" />
          <vjc if="false" />
          <xmlpeek if="false" />
          <xmlpoke if="false" />
          <zip if="false" />
          <foo if="false" />
        </project>
        ]]>
      </content>
      <return>1</return>
      <name>tasks_to_skip</name>
    </project_load_from_content>
    <project><!-- project_load_from_content -->
      <content>
        <![CDATA[
        <project name="discriminant">
          <property name="a" value="1" overwrite="false" readonly="true" />
          <property name="b" value="0" overwrite="false" readonly="true" />
          <property name="c" value="-16" overwrite="false" readonly="true" />

          <property name="D" value="${math::subtraction(math::pow(b, '2'), math::multiplication('4', math::multiplication(a, c)))}" dynamic="true" overwrite="true" readonly="true" />
          <property name="X1" value="${math::division(math::addition(math::multiplication('-1', b), math::sqrt(D)), math::multiplication('2', a))}" dynamic="true" overwrite="true" readonly="true" />
          <property name="X2" value="${math::division(math::subtraction(math::multiplication('-1', b), math::sqrt(D)), math::multiplication('2', a))}" dynamic="true" overwrite="true" readonly="true" />

          <echo message="The quadratic polynomial ${property::get-value('a')}x^2 + ${property::get-value('b')}x + ${property::get-value('c')} = 0 have next solution(s) X1 -> ${math::truncate(X1)} X2 -> ${math::truncate(X2)}" level="None" />
        </project>
        ]]>
      </content>
      <return>1</return>
      <name>discriminant</name>
    </project>
    <project_load_from_content>
      <content>
        <![CDATA[
        <project name="project-properties" default="some_target">
          <echo message="Default target - ${project::get-default-target()}." level="None" />
          <echo message="Project name - ${project::get-name()}." level="None" />
        </project>
        ]]>
      </content>
      <return>1</return>
      <name>project-properties</name>
      <default>some_target</default>
    </project_load_from_content>
    <project_load_from_content>
      <content><![CDATA[
      <project name="loadfile sample">
        <property name="file" value="${path::get-temp-file-name()}" overwrite="true" readonly="true" />
        <echo message="${property::get-value('file')}" file="${property::get-value('file')}" />
        <!--echo message="${file}" file="${file}" /--><!-- TODO -->
        <loadfile file="${property::get-value('file')}" property="content" />
        <delete file="${property::get-value('file')}" />
        <echo message="${property::get-value('content')}" />
      </project>
      ]]></content>
      <return>1</return>
      <name>loadfile sample</name>
    </project_load_from_content>
    <project_load_from_build_file>
      <content>
        <![CDATA[
        ]]>
      </content>
      <return>0</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <content>
        <![CDATA[
        <project>
          <property name="property" value="A" />
          <property name="property" value="${property::get-value('property')} B C" />
        </project>
        ]]>
      </content>
      <return>1</return>
    </project_load_from_build_file>
    <project_load_from_build_file>
      <content>
        <![CDATA[
        <project name="project-properties" default="some_target">
          <echo message="Base directory - '${project::get-base-directory()}'." level="Info" />
          <echo message="Build file - '${project::get-buildfile-path()}'." level="Info" />
          <echo message="Build file uri - '${project::get-buildfile-uri()}'." level="Info" />
          <echo message="Default target - '${project::get-default-target()}'." level="Info" />
          <echo message="Project name - '${project::get-name()}'." level="Info" />
          <!--echo message="Program version - '${program::version()}'." level="Info" /-->
          <echo message="Current directory - '${program::current-directory()}'." level="Info" />
          <target name="some_target">
            <echo message="Hello from target '${target::get-current-target()}'." level="Info" />
          </target>
        </project>
        ]]>
      </content>
      <return>1</return>
      <name>project-properties</name>
      <default>some_target</default>
    </project_load_from_build_file>
  </TestProject>
  <TestProperty>
    <property_task>
      <properties>
        <property name="property_name" value="property value" dynamic="false" overwrite="false" readonly="true" failonerror="false" verbose="false" />
      </properties>
      <record><![CDATA[name="debug" value="true"]]></record>
      <return>1</return>
      <output_properties>
        <property name="property_name" value="property value" dynamic="false" overwrite="false" readonly="true" failonerror="false" verbose="false" />
        <property name="debug" value="true" dynamic="false" overwrite="true" readonly="false" failonerror="true" verbose="false" />
      </output_properties>
    </property_task>
  </TestProperty>
  <TestStringUnit>
    <string_get_length>
      <input></input>
      <return></return>
    </string_get_length>
    <string_get_length>
      <input> </input>
      <return>1</return>
    </string_get_length>
    <string_get_length>
      <input>  </input>
      <return>2</return>
    </string_get_length>
    <string_get_length>
      <input>&#x7e;</input>
      <return>1</return>
    </string_get_length>
    <string_get_length>
      <input>&#xa1;</input>
      <return>1</return>
    </string_get_length>
    <string_get_length>
      <input>&#xa1;&#x07ff;</input>
      <return>2</return>
    </string_get_length>
    <string_get_length>
      <input>&#xa1;&#x08a0;</input>
      <return>2</return>
    </string_get_length>
    <string_get_length>
      <input>&#x08a0;</input>
      <return>1</return>
    </string_get_length>
    <string_get_length>
      <input>&#x08a0;&#xffee;</input>
      <return>2</return>
    </string_get_length>
    <string_index_of_any>
      <input></input>
      <value></value>
      <step>1</step>
      <return>-1</return>
    </string_index_of_any>
    <string_index_of_any>
      <input>""</input>
      <value>""</value>
      <step>1</step>
      <return>0</return>
    </string_index_of_any>
    <string_index_of_any>
      <input>123</input>
      <value>3</value>
      <step>1</step>
      <return>2</return>
    </string_index_of_any>
    <string_index_of_any>
      <input></input>
      <value></value>
      <step>-1</step>
      <return>-1</return>
    </string_index_of_any>
    <string_index_of_any>
      <input>""</input>
      <value>""</value>
      <step>-1</step>
      <return>0</return>
    </string_index_of_any>
    <string_index_of_any>
      <input>123</input>
      <value>3</value>
      <step>-1</step>
      <return>2</return>
    </string_index_of_any>
    <string_index_of_any>
      <input>123</input>
      <value>1</value>
      <step>-1</step>
      <return>0</return>
    </string_index_of_any>
    <string_pad>
      <input></input>
      <value> </value>
      <length>1</length>
      <return>1</return>
      <output> </output>
      <side>right</side>
    </string_pad>
    <string_replace>
      <input></input>
      <to_be_replaced></to_be_replaced>
      <by_replacement></by_replacement>
      <output></output>
      <return>0</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>b</to_be_replaced>
      <by_replacement>ABC</by_replacement>
      <output>aABCc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>bc1</to_be_replaced>
      <by_replacement></by_replacement>
      <output>a23</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>bc1</to_be_replaced>
      <by_replacement>b01</by_replacement>
      <output>ab0123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>bc1</to_be_replaced>
      <by_replacement>01</by_replacement>
      <output>a0123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement></by_replacement>
      <output>abc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement>4</by_replacement>
      <output>abc4</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement>456</by_replacement>
      <output>abc456</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement>123</by_replacement>
      <output>abc123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>123</to_be_replaced>
      <by_replacement>123456</by_replacement>
      <output>abc123456</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>3</to_be_replaced>
      <by_replacement>1</by_replacement>
      <output>abc121</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc123</input>
      <to_be_replaced>3</to_be_replaced>
      <by_replacement>3</by_replacement>
      <output>abc123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>abc</to_be_replaced>
      <by_replacement>123</by_replacement>
      <output>123</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>a</to_be_replaced>
      <by_replacement>1</by_replacement>
      <output>1bc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>a</to_be_replaced>
      <by_replacement></by_replacement>
      <output>bc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>a</to_be_replaced>
      <by_replacement>ABCa</by_replacement>
      <output>ABCabc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>abc</input>
      <to_be_replaced>a</to_be_replaced>
      <by_replacement>a</by_replacement>
      <output>abc</output>
      <return>1</return>
    </string_replace>
    <string_replace>
      <input>
        <![CDATA[
Pinging 127.0.0.1 with 32 bytes of data:
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128

Ping statistics for 127.0.0.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms
        ]]>
      </input>
      <to_be_replaced>&#xA;</to_be_replaced>
      <by_replacement>&#xA;[Info]: </by_replacement>
      <output>
        <![CDATA[
[Info]: Pinging 127.0.0.1 with 32 bytes of data:
[Info]: Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
[Info]: Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
[Info]: Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
[Info]: Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
[Info]: 
[Info]: Ping statistics for 127.0.0.1:
[Info]:     Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
[Info]: Approximate round trip times in milli-seconds:
[Info]:     Minimum = 0ms, Maximum = 0ms, Average = 0ms
[Info]:         ]]>
      </output>
      <return>1</return>
    </string_replace>
    <string_starts_with input="" value="" return="false" />
    <string_starts_with input="" value="A" return="false" />
    <string_starts_with input=" " value=" " return="true" />
    <string_starts_with input="AB" value="CD" return="false" />
    <string_starts_with input="ABCD" value="AB" return="true" />
    <string_transform_to_case>
      <input></input>
      <letter_case></letter_case>
      <output></output>
      <return></return>
    </string_transform_to_case>
    <string_transform_to_case>
      <input>Abc</input>
      <letter_case>upper</letter_case>
      <output>ABC</output>
      <return>1</return>
    </string_transform_to_case>
    <string_transform_to_case>
      <input>ABC</input>
      <letter_case>upper</letter_case>
      <output>ABC</output>
      <return>1</return>
    </string_transform_to_case>
    <string_transform_to_case>
      <input>Abc</input>
      <letter_case>lower</letter_case>
      <output>abc</output>
      <return>1</return>
    </string_transform_to_case>
    <string_transform_to_case>
      <input>ABC</input>
      <letter_case>lower</letter_case>
      <output>abc</output>
      <return>1</return>
    </string_transform_to_case>
    <string_trim>
      <input></input>
      <input_length></input_length>
      <mode>12</mode><!-- string_trim_mode_all -->
      <output></output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> </input>
      <input_length>1</input_length>
      <mode>12</mode><!-- string_trim_mode_all -->
      <output></output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc </input>
      <input_length>5</input_length>
      <mode>12</mode><!-- string_trim_mode_all -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc</input>
      <input_length>4</input_length>
      <mode>12</mode><!-- string_trim_mode_all -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc </input>
      <input_length>4</input_length>
      <mode>12</mode><!-- string_trim_mode_all -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc</input>
      <input_length>3</input_length>
      <mode>12</mode><!-- string_trim_mode_all -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>.txt</input>
      <input_length>4</input_length>
      <mode>12</mode><!-- string_trim_mode_end -->
      <output>.txt</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc </input>
      <input_length>5</input_length>
      <mode>14</mode><!-- string_trim_mode_start -->
      <output>abc </output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc</input>
      <input_length>4</input_length>
      <mode>14</mode><!-- string_trim_mode_start -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc </input>
      <input_length>4</input_length>
      <mode>14</mode><!-- string_trim_mode_start -->
      <output>abc </output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc</input>
      <input_length>3</input_length>
      <mode>14</mode><!-- string_trim_mode_start -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> </input>
      <input_length>1</input_length>
      <mode>13</mode><!-- string_trim_mode_end -->
      <output></output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>.txt</input>
      <input_length>4</input_length>
      <mode>13</mode><!-- string_trim_mode_end -->
      <output>.txt</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc </input>
      <input_length>5</input_length>
      <mode>13</mode><!-- string_trim_mode_end -->
      <output> abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input> abc</input>
      <input_length>4</input_length>
      <mode>13</mode><!-- string_trim_mode_end -->
      <output> abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc </input>
      <input_length>4</input_length>
      <mode>13</mode><!-- string_trim_mode_end -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc</input>
      <input_length>3</input_length>
      <mode>13</mode><!-- string_trim_mode_end -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abcd</input>
      <input_length>3</input_length>
      <mode>13</mode><!-- string_trim_mode_end -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_trim>
      <input>abc d</input>
      <input_length>4</input_length>
      <mode>13</mode><!-- string_trim_mode_end -->
      <output>abc</output>
      <return>1</return>
    </string_trim>
    <string_quote>
      <input></input>
      <return>1</return>
      <output>""</output>
    </string_quote>
    <string_quote>
      <input>a b c</input>
      <return>1</return>
      <output>"a b c"</output>
    </string_quote>
    <string_un_quote>
      <input></input>
      <return>1</return>
      <output></output>
    </string_un_quote>
    <string_un_quote>
      <input>"</input>
      <return>1</return>
      <output></output>
    </string_un_quote>
    <string_un_quote>
      <input>"a b c"</input>
      <return>1</return>
      <output>a b c</output>
    </string_un_quote>
    <string_un_quote>
      <input>""a b c""</input>
      <return>1</return>
      <output>a b c</output>
    </string_un_quote>
    <string_un_quote>
      <input>''</input>
      <return>1</return>
      <output></output>
    </string_un_quote>
    <string_un_quote>
      <input>""</input>
      <return>1</return>
      <output></output>
    </string_un_quote>
    <string_equal>
      <input_1></input_1>
      <input_2></input_2>
      <return>1</return>
    </string_equal>
    <string_equal>
      <input_1>a</input_1>
      <input_2>b</input_2>
      <return>0</return>
    </string_equal>
    <string_equal>
      <input_1>c</input_1>
      <input_2>c</input_2>
      <return>1</return>
    </string_equal>
  </TestStringUnit>
  <TestTextEncoding>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>874</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0x2026 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>

      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1250</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0xFFFD 0x201E 0x2026 0x2020 0x2021 0xFFFD 0x2030 0x0160 0x2039 0x015A 0x0164 0x017D 0x0179 </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0x2122 0x0161 0x203A 0x015B 0x0165 0x017E 0x017A </output>
      <output>0x00A0 0x02C7 0x02D8 0x0141 0x00A4 0x0104 0x00A6 0x00A7 0x00A8 0x00A9 0x015E 0x00AB 0x00AC 0x00AD 0x00AE 0x017B </output>
      <output>0x00B0 0x00B1 0x02DB 0x0142 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x0105 0x015F 0x00BB 0x013D 0x02DD 0x013E 0x017C </output>
      <output>0x0154 0x00C1 0x00C2 0x0102 0x00C4 0x0139 0x0106 0x00C7 0x010C 0x00C9 0x0118 0x00CB 0x011A 0x00CD 0x00CE 0x010E </output>
      <output>0x0110 0x0143 0x0147 0x00D3 0x00D4 0x0150 0x00D6 0x00D7 0x0158 0x016E 0x00DA 0x0170 0x00DC 0x00DD 0x0162 0x00DF </output>
      <output>0x0155 0x00E1 0x00E2 0x0103 0x00E4 0x013A 0x0107 0x00E7 0x010D 0x00E9 0x0119 0x00EB 0x011B 0x00ED 0x00EE 0x010F </output>
      <output>0x0111 0x0144 0x0148 0x00F3 0x00F4 0x0151 0x00F6 0x00F7 0x0159 0x016F 0x00FA 0x0171 0x00FC 0x00FD 0x0163 0x02D9 </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1251</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x0402 0x0403 0x201A 0x0453 0x201E 0x2026 0x2020 0x2021 0x20AC 0x2030 0x0409 0x2039 0x040A 0x040C 0x040B 0x040F </output>
      <output>0x0452 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0x2122 0x0459 0x203A 0x045A 0x045C 0x045B 0x045F </output>
      <output>0x00A0 0x040E 0x045E 0x0408 0x00A4 0x0490 0x00A6 0x00A7 0x0401 0x00A9 0x0404 0x00AB 0x00AC 0x00AD 0x00AE 0x0407 </output>
      <output>0x00B0 0x00B1 0x0406 0x0456 0x0491 0x00B5 0x00B6 0x00B7 0x0451 0x2116 0x0454 0x00BB 0x0458 0x0405 0x0455 0x0457 </output>
      <output>0x0410 0x0411 0x0412 0x0413 0x0414 0x0415 0x0416 0x0417 0x0418 0x0419 0x041A 0x041B 0x041C 0x041D 0x041E 0x041F </output>
      <output>0x0420 0x0421 0x0422 0x0423 0x0424 0x0425 0x0426 0x0427 0x0428 0x0429 0x042A 0x042B 0x042C 0x042D 0x042E 0x042F </output>
      <output>0x0430 0x0431 0x0432 0x0433 0x0434 0x0435 0x0436 0x0437 0x0438 0x0439 0x043A 0x043B 0x043C 0x043D 0x043E 0x043F </output>
      <output>0x0440 0x0441 0x0442 0x0443 0x0444 0x0445 0x0446 0x0447 0x0448 0x0449 0x044A 0x044B 0x044C 0x044D 0x044E 0x044F </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1252</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0x0160 0x2039 0x0152 0xFFFD 0x017D 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x02DC 0x2122 0x0161 0x203A 0x0153 0xFFFD 0x017E 0x0178 </output>
      <output>0x00A0 0x00A1 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x00AA 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x00BA 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF </output>
      <output>0x00C0 0x00C1 0x00C2 0x00C3 0x00C4 0x00C5 0x00C6 0x00C7 0x00C8 0x00C9 0x00CA 0x00CB 0x00CC 0x00CD 0x00CE 0x00CF </output>
      <output>0x00D0 0x00D1 0x00D2 0x00D3 0x00D4 0x00D5 0x00D6 0x00D7 0x00D8 0x00D9 0x00DA 0x00DB 0x00DC 0x00DD 0x00DE 0x00DF </output>
      <output>0x00E0 0x00E1 0x00E2 0x00E3 0x00E4 0x00E5 0x00E6 0x00E7 0x00E8 0x00E9 0x00EA 0x00EB 0x00EC 0x00ED 0x00EE 0x00EF </output>
      <output>0x00F0 0x00F1 0x00F2 0x00F3 0x00F4 0x00F5 0x00F6 0x00F7 0x00F8 0x00F9 0x00FA 0x00FB 0x00FC 0x00FD 0x00FE 0x00FF </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1253</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0xFFFD 0x2030 0xFFFD 0x2039 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0x2122 0xFFFD 0x203A 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0x00A0 0x0385 0x0386 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0xFFFD 0x00AB 0x00AC 0x00AD 0x00AE 0x2015 </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x0384 0x00B5 0x00B6 0x00B7 0x0388 0x0389 0x038A 0x00BB 0x038C 0x00BD 0x038E 0x038F </output>
      <output>0x0390 0x0391 0x0392 0x0393 0x0394 0x0395 0x0396 0x0397 0x0398 0x0399 0x039A 0x039B 0x039C 0x039D 0x039E 0x039F </output>
      <output>0x03A0 0x03A1 0xFFFD 0x03A3 0x03A4 0x03A5 0x03A6 0x03A7 0x03A8 0x03A9 0x03AA 0x03AB 0x03AC 0x03AD 0x03AE 0x03AF </output>
      <output>0x03B0 0x03B1 0x03B2 0x03B3 0x03B4 0x03B5 0x03B6 0x03B7 0x03B8 0x03B9 0x03BA 0x03BB 0x03BC 0x03BD 0x03BE 0x03BF </output>
      <output>0x03C0 0x03C1 0x03C2 0x03C3 0x03C4 0x03C5 0x03C6 0x03C7 0x03C8 0x03C9 0x03CA 0x03CB 0x03CC 0x03CD 0x03CE 0xFFFD </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1254</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0x0160 0x2039 0x0152 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x02DC 0x2122 0x0161 0x203A 0x0153 0xFFFD 0xFFFD 0x0178 </output>
      <output>0x00A0 0x00A1 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x00AA 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x00BA 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF </output>
      <output>0x00C0 0x00C1 0x00C2 0x00C3 0x00C4 0x00C5 0x00C6 0x00C7 0x00C8 0x00C9 0x00CA 0x00CB 0x00CC 0x00CD 0x00CE 0x00CF </output>
      <output>0x011E 0x00D1 0x00D2 0x00D3 0x00D4 0x00D5 0x00D6 0x00D7 0x00D8 0x00D9 0x00DA 0x00DB 0x00DC 0x0130 0x015E 0x00DF </output>
      <output>0x00E0 0x00E1 0x00E2 0x00E3 0x00E4 0x00E5 0x00E6 0x00E7 0x00E8 0x00E9 0x00EA 0x00EB 0x00EC 0x00ED 0x00EE 0x00EF </output>
      <output>0x011F 0x00F1 0x00F2 0x00F3 0x00F4 0x00F5 0x00F6 0x00F7 0x00F8 0x00F9 0x00FA 0x00FB 0x00FC 0x0131 0x015F 0x00FF </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1255</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0xFFFD 0x2039 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x02DC 0x2122 0xFFFD 0x203A 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0x00A0 0x00A1 0x00A2 0x00A3 0x20AA 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x00D7 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x00F7 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF </output>
      <output>0x05B0 0x05B1 0x05B2 0x05B3 0x05B4 0x05B5 0x05B6 0x05B7 0x05B8 0x05B9 0xFFFD 0x05BB 0x05BC 0x05BD 0x05BE 0x05BF </output>
      <output>0x05C0 0x05C1 0x05C2 0x05C3 0x05F0 0x05F1 0x05F2 0x05F3 0x05F4 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0x05D0 0x05D1 0x05D2 0x05D3 0x05D4 0x05D5 0x05D6 0x05D7 0x05D8 0x05D9 0x05DA 0x05DB 0x05DC 0x05DD 0x05DE 0x05DF </output>
      <output>0x05E0 0x05E1 0x05E2 0x05E3 0x05E4 0x05E5 0x05E6 0x05E7 0x05E8 0x05E9 0x05EA 0xFFFD 0xFFFD 0x200E 0x200F 0xFFFD </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1256</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0x067E 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0x0679 0x2039 0x0152 0x0686 0x0698 0x0688 </output>
      <output>0x06AF 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x06A9 0x2122 0x0691 0x203A 0x0153 0x200C 0x200D 0x06BA </output>
      <output>0x00A0 0x060C 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x06BE 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x061B 0x00BB 0x00BC 0x00BD 0x00BE 0x061F </output>
      <output>0x06C1 0x0621 0x0622 0x0623 0x0624 0x0625 0x0626 0x0627 0x0628 0x0629 0x062A 0x062B 0x062C 0x062D 0x062E 0x062F </output>
      <output>0x0630 0x0631 0x0632 0x0633 0x0634 0x0635 0x0636 0x00D7 0x0637 0x0638 0x0639 0x063A 0x0640 0x0641 0x0642 0x0643 </output>
      <output>0x00E0 0x0644 0x00E2 0x0645 0x0646 0x0647 0x0648 0x00E7 0x00E8 0x00E9 0x00EA 0x00EB 0x0649 0x064A 0x00EE 0x00EF </output>
      <output>0x064B 0x064C 0x064D 0x064E 0x00F4 0x064F 0x0650 0x00F7 0x0651 0x00F9 0x0652 0x00FB 0x00FC 0x200E 0x200F 0x06D2 </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1257</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0xFFFD 0x201E 0x2026 0x2020 0x2021 0xFFFD 0x2030 0xFFFD 0x2039 0xFFFD 0x00A8 0x02C7 0x00B8 </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0xFFFD 0x2122 0xFFFD 0x203A 0xFFFD 0x00AF 0x02DB 0xFFFD </output>
      <output>0x00A0 0xFFFD 0x00A2 0x00A3 0x00A4 0xFFFD 0x00A6 0x00A7 0x00D8 0x00A9 0x0156 0x00AB 0x00AC 0x00AD 0x00AE 0x00C6 </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00F8 0x00B9 0x0157 0x00BB 0x00BC 0x00BD 0x00BE 0x00E6 </output>
      <output>0x0104 0x012E 0x0100 0x0106 0x00C4 0x00C5 0x0118 0x0112 0x010C 0x00C9 0x0179 0x0116 0x0122 0x0136 0x012A 0x013B </output>
      <output>0x0160 0x0143 0x0145 0x00D3 0x014C 0x00D5 0x00D6 0x00D7 0x0172 0x0141 0x015A 0x016A 0x00DC 0x017B 0x017D 0x00DF </output>
      <output>0x0105 0x012F 0x0101 0x0107 0x00E4 0x00E5 0x0119 0x0113 0x010D 0x00E9 0x017A 0x0117 0x0123 0x0137 0x012B 0x013C </output>
      <output>0x0161 0x0144 0x0146 0x00F3 0x014D 0x00F5 0x00F6 0x00F7 0x0173 0x0142 0x015B 0x016B 0x00FC 0x017C 0x017E 0x02D9 </output>
    </text_encoding_UTF16LE_from_code_page>
    <text_encoding_UTF16LE_from_code_page>
      <input>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </input>
      <input>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </input>
      <input>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </input>
      <input>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </input>
      <input>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </input>
      <input>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </input>
      <input>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </input>
      <input>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </input>
      <input>0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87 0x88 0x89 0x8A 0x8B 0x8C 0x8D 0x8E 0x8F </input>
      <input>0x90 0x91 0x92 0x93 0x94 0x95 0x96 0x97 0x98 0x99 0x9A 0x9B 0x9C 0x9D 0x9E 0x9F </input>
      <input>0xA0 0xA1 0xA2 0xA3 0xA4 0xA5 0xA6 0xA7 0xA8 0xA9 0xAA 0xAB 0xAC 0xAD 0xAE 0xAF </input>
      <input>0xB0 0xB1 0xB2 0xB3 0xB4 0xB5 0xB6 0xB7 0xB8 0xB9 0xBA 0xBB 0xBC 0xBD 0xBE 0xBF </input>
      <input>0xC0 0xC1 0xC2 0xC3 0xC4 0xC5 0xC6 0xC7 0xC8 0xC9 0xCA 0xCB 0xCC 0xCD 0xCE 0xCF </input>
      <input>0xD0 0xD1 0xD2 0xD3 0xD4 0xD5 0xD6 0xD7 0xD8 0xD9 0xDA 0xDB 0xDC 0xDD 0xDE 0xDF </input>
      <input>0xE0 0xE1 0xE2 0xE3 0xE4 0xE5 0xE6 0xE7 0xE8 0xE9 0xEA 0xEB 0xEC 0xED 0xEE 0xEF </input>
      <input>0xF0 0xF1 0xF2 0xF3 0xF4 0xF5 0xF6 0xF7 0xF8 0xF9 0xFA 0xFB 0xFC 0xFD 0xFE 0xFF </input>
      <code_page>1258</code_page>
      <output>0x0  0x1  0x2  0x3  0x4  0x5  0x6  0x7  0x8  0x9  0xA  0xB  0xC  0xD  0xE  0xF  </output>
      <output>0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F </output>
      <output>0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x2A 0x2B 0x2C 0x2D 0x2E 0x2F </output>
      <output>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39 0x3A 0x3B 0x3C 0x3D 0x3E 0x3F </output>
      <output>0x40 0x41 0x42 0x43 0x44 0x45 0x46 0x47 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F </output>
      <output>0x50 0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58 0x59 0x5A 0x5B 0x5C 0x5D 0x5E 0x5F </output>
      <output>0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x69 0x6A 0x6B 0x6C 0x6D 0x6E 0x6F </output>
      <output>0x70 0x71 0x72 0x73 0x74 0x75 0x76 0x77 0x78 0x79 0x7A 0x7B 0x7C 0x7D 0x7E 0x7F </output>

      <output>0x20AC 0xFFFD 0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 0x02C6 0x2030 0xFFFD 0x2039 0x0152 0xFFFD 0xFFFD 0xFFFD </output>
      <output>0xFFFD 0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 0x02DC 0x2122 0xFFFD 0x203A 0x0153 0xFFFD 0xFFFD 0x0178 </output>
      <output>0x00A0 0x00A1 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 0x00A8 0x00A9 0x00AA 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF </output>
      <output>0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 0x00B8 0x00B9 0x00BA 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF </output>
      <output>0x00C0 0x00C1 0x00C2 0x0102 0x00C4 0x00C5 0x00C6 0x00C7 0x00C8 0x00C9 0x00CA 0x00CB 0x0300 0x00CD 0x00CE 0x00CF </output>
      <output>0x0110 0x00D1 0x0309 0x00D3 0x00D4 0x01A0 0x00D6 0x00D7 0x00D8 0x00D9 0x00DA 0x00DB 0x00DC 0x01AF 0x0303 0x00DF </output>
      <output>0x00E0 0x00E1 0x00E2 0x0103 0x00E4 0x00E5 0x00E6 0x00E7 0x00E8 0x00E9 0x00EA 0x00EB 0x0301 0x00ED 0x00EE 0x00EF </output>
      <output>0x0111 0x00F1 0x0323 0x00F3 0x00F4 0x01A1 0x00F6 0x00F7 0x00F8 0x00F9 0x00FA 0x00FB 0x00FC 0x01B0 0x20AB 0x00FF </output>
    </text_encoding_UTF16LE_from_code_page>
  </TestTextEncoding>
  <TestXml>
    <xml_get_tag_finish_pos>
      <input></input>
      <output></output>
    </xml_get_tag_finish_pos>
    <xml_get_tag_finish_pos>
      <input><![CDATA[<tag></tag>]]></input>
      <output><![CDATA[></tag>]]></output>
    </xml_get_tag_finish_pos>
    <xml_get_tag_finish_pos>
      <input><![CDATA[<tag comment="just some tag"></tag>]]></input>
      <output><![CDATA[></tag>]]></output>
    </xml_get_tag_finish_pos>
    <xml_get_tag_finish_pos>
      <input><![CDATA[<tag comment="just some tag" desription="read the comment"></tag>]]></input>
      <output><![CDATA[></tag>]]></output>
    </xml_get_tag_finish_pos>
    <xml_get_sub_nodes_elements>
      <input></input>
      <return></return>
    </xml_get_sub_nodes_elements>
    <xml_get_sub_nodes_elements>
      <input><![CDATA[<project></project>]]></input>
      <return>1</return>
      <output><![CDATA[project></project]]></output>
    </xml_get_sub_nodes_elements>
    <xml_get_sub_nodes_elements>
      <input><![CDATA[<project><!-- A --></project>]]></input>
      <return>1</return>
      <output><![CDATA[project><!-- A --></project]]></output>
    </xml_get_sub_nodes_elements>
    <xml_get_sub_nodes_elements>
      <input><![CDATA[<project><!-- A --> <tag comment="Hello! Look -> here."></tag> </project>]]></input>
      <return>1</return>
      <output><![CDATA[project><!-- A --> <tag comment="Hello! Look -> here."></tag> </project]]></output>
    </xml_get_sub_nodes_elements>
    <xml_get_tag_name>
      <input></input>
      <output></output>
      <return></return>
    </xml_get_tag_name>
    <xml_get_tag_name>
      <input><![CDATA[<tag></tag>]]></input>
      <output>tag</output>
      <return>1</return>
    </xml_get_tag_name>
    <xml_get_attribute_value>
      <input></input>
      <attribute></attribute>
      <output></output>
      <return></return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "">]]></input>
      <attribute>name</attribute>
      <output></output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "&#126;&#xa1;&#X07ff;">]]></input>
      <attribute>name</attribute>
      <output>&#126;&#xa1;&#x07ff;</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "&#126; &#xa1; &#X07ff;">]]></input>
      <attribute>name</attribute>
      <output>&#126; &#xa1; &#x07ff;</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "&lt;&gt;&amp;&apos;&quot;">]]></input>
      <attribute>name</attribute>
      <output>&lt;&gt;&amp;&apos;&quot;</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name = "example" default="hello">]]></input>
      <attribute>name</attribute>
      <output>example</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_attribute_value>
      <input><![CDATA[<project name="example" default="hello">]]></input>
      <attribute>name</attribute>
      <output>example</output>
      <return>1</return>
    </xml_get_attribute_value>
    <xml_get_element_value>
      <input></input>
      <output></output>
      <return></return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<project></project>]]></input>
      <output></output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<project />]]></input>
      <output></output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<project /><abc>123</abc>]]></input>
      <output></output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<abc>123</abc>]]></input>
      <output>123</output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<abc>&#126;&#xa1;&#X07ff;</abc>]]></input>
      <output>&#126;&#xa1;&#x07ff;</output>
      <return>1</return>
    </xml_get_element_value>
    <xml_get_element_value>
      <input><![CDATA[<abc>&#126; &#xa1; &#X07ff;</abc>]]></input>
      <output>&#126; &#xa1; &#x07ff;</output>
      <return>1</return>
    </xml_get_element_value>
  </TestXml>
</Tests>